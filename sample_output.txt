***********************
***** runOdbcTest *****
***********************
Running tests as 64 bit process...
strFolder [X:\cxb\parallels_shared\msi_git\duckdb_odbc_vbscript_test]
class_initialize
classOdbcTests configured to run 64bit
architecture reports:
    SYSTEM AMD64
    PROCESS AMD64
ODBC Providers: (took 0 seconds)
    SQL Server - Installed
    DuckDB Driver - Installed
    SQLite3 ODBC Driver - Installed


****************************************************
DuckDB driver found!
opendb(DUCKDB) --> Driver=DuckDB Driver;Database=test.duckdb;allow_unsigned_extensions=true;

QUERY  PRAGMA version;
Time   0.051 seconds
return 1 rows
library_version(adVarChar 200 ),source_id(adVarChar 200 )
v1.1.4-dev1904,fb7701fec0

QUERY  SELECT TIMESTAMP '1992-09-20 11:30:00.123456' as t;
Time   0.035 seconds
return 1 rows
t(adDBTimeStamp 135 )
9/20/1992 11:30:00 AM

QUERY  SELECT TIMESTAMP '1992-09-20 11:30:00.123456' as t;
Time   0.024 seconds
return 1 rows
t(adDBTimeStamp 135 )
9/20/1992 11:30:00 AM

QUERY  SELECT DATETIME '1992-09-20 11:30:00.123456' as t;
Time   0.02 seconds
return 1 rows
t(adDBTimeStamp 135 )
9/20/1992 11:30:00 AM

QUERY  SELECT DATE '1992-09-20 11:30:00.123456' as t;
Time   0.028 seconds
return 1 rows
t(adDBDate 133 )
t(adDBDate):9/20/1992 bin2str:9./.2.0./.1.9.9.2. hex:39002F00320030002F003100390039003200

QUERY  SELECT TIME '1992-09-20 11:30:00.123456' as t;
Time   0.028 seconds
return 1 rows
t(adDBTime 134 )
3/12/2025 11:30:00 AM

QUERY  SELECT TIME '1992-09-20 11:30:00.123456' as t;
Time   0.016 seconds
return 1 rows
t(adDBTime 134 )
3/12/2025 11:30:00 AM

QUERY  SELECT get_current_time() as t;
Time   0.028 seconds
return 1 rows
t(adDBTime 134 )
3/12/2025 1:49:13 PM

QUERY  SET log_query_path = '.\duck.log';
Time   0.016 seconds
return -1
ERROR  query did not return an open recordset|

QUERY  PRAGMA database_list;
Time   0.035 seconds
return 1 rows
seq(adBigInt 20 ),name(adVarChar 200 ),file(adVarChar 200 )
532,test,x:\cxb\parallels_shared\msi_git\duckdb_odbc_vbscript_test\test.duckdb

QUERY  PRAGMA database_size;
Time   0.031 seconds
return 1 rows
database_name(adVarChar 200 ),database_size(adVarChar 200 ),block_size(adBigInt 20 ),total_blocks(adBigInt 20 ),used_blocks(adBigInt 20 ),free_blocks(adBigInt 20 ),wal_size(adVarChar 200 ),memory_usage(adVarChar 200 ),memory_limit(adVarChar 200 )
test,0 bytes,262144,0,0,0,0 bytes,0 bytes,6.2 GiB

QUERY  PRAGMA show_tables;
Time   0.086 seconds
return -1
ERROR  recordset contains no records|

QUERY  PRAGMA show_tables_expanded;
Time   0.039 seconds
return -1
ERROR  recordset contains no records|

QUERY  PRAGMA table_info('cities');
Time   0.039 seconds
return -1
ERROR  -2147217911:ODBC_DuckDB->PrepareStmt
Catalog Error: Table with name cities does not exist!
Did you mean "pg_views"?


QUERY  PRAGMA collations;
Time   0.039 seconds
return 134 rows
collname(adVarChar 200 )
af
am
ar
ar_sa
as
az
be
bg
bn
bo
br
bs
ca
ceb
chr
cs
cy
da
de
de_at
dsb
dz
ee
el
en
en_us
eo
es
et
fa
fa_af
ff
fi
fil
fo
fr
fr_ca
fy
ga
gl
gu
ha
haw
he
he_il
hi
hr
hsb
hu
hy
icu_noaccent
id
id_id
ig
is
it
ja
ka
kk
kl
km
kn
ko
kok
ku
ky
lb
lkt
ln
lo
lt
lv
mk
ml
mn
mr
ms
mt
my
nb
nb_no
ne
nfc
nl
nn
noaccent
nocase
om
or
pa
pa_in
pl
ps
pt
ro
ru
sa
se
si
sk
sl
smn
sq
sr
sr_ba
sr_me
sr_rs
sv
sw
ta
te
th
tk
to
tr
ug
uk
ur
uz
vi
wae
wo
xh
yi
yo
yue
yue_cn
zh
zh_cn
zh_hk
zh_mo
zh_sg
zh_tw
zu

QUERY  PRAGMA storage_info('cities');
Time   0.039 seconds
return -1
ERROR  -2147217911:ODBC_DuckDB->PrepareStmt
Catalog Error: Table with name cities does not exist!
Did you mean "pg_views"?


QUERY  PRAGMA functions;
Time   0.328 seconds
return 2296 rows
name(adVarChar 200 ),type(adVarChar 200 ),parameters(adVarChar 200 ),varargs(adVarChar 200 ),return_type(adVarChar 200 ),side_effects(adChar 129 )
!__postfix,SCALAR,[INTEGER],,HUGEINT,f
!~~,SCALAR,[VARCHAR, VARCHAR],,BOOLEAN,f
!~~*,SCALAR,[VARCHAR, VARCHAR],,BOOLEAN,f
%,SCALAR,[TINYINT, TINYINT],,TINYINT,f
%,SCALAR,[SMALLINT, SMALLINT],,SMALLINT,f
%,SCALAR,[INTEGER, INTEGER],,INTEGER,f
%,SCALAR,[BIGINT, BIGINT],,BIGINT,f
%,SCALAR,[HUGEINT, HUGEINT],,HUGEINT,f
%,SCALAR,[FLOAT, FLOAT],,FLOAT,f
%,SCALAR,[DOUBLE, DOUBLE],,DOUBLE,f
%,SCALAR,[DECIMAL, DECIMAL],,DECIMAL,f
%,SCALAR,[UTINYINT, UTINYINT],,UTINYINT,f
%,SCALAR,[USMALLINT, USMALLINT],,USMALLINT,f
%,SCALAR,[UINTEGER, UINTEGER],,UINTEGER,f
%,SCALAR,[UBIGINT, UBIGINT],,UBIGINT,f
%,SCALAR,[UHUGEINT, UHUGEINT],,UHUGEINT,f
&,SCALAR,[USMALLINT, USMALLINT],,USMALLINT,f
&,SCALAR,[SMALLINT, SMALLINT],,SMALLINT,f
&,SCALAR,[INTEGER, INTEGER],,INTEGER,f
&,SCALAR,[BIGINT, BIGINT],,BIGINT,f
&,SCALAR,[HUGEINT, HUGEINT],,HUGEINT,f
&,SCALAR,[UTINYINT, UTINYINT],,UTINYINT,f
&,SCALAR,[TINYINT, TINYINT],,TINYINT,f
&,SCALAR,[UINTEGER, UINTEGER],,UINTEGER,f
&,SCALAR,[UBIGINT, UBIGINT],,UBIGINT,f
&,SCALAR,[UHUGEINT, UHUGEINT],,UHUGEINT,f
&,SCALAR,[BIT, BIT],,BIT,f
&&,SCALAR,[ANY[], ANY[]],,BOOLEAN,f
*,SCALAR,[INTEGER, INTEGER],,INTEGER,f
*,SCALAR,[SMALLINT, SMALLINT],,SMALLINT,f
*,SCALAR,[TINYINT, TINYINT],,TINYINT,f
*,SCALAR,[BIGINT, BIGINT],,BIGINT,f
*,SCALAR,[HUGEINT, HUGEINT],,HUGEINT,f
*,SCALAR,[FLOAT, FLOAT],,FLOAT,f
*,SCALAR,[DOUBLE, DOUBLE],,DOUBLE,f
*,SCALAR,[DECIMAL, DECIMAL],,DECIMAL,f
*,SCALAR,[UTINYINT, UTINYINT],,UTINYINT,f
*,SCALAR,[USMALLINT, USMALLINT],,USMALLINT,f
*,SCALAR,[UINTEGER, UINTEGER],,UINTEGER,f
*,SCALAR,[UBIGINT, UBIGINT],,UBIGINT,f
*,SCALAR,[UHUGEINT, UHUGEINT],,UHUGEINT,f
*,SCALAR,[INTERVAL, BIGINT],,INTERVAL,f
*,SCALAR,[BIGINT, INTERVAL],,INTERVAL,f
**,SCALAR,[DOUBLE, DOUBLE],,DOUBLE,f
+,SCALAR,[TIME, DATE],,TIMESTAMP,f
+,SCALAR,[INTERVAL, TIMESTAMP WITH TIME ZONE],,TIMESTAMP WITH TIME ZONE,f
+,SCALAR,[SMALLINT],,SMALLINT,f
+,SCALAR,[SMALLINT, SMALLINT],,SMALLINT,f
+,SCALAR,[INTEGER],,INTEGER,f
+,SCALAR,[INTEGER, INTEGER],,INTEGER,f
+,SCALAR,[BIGINT],,BIGINT,f
+,SCALAR,[BIGINT, BIGINT],,BIGINT,f
+,SCALAR,[HUGEINT],,HUGEINT,f
+,SCALAR,[HUGEINT, HUGEINT],,HUGEINT,f
+,SCALAR,[FLOAT],,FLOAT,f
+,SCALAR,[FLOAT, FLOAT],,FLOAT,f
+,SCALAR,[DOUBLE],,DOUBLE,f
+,SCALAR,[DOUBLE, DOUBLE],,DOUBLE,f
+,SCALAR,[DECIMAL],,DECIMAL,f
+,SCALAR,[DECIMAL, DECIMAL],,DECIMAL,f
+,SCALAR,[UTINYINT],,UTINYINT,f
+,SCALAR,[UTINYINT, UTINYINT],,UTINYINT,f
+,SCALAR,[USMALLINT],,USMALLINT,f
+,SCALAR,[USMALLINT, USMALLINT],,USMALLINT,f
+,SCALAR,[UINTEGER],,UINTEGER,f
+,SCALAR,[UINTEGER, UINTEGER],,UINTEGER,f
+,SCALAR,[UBIGINT],,UBIGINT,f
+,SCALAR,[UBIGINT, UBIGINT],,UBIGINT,f
+,SCALAR,[UHUGEINT],,UHUGEINT,f
+,SCALAR,[UHUGEINT, UHUGEINT],,UHUGEINT,f
+,SCALAR,[DATE, INTEGER],,DATE,f
+,SCALAR,[INTEGER, DATE],,DATE,f
+,SCALAR,[INTERVAL, INTERVAL],,INTERVAL,f
+,SCALAR,[DATE, INTERVAL],,TIMESTAMP,f
+,SCALAR,[INTERVAL, DATE],,TIMESTAMP,f
+,SCALAR,[TIME, INTERVAL],,TIME,f
+,SCALAR,[INTERVAL, TIME],,TIME,f
+,SCALAR,[TIMESTAMP, INTERVAL],,TIMESTAMP,f
+,SCALAR,[INTERVAL, TIMESTAMP],,TIMESTAMP,f
+,SCALAR,[TIME WITH TIME ZONE, INTERVAL],,TIME WITH TIME ZONE,f
+,SCALAR,[INTERVAL, TIME WITH TIME ZONE],,TIME WITH TIME ZONE,f
+,SCALAR,[TINYINT],,TINYINT,f
+,SCALAR,[DATE, TIME],,TIMESTAMP,f
+,SCALAR,[TIME WITH TIME ZONE, DATE],,TIMESTAMP WITH TIME ZONE,f
+,SCALAR,[DATE, TIME WITH TIME ZONE],,TIMESTAMP WITH TIME ZONE,f
+,SCALAR,[ANY[], ANY[]],,ANY[],f
+,SCALAR,[TIMESTAMP WITH TIME ZONE, INTERVAL],,TIMESTAMP WITH TIME ZONE,f
+,SCALAR,[TINYINT, TINYINT],,TINYINT,f
-,SCALAR,[DECIMAL, DECIMAL],,DECIMAL,f
-,SCALAR,[TINYINT, TINYINT],,TINYINT,f
-,SCALAR,[SMALLINT],,SMALLINT,f
-,SCALAR,[SMALLINT, SMALLINT],,SMALLINT,f
-,SCALAR,[INTEGER],,INTEGER,f
-,SCALAR,[INTEGER, INTEGER],,INTEGER,f
-,SCALAR,[BIGINT],,BIGINT,f
-,SCALAR,[BIGINT, BIGINT],,BIGINT,f
-,SCALAR,[HUGEINT],,HUGEINT,f
-,SCALAR,[HUGEINT, HUGEINT],,HUGEINT,f
-,SCALAR,[FLOAT],,FLOAT,f
-,SCALAR,[FLOAT, FLOAT],,FLOAT,f
-,SCALAR,[DOUBLE],,DOUBLE,f
-,SCALAR,[DOUBLE, DOUBLE],,DOUBLE,f
-,SCALAR,[DECIMAL],,DECIMAL,f
-,SCALAR,[TINYINT],,TINYINT,f
-,SCALAR,[UTINYINT],,UTINYINT,f
-,SCALAR,[UTINYINT, UTINYINT],,UTINYINT,f
-,SCALAR,[USMALLINT],,USMALLINT,f
-,SCALAR,[USMALLINT, USMALLINT],,USMALLINT,f
-,SCALAR,[UINTEGER],,UINTEGER,f
-,SCALAR,[UINTEGER, UINTEGER],,UINTEGER,f
-,SCALAR,[UBIGINT],,UBIGINT,f
-,SCALAR,[UBIGINT, UBIGINT],,UBIGINT,f
-,SCALAR,[UHUGEINT],,UHUGEINT,f
-,SCALAR,[UHUGEINT, UHUGEINT],,UHUGEINT,f
-,SCALAR,[DATE, DATE],,BIGINT,f
-,SCALAR,[DATE, INTEGER],,DATE,f
-,SCALAR,[TIMESTAMP, TIMESTAMP],,INTERVAL,f
-,SCALAR,[INTERVAL, INTERVAL],,INTERVAL,f
-,SCALAR,[DATE, INTERVAL],,TIMESTAMP,f
-,SCALAR,[TIME, INTERVAL],,TIME,f
-,SCALAR,[TIMESTAMP, INTERVAL],,TIMESTAMP,f
-,SCALAR,[TIME WITH TIME ZONE, INTERVAL],,TIME WITH TIME ZONE,f
-,SCALAR,[INTERVAL],,INTERVAL,f
-,SCALAR,[TIMESTAMP WITH TIME ZONE, INTERVAL],,TIMESTAMP WITH TIME ZONE,f
-,SCALAR,[TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH TIME ZONE],,INTERVAL,f
->>,SCALAR,[VARCHAR, BIGINT],,VARCHAR,f
->>,SCALAR,[VARCHAR, VARCHAR],,VARCHAR,f
->>,SCALAR,[VARCHAR, VARCHAR[]],,VARCHAR[],f
->>,SCALAR,[JSON, BIGINT],,VARCHAR,f
->>,SCALAR,[JSON, VARCHAR],,VARCHAR,f
->>,SCALAR,[JSON, VARCHAR[]],,VARCHAR[],f
/,SCALAR,[FLOAT, FLOAT],,FLOAT,f
/,SCALAR,[DOUBLE, DOUBLE],,DOUBLE,f
/,SCALAR,[INTERVAL, BIGINT],,INTERVAL,f
//,SCALAR,[TINYINT, TINYINT],,TINYINT,f
//,SCALAR,[SMALLINT, SMALLINT],,SMALLINT,f
//,SCALAR,[INTEGER, INTEGER],,INTEGER,f
//,SCALAR,[BIGINT, BIGINT],,BIGINT,f
//,SCALAR,[HUGEINT, HUGEINT],,HUGEINT,f
//,SCALAR,[FLOAT, FLOAT],,FLOAT,f
//,SCALAR,[DOUBLE, DOUBLE],,DOUBLE,f
//,SCALAR,[UTINYINT, UTINYINT],,UTINYINT,f
//,SCALAR,[USMALLINT, USMALLINT],,USMALLINT,f
//,SCALAR,[UINTEGER, UINTEGER],,UINTEGER,f
//,SCALAR,[UBIGINT, UBIGINT],,UBIGINT,f
//,SCALAR,[UHUGEINT, UHUGEINT],,UHUGEINT,f
<->,SCALAR,[FLOAT[], FLOAT[]],,FLOAT,f
<->,SCALAR,[DOUBLE[], DOUBLE[]],,DOUBLE,f
<<,SCALAR,[TINYINT, TINYINT],,TINYINT,f
<<,SCALAR,[SMALLINT, SMALLINT],,SMALLINT,f
<<,SCALAR,[INTEGER, INTEGER],,INTEGER,f
<<,SCALAR,[BIGINT, BIGINT],,BIGINT,f
<<,SCALAR,[HUGEINT, HUGEINT],,HUGEINT,f
<<,SCALAR,[UTINYINT, UTINYINT],,UTINYINT,f
<<,SCALAR,[USMALLINT, USMALLINT],,USMALLINT,f
<<,SCALAR,[UINTEGER, UINTEGER],,UINTEGER,f
<<,SCALAR,[UBIGINT, UBIGINT],,UBIGINT,f
<<,SCALAR,[UHUGEINT, UHUGEINT],,UHUGEINT,f
<<,SCALAR,[BIT, INTEGER],,BIT,f
<=>,SCALAR,[FLOAT[], FLOAT[]],,FLOAT,f
<=>,SCALAR,[DOUBLE[], DOUBLE[]],,DOUBLE,f
<@,SCALAR,[ANY[], ANY[]],,BOOLEAN,f
>>,SCALAR,[UTINYINT, UTINYINT],,UTINYINT,f
>>,SCALAR,[SMALLINT, SMALLINT],,SMALLINT,f
>>,SCALAR,[INTEGER, INTEGER],,INTEGER,f
>>,SCALAR,[BIGINT, BIGINT],,BIGINT,f
>>,SCALAR,[HUGEINT, HUGEINT],,HUGEINT,f
>>,SCALAR,[TINYINT, TINYINT],,TINYINT,f
>>,SCALAR,[USMALLINT, USMALLINT],,USMALLINT,f
>>,SCALAR,[UINTEGER, UINTEGER],,UINTEGER,f
>>,SCALAR,[UBIGINT, UBIGINT],,UBIGINT,f
>>,SCALAR,[UHUGEINT, UHUGEINT],,UHUGEINT,f
>>,SCALAR,[BIT, INTEGER],,BIT,f
@,SCALAR,[BIGINT],,BIGINT,f
@,SCALAR,[TINYINT],,TINYINT,f
@,SCALAR,[SMALLINT],,SMALLINT,f
@,SCALAR,[INTEGER],,INTEGER,f
@,SCALAR,[HUGEINT],,HUGEINT,f
@,SCALAR,[FLOAT],,FLOAT,f
@,SCALAR,[DOUBLE],,DOUBLE,f
@,SCALAR,[DECIMAL],,DECIMAL,f
@,SCALAR,[UTINYINT],,UTINYINT,f
@,SCALAR,[USMALLINT],,USMALLINT,f
@,SCALAR,[UINTEGER],,UINTEGER,f
@,SCALAR,[UBIGINT],,UBIGINT,f
@,SCALAR,[UHUGEINT],,UHUGEINT,f
@>,SCALAR,[ANY[], ANY[]],,BOOLEAN,f
^,SCALAR,[DOUBLE, DOUBLE],,DOUBLE,f
^@,SCALAR,[VARCHAR, VARCHAR],,BOOLEAN,f
__internal_compress_integral_ubigint,SCALAR,[UHUGEINT, UHUGEINT],,UBIGINT,f
__internal_compress_integral_ubigint,SCALAR,[HUGEINT, HUGEINT],,UBIGINT,f
__internal_compress_integral_uinteger,SCALAR,[BIGINT, BIGINT],,UINTEGER,f
__internal_compress_integral_uinteger,SCALAR,[HUGEINT, HUGEINT],,UINTEGER,f
__internal_compress_integral_uinteger,SCALAR,[UBIGINT, UBIGINT],,UINTEGER,f
__internal_compress_integral_uinteger,SCALAR,[UHUGEINT, UHUGEINT],,UINTEGER,f
__internal_compress_integral_usmallint,SCALAR,[HUGEINT, HUGEINT],,USMALLINT,f
__internal_compress_integral_usmallint,SCALAR,[UINTEGER, UINTEGER],,USMALLINT,f
__internal_compress_integral_usmallint,SCALAR,[UBIGINT, UBIGINT],,USMALLINT,f
__internal_compress_integral_usmallint,SCALAR,[UHUGEINT, UHUGEINT],,USMALLINT,f
__internal_compress_integral_usmallint,SCALAR,[INTEGER, INTEGER],,USMALLINT,f
__internal_compress_integral_usmallint,SCALAR,[BIGINT, BIGINT],,USMALLINT,f
__internal_compress_integral_utinyint,SCALAR,[INTEGER, INTEGER],,UTINYINT,f
__internal_compress_integral_utinyint,SCALAR,[SMALLINT, SMALLINT],,UTINYINT,f
__internal_compress_integral_utinyint,SCALAR,[BIGINT, BIGINT],,UTINYINT,f
__internal_compress_integral_utinyint,SCALAR,[HUGEINT, HUGEINT],,UTINYINT,f
__internal_compress_integral_utinyint,SCALAR,[USMALLINT, USMALLINT],,UTINYINT,f
__internal_compress_integral_utinyint,SCALAR,[UINTEGER, UINTEGER],,UTINYINT,f
__internal_compress_integral_utinyint,SCALAR,[UBIGINT, UBIGINT],,UTINYINT,f
__internal_compress_integral_utinyint,SCALAR,[UHUGEINT, UHUGEINT],,UTINYINT,f
__internal_compress_string_hugeint,SCALAR,[VARCHAR],,HUGEINT,f
__internal_compress_string_ubigint,SCALAR,[VARCHAR],,UBIGINT,f
__internal_compress_string_uinteger,SCALAR,[VARCHAR],,UINTEGER,f
__internal_compress_string_usmallint,SCALAR,[VARCHAR],,USMALLINT,f
__internal_compress_string_utinyint,SCALAR,[VARCHAR],,UTINYINT,f
__internal_decompress_integral_bigint,SCALAR,[UINTEGER, BIGINT],,BIGINT,f
__internal_decompress_integral_bigint,SCALAR,[UTINYINT, BIGINT],,BIGINT,f
__internal_decompress_integral_bigint,SCALAR,[USMALLINT, BIGINT],,BIGINT,f
__internal_decompress_integral_hugeint,SCALAR,[UBIGINT, HUGEINT],,HUGEINT,f
__internal_decompress_integral_hugeint,SCALAR,[UINTEGER, HUGEINT],,HUGEINT,f
__internal_decompress_integral_hugeint,SCALAR,[USMALLINT, HUGEINT],,HUGEINT,f
__internal_decompress_integral_hugeint,SCALAR,[UTINYINT, HUGEINT],,HUGEINT,f
__internal_decompress_integral_integer,SCALAR,[USMALLINT, INTEGER],,INTEGER,f
__internal_decompress_integral_integer,SCALAR,[UTINYINT, INTEGER],,INTEGER,f
__internal_decompress_integral_smallint,SCALAR,[UTINYINT, SMALLINT],,SMALLINT,f
__internal_decompress_integral_ubigint,SCALAR,[UTINYINT, UBIGINT],,UBIGINT,f
__internal_decompress_integral_ubigint,SCALAR,[USMALLINT, UBIGINT],,UBIGINT,f
__internal_decompress_integral_ubigint,SCALAR,[UINTEGER, UBIGINT],,UBIGINT,f
__internal_decompress_integral_uhugeint,SCALAR,[USMALLINT, UHUGEINT],,UHUGEINT,f
__internal_decompress_integral_uhugeint,SCALAR,[UBIGINT, UHUGEINT],,UHUGEINT,f
__internal_decompress_integral_uhugeint,SCALAR,[UTINYINT, UHUGEINT],,UHUGEINT,f
__internal_decompress_integral_uhugeint,SCALAR,[UINTEGER, UHUGEINT],,UHUGEINT,f
__internal_decompress_integral_uinteger,SCALAR,[UTINYINT, UINTEGER],,UINTEGER,f
__internal_decompress_integral_uinteger,SCALAR,[USMALLINT, UINTEGER],,UINTEGER,f
__internal_decompress_integral_usmallint,SCALAR,[UTINYINT, USMALLINT],,USMALLINT,f
__internal_decompress_string,SCALAR,[UTINYINT],,VARCHAR,f
__internal_decompress_string,SCALAR,[HUGEINT],,VARCHAR,f
__internal_decompress_string,SCALAR,[UBIGINT],,VARCHAR,f
__internal_decompress_string,SCALAR,[UINTEGER],,VARCHAR,f
__internal_decompress_string,SCALAR,[USMALLINT],,VARCHAR,f
abs,SCALAR,[BIGINT],,BIGINT,f
abs,SCALAR,[HUGEINT],,HUGEINT,f
abs,SCALAR,[FLOAT],,FLOAT,f
abs,SCALAR,[DOUBLE],,DOUBLE,f
abs,SCALAR,[DECIMAL],,DECIMAL,f
abs,SCALAR,[UTINYINT],,UTINYINT,f
abs,SCALAR,[USMALLINT],,USMALLINT,f
abs,SCALAR,[UINTEGER],,UINTEGER,f
abs,SCALAR,[SMALLINT],,SMALLINT,f
abs,SCALAR,[INTEGER],,INTEGER,f
abs,SCALAR,[UBIGINT],,UBIGINT,f
abs,SCALAR,[UHUGEINT],,UHUGEINT,f
abs,SCALAR,[TINYINT],,TINYINT,f
acos,SCALAR,[DOUBLE],,DOUBLE,f
acosh,SCALAR,[DOUBLE],,DOUBLE,f
add,SCALAR,[TIME, DATE],,TIMESTAMP,f
add,SCALAR,[ANY[], ANY[]],,ANY[],f
add,SCALAR,[DATE, INTERVAL],,TIMESTAMP,f
add,SCALAR,[INTERVAL, INTERVAL],,INTERVAL,f
add,SCALAR,[INTEGER, DATE],,DATE,f
add,SCALAR,[DATE, INTEGER],,DATE,f
add,SCALAR,[UHUGEINT, UHUGEINT],,UHUGEINT,f
add,SCALAR,[DATE, TIME],,TIMESTAMP,f
add,SCALAR,[UHUGEINT],,UHUGEINT,f
add,SCALAR,[UBIGINT, UBIGINT],,UBIGINT,f
add,SCALAR,[UBIGINT],,UBIGINT,f
add,SCALAR,[UINTEGER, UINTEGER],,UINTEGER,f
add,SCALAR,[UINTEGER],,UINTEGER,f
add,SCALAR,[USMALLINT, USMALLINT],,USMALLINT,f
add,SCALAR,[USMALLINT],,USMALLINT,f
add,SCALAR,[UTINYINT, UTINYINT],,UTINYINT,f
add,SCALAR,[UTINYINT],,UTINYINT,f
add,SCALAR,[DECIMAL, DECIMAL],,DECIMAL,f
add,SCALAR,[DECIMAL],,DECIMAL,f
add,SCALAR,[DOUBLE, DOUBLE],,DOUBLE,f
add,SCALAR,[DOUBLE],,DOUBLE,f
add,SCALAR,[FLOAT, FLOAT],,FLOAT,f
add,SCALAR,[FLOAT],,FLOAT,f
add,SCALAR,[HUGEINT, HUGEINT],,HUGEINT,f
add,SCALAR,[HUGEINT],,HUGEINT,f
add,SCALAR,[BIGINT, BIGINT],,BIGINT,f
add,SCALAR,[BIGINT],,BIGINT,f
add,SCALAR,[TIME WITH TIME ZONE, DATE],,TIMESTAMP WITH TIME ZONE,f
add,SCALAR,[INTEGER, INTEGER],,INTEGER,f
add,SCALAR,[INTEGER],,INTEGER,f
add,SCALAR,[SMALLINT, SMALLINT],,SMALLINT,f
add,SCALAR,[SMALLINT],,SMALLINT,f
add,SCALAR,[TINYINT, TINYINT],,TINYINT,f
add,SCALAR,[TINYINT],,TINYINT,f
add,SCALAR,[TIME, INTERVAL],,TIME,f
add,SCALAR,[INTERVAL, TIME],,TIME,f
add,SCALAR,[TIMESTAMP, INTERVAL],,TIMESTAMP,f
add,SCALAR,[INTERVAL, TIMESTAMP],,TIMESTAMP,f
add,SCALAR,[TIME WITH TIME ZONE, INTERVAL],,TIME WITH TIME ZONE,f
add,SCALAR,[DATE, TIME WITH TIME ZONE],,TIMESTAMP WITH TIME ZONE,f
add,SCALAR,[INTERVAL, TIME WITH TIME ZONE],,TIME WITH TIME ZONE,f
add,SCALAR,[INTERVAL, DATE],,TIMESTAMP,f
age,SCALAR,[TIMESTAMP],,INTERVAL,f
age,SCALAR,[TIMESTAMP WITH TIME ZONE],,INTERVAL,f
age,SCALAR,[TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH TIME ZONE],,INTERVAL,f
age,SCALAR,[TIMESTAMP, TIMESTAMP],,INTERVAL,f
aggregate,SCALAR,[ANY[], VARCHAR],ANY,ANY,f
alias,SCALAR,[ANY],,VARCHAR,f
any_value,AGGREGATE,[DECIMAL],,DECIMAL,f
any_value,AGGREGATE,[ANY],,ANY,f
apply,SCALAR,[ANY[], LAMBDA],,ANY[],f
approx_count_distinct,AGGREGATE,[ANY],,BIGINT,f
approx_quantile,AGGREGATE,[TINYINT, FLOAT[]],,TINYINT[],f
approx_quantile,AGGREGATE,[BIGINT, FLOAT[]],,BIGINT[],f
approx_quantile,AGGREGATE,[BIGINT, FLOAT],,BIGINT,f
approx_quantile,AGGREGATE,[HUGEINT, FLOAT],,HUGEINT,f
approx_quantile,AGGREGATE,[DOUBLE, FLOAT],,DOUBLE,f
approx_quantile,AGGREGATE,[DATE, FLOAT],,DATE,f
approx_quantile,AGGREGATE,[TIME, FLOAT],,TIME,f
approx_quantile,AGGREGATE,[TIME WITH TIME ZONE, FLOAT],,TIME WITH TIME ZONE,f
approx_quantile,AGGREGATE,[TIMESTAMP, FLOAT],,TIMESTAMP,f
approx_quantile,AGGREGATE,[TIMESTAMP WITH TIME ZONE, FLOAT],,TIMESTAMP WITH TIME ZONE,f
approx_quantile,AGGREGATE,[DECIMAL, FLOAT[]],,DECIMAL[],f
approx_quantile,AGGREGATE,[SMALLINT, FLOAT],,SMALLINT,f
approx_quantile,AGGREGATE,[SMALLINT, FLOAT[]],,SMALLINT[],f
approx_quantile,AGGREGATE,[INTEGER, FLOAT[]],,INTEGER[],f
approx_quantile,AGGREGATE,[DECIMAL, FLOAT],,DECIMAL,f
approx_quantile,AGGREGATE,[DOUBLE, FLOAT[]],,DOUBLE[],f
approx_quantile,AGGREGATE,[DATE, FLOAT[]],,DATE[],f
approx_quantile,AGGREGATE,[TIME, FLOAT[]],,TIME[],f
approx_quantile,AGGREGATE,[TIME WITH TIME ZONE, FLOAT[]],,TIME WITH TIME ZONE[],f
approx_quantile,AGGREGATE,[TIMESTAMP, FLOAT[]],,TIMESTAMP[],f
approx_quantile,AGGREGATE,[TIMESTAMP WITH TIME ZONE, FLOAT[]],,TIMESTAMP WITH TIME ZONE[],f
approx_quantile,AGGREGATE,[HUGEINT, FLOAT[]],,HUGEINT[],f
approx_quantile,AGGREGATE,[FLOAT, FLOAT[]],,FLOAT[],f
approx_quantile,AGGREGATE,[INTEGER, FLOAT],,INTEGER,f
approx_top_k,AGGREGATE,[ANY, BIGINT],,ANY[],f
arbitrary,AGGREGATE,[ANY],,ANY,f
arbitrary,AGGREGATE,[DECIMAL],,DECIMAL,f
arg_max,AGGREGATE,[DATE, TIMESTAMP WITH TIME ZONE],,DATE,f
arg_max,AGGREGATE,[INTEGER, INTEGER],,INTEGER,f
arg_max,AGGREGATE,[DATE, HUGEINT],,DATE,f
arg_max,AGGREGATE,[DATE, DATE],,DATE,f
arg_max,AGGREGATE,[DATE, BLOB],,DATE,f
arg_max,AGGREGATE,[DATE, TIMESTAMP],,DATE,f
arg_max,AGGREGATE,[VARCHAR, BLOB],,VARCHAR,f
arg_max,AGGREGATE,[VARCHAR, TIMESTAMP WITH TIME ZONE],,VARCHAR,f
arg_max,AGGREGATE,[VARCHAR, TIMESTAMP],,VARCHAR,f
arg_max,AGGREGATE,[VARCHAR, DATE],,VARCHAR,f
arg_max,AGGREGATE,[VARCHAR, VARCHAR],,VARCHAR,f
arg_max,AGGREGATE,[VARCHAR, DOUBLE],,VARCHAR,f
arg_max,AGGREGATE,[VARCHAR, HUGEINT],,VARCHAR,f
arg_max,AGGREGATE,[VARCHAR, BIGINT],,VARCHAR,f
arg_max,AGGREGATE,[VARCHAR, INTEGER],,VARCHAR,f
arg_max,AGGREGATE,[DOUBLE, BLOB],,DOUBLE,f
arg_max,AGGREGATE,[DOUBLE, TIMESTAMP WITH TIME ZONE],,DOUBLE,f
arg_max,AGGREGATE,[DOUBLE, TIMESTAMP],,DOUBLE,f
arg_max,AGGREGATE,[DOUBLE, DATE],,DOUBLE,f
arg_max,AGGREGATE,[DOUBLE, VARCHAR],,DOUBLE,f
arg_max,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
arg_max,AGGREGATE,[DOUBLE, HUGEINT],,DOUBLE,f
arg_max,AGGREGATE,[DOUBLE, BIGINT],,DOUBLE,f
arg_max,AGGREGATE,[DOUBLE, INTEGER],,DOUBLE,f
arg_max,AGGREGATE,[BIGINT, BLOB],,BIGINT,f
arg_max,AGGREGATE,[BIGINT, TIMESTAMP WITH TIME ZONE],,BIGINT,f
arg_max,AGGREGATE,[BIGINT, TIMESTAMP],,BIGINT,f
arg_max,AGGREGATE,[BIGINT, DATE],,BIGINT,f
arg_max,AGGREGATE,[BIGINT, VARCHAR],,BIGINT,f
arg_max,AGGREGATE,[BIGINT, DOUBLE],,BIGINT,f
arg_max,AGGREGATE,[BIGINT, HUGEINT],,BIGINT,f
arg_max,AGGREGATE,[BIGINT, BIGINT],,BIGINT,f
arg_max,AGGREGATE,[BIGINT, INTEGER],,BIGINT,f
arg_max,AGGREGATE,[TIMESTAMP, INTEGER],,TIMESTAMP,f
arg_max,AGGREGATE,[TIMESTAMP, BIGINT],,TIMESTAMP,f
arg_max,AGGREGATE,[TIMESTAMP, HUGEINT],,TIMESTAMP,f
arg_max,AGGREGATE,[TIMESTAMP, DOUBLE],,TIMESTAMP,f
arg_max,AGGREGATE,[TIMESTAMP, VARCHAR],,TIMESTAMP,f
arg_max,AGGREGATE,[TIMESTAMP, DATE],,TIMESTAMP,f
arg_max,AGGREGATE,[TIMESTAMP, TIMESTAMP],,TIMESTAMP,f
arg_max,AGGREGATE,[TIMESTAMP, TIMESTAMP WITH TIME ZONE],,TIMESTAMP,f
arg_max,AGGREGATE,[TIMESTAMP, BLOB],,TIMESTAMP,f
arg_max,AGGREGATE,[TIMESTAMP WITH TIME ZONE, INTEGER],,TIMESTAMP WITH TIME ZONE,f
arg_max,AGGREGATE,[TIMESTAMP WITH TIME ZONE, BIGINT],,TIMESTAMP WITH TIME ZONE,f
arg_max,AGGREGATE,[TIMESTAMP WITH TIME ZONE, HUGEINT],,TIMESTAMP WITH TIME ZONE,f
arg_max,AGGREGATE,[TIMESTAMP WITH TIME ZONE, DOUBLE],,TIMESTAMP WITH TIME ZONE,f
arg_max,AGGREGATE,[TIMESTAMP WITH TIME ZONE, VARCHAR],,TIMESTAMP WITH TIME ZONE,f
arg_max,AGGREGATE,[TIMESTAMP WITH TIME ZONE, DATE],,TIMESTAMP WITH TIME ZONE,f
arg_max,AGGREGATE,[TIMESTAMP WITH TIME ZONE, TIMESTAMP],,TIMESTAMP WITH TIME ZONE,f
arg_max,AGGREGATE,[TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH TIME ZONE],,TIMESTAMP WITH TIME ZONE,f
arg_max,AGGREGATE,[TIMESTAMP WITH TIME ZONE, BLOB],,TIMESTAMP WITH TIME ZONE,f
arg_max,AGGREGATE,[BLOB, INTEGER],,BLOB,f
arg_max,AGGREGATE,[BLOB, BIGINT],,BLOB,f
arg_max,AGGREGATE,[BLOB, HUGEINT],,BLOB,f
arg_max,AGGREGATE,[BLOB, DOUBLE],,BLOB,f
arg_max,AGGREGATE,[BLOB, VARCHAR],,BLOB,f
arg_max,AGGREGATE,[BLOB, DATE],,BLOB,f
arg_max,AGGREGATE,[BLOB, TIMESTAMP],,BLOB,f
arg_max,AGGREGATE,[BLOB, TIMESTAMP WITH TIME ZONE],,BLOB,f
arg_max,AGGREGATE,[BLOB, BLOB],,BLOB,f
arg_max,AGGREGATE,[DECIMAL, INTEGER],,DECIMAL,f
arg_max,AGGREGATE,[DECIMAL, BIGINT],,DECIMAL,f
arg_max,AGGREGATE,[DECIMAL, HUGEINT],,DECIMAL,f
arg_max,AGGREGATE,[DECIMAL, DOUBLE],,DECIMAL,f
arg_max,AGGREGATE,[DECIMAL, VARCHAR],,DECIMAL,f
arg_max,AGGREGATE,[DECIMAL, DATE],,DECIMAL,f
arg_max,AGGREGATE,[DECIMAL, TIMESTAMP],,DECIMAL,f
arg_max,AGGREGATE,[DECIMAL, TIMESTAMP WITH TIME ZONE],,DECIMAL,f
arg_max,AGGREGATE,[DECIMAL, BLOB],,DECIMAL,f
arg_max,AGGREGATE,[ANY, INTEGER],,ANY,f
arg_max,AGGREGATE,[ANY, BIGINT],,ANY,f
arg_max,AGGREGATE,[ANY, HUGEINT],,ANY,f
arg_max,AGGREGATE,[ANY, DOUBLE],,ANY,f
arg_max,AGGREGATE,[ANY, VARCHAR],,ANY,f
arg_max,AGGREGATE,[ANY, DATE],,ANY,f
arg_max,AGGREGATE,[ANY, TIMESTAMP],,ANY,f
arg_max,AGGREGATE,[ANY, TIMESTAMP WITH TIME ZONE],,ANY,f
arg_max,AGGREGATE,[ANY, BLOB],,ANY,f
arg_max,AGGREGATE,[ANY, ANY],,ANY,f
arg_max,AGGREGATE,[ANY, ANY, BIGINT],,ANY[],f
arg_max,AGGREGATE,[INTEGER, HUGEINT],,INTEGER,f
arg_max,AGGREGATE,[INTEGER, DOUBLE],,INTEGER,f
arg_max,AGGREGATE,[INTEGER, VARCHAR],,INTEGER,f
arg_max,AGGREGATE,[INTEGER, DATE],,INTEGER,f
arg_max,AGGREGATE,[INTEGER, TIMESTAMP],,INTEGER,f
arg_max,AGGREGATE,[INTEGER, TIMESTAMP WITH TIME ZONE],,INTEGER,f
arg_max,AGGREGATE,[INTEGER, BLOB],,INTEGER,f
arg_max,AGGREGATE,[DATE, DOUBLE],,DATE,f
arg_max,AGGREGATE,[DATE, VARCHAR],,DATE,f
arg_max,AGGREGATE,[INTEGER, BIGINT],,INTEGER,f
arg_max,AGGREGATE,[DATE, BIGINT],,DATE,f
arg_max,AGGREGATE,[DATE, INTEGER],,DATE,f
arg_max_null,AGGREGATE,[BIGINT, BIGINT],,BIGINT,f
arg_max_null,AGGREGATE,[DECIMAL, TIMESTAMP WITH TIME ZONE],,DECIMAL,f
arg_max_null,AGGREGATE,[BIGINT, DATE],,BIGINT,f
arg_max_null,AGGREGATE,[BIGINT, TIMESTAMP],,BIGINT,f
arg_max_null,AGGREGATE,[BIGINT, TIMESTAMP WITH TIME ZONE],,BIGINT,f
arg_max_null,AGGREGATE,[BIGINT, BLOB],,BIGINT,f
arg_max_null,AGGREGATE,[DOUBLE, INTEGER],,DOUBLE,f
arg_max_null,AGGREGATE,[DOUBLE, BIGINT],,DOUBLE,f
arg_max_null,AGGREGATE,[DOUBLE, HUGEINT],,DOUBLE,f
arg_max_null,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
arg_max_null,AGGREGATE,[INTEGER, BLOB],,INTEGER,f
arg_max_null,AGGREGATE,[DOUBLE, VARCHAR],,DOUBLE,f
arg_max_null,AGGREGATE,[INTEGER, TIMESTAMP WITH TIME ZONE],,INTEGER,f
arg_max_null,AGGREGATE,[DOUBLE, DATE],,DOUBLE,f
arg_max_null,AGGREGATE,[DOUBLE, TIMESTAMP],,DOUBLE,f
arg_max_null,AGGREGATE,[DOUBLE, TIMESTAMP WITH TIME ZONE],,DOUBLE,f
arg_max_null,AGGREGATE,[DOUBLE, BLOB],,DOUBLE,f
arg_max_null,AGGREGATE,[VARCHAR, INTEGER],,VARCHAR,f
arg_max_null,AGGREGATE,[VARCHAR, BIGINT],,VARCHAR,f
arg_max_null,AGGREGATE,[VARCHAR, HUGEINT],,VARCHAR,f
arg_max_null,AGGREGATE,[VARCHAR, DOUBLE],,VARCHAR,f
arg_max_null,AGGREGATE,[VARCHAR, VARCHAR],,VARCHAR,f
arg_max_null,AGGREGATE,[VARCHAR, DATE],,VARCHAR,f
arg_max_null,AGGREGATE,[BIGINT, INTEGER],,BIGINT,f
arg_max_null,AGGREGATE,[VARCHAR, TIMESTAMP WITH TIME ZONE],,VARCHAR,f
arg_max_null,AGGREGATE,[VARCHAR, BLOB],,VARCHAR,f
arg_max_null,AGGREGATE,[DATE, INTEGER],,DATE,f
arg_max_null,AGGREGATE,[DATE, BIGINT],,DATE,f
arg_max_null,AGGREGATE,[DATE, HUGEINT],,DATE,f
arg_max_null,AGGREGATE,[DATE, DOUBLE],,DATE,f
arg_max_null,AGGREGATE,[DATE, VARCHAR],,DATE,f
arg_max_null,AGGREGATE,[DATE, DATE],,DATE,f
arg_max_null,AGGREGATE,[DATE, TIMESTAMP],,DATE,f
arg_max_null,AGGREGATE,[DATE, TIMESTAMP WITH TIME ZONE],,DATE,f
arg_max_null,AGGREGATE,[DATE, BLOB],,DATE,f
arg_max_null,AGGREGATE,[TIMESTAMP, INTEGER],,TIMESTAMP,f
arg_max_null,AGGREGATE,[TIMESTAMP, BIGINT],,TIMESTAMP,f
arg_max_null,AGGREGATE,[TIMESTAMP, HUGEINT],,TIMESTAMP,f
arg_max_null,AGGREGATE,[TIMESTAMP, DOUBLE],,TIMESTAMP,f
arg_max_null,AGGREGATE,[TIMESTAMP, VARCHAR],,TIMESTAMP,f
arg_max_null,AGGREGATE,[TIMESTAMP, DATE],,TIMESTAMP,f
arg_max_null,AGGREGATE,[TIMESTAMP, TIMESTAMP],,TIMESTAMP,f
arg_max_null,AGGREGATE,[TIMESTAMP, TIMESTAMP WITH TIME ZONE],,TIMESTAMP,f
arg_max_null,AGGREGATE,[TIMESTAMP, BLOB],,TIMESTAMP,f
arg_max_null,AGGREGATE,[TIMESTAMP WITH TIME ZONE, INTEGER],,TIMESTAMP WITH TIME ZONE,f
arg_max_null,AGGREGATE,[TIMESTAMP WITH TIME ZONE, BIGINT],,TIMESTAMP WITH TIME ZONE,f
arg_max_null,AGGREGATE,[TIMESTAMP WITH TIME ZONE, HUGEINT],,TIMESTAMP WITH TIME ZONE,f
arg_max_null,AGGREGATE,[TIMESTAMP WITH TIME ZONE, DOUBLE],,TIMESTAMP WITH TIME ZONE,f
arg_max_null,AGGREGATE,[TIMESTAMP WITH TIME ZONE, VARCHAR],,TIMESTAMP WITH TIME ZONE,f
arg_max_null,AGGREGATE,[TIMESTAMP WITH TIME ZONE, DATE],,TIMESTAMP WITH TIME ZONE,f
arg_max_null,AGGREGATE,[TIMESTAMP WITH TIME ZONE, TIMESTAMP],,TIMESTAMP WITH TIME ZONE,f
arg_max_null,AGGREGATE,[TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH TIME ZONE],,TIMESTAMP WITH TIME ZONE,f
arg_max_null,AGGREGATE,[TIMESTAMP WITH TIME ZONE, BLOB],,TIMESTAMP WITH TIME ZONE,f
arg_max_null,AGGREGATE,[BLOB, INTEGER],,BLOB,f
arg_max_null,AGGREGATE,[BLOB, BIGINT],,BLOB,f
arg_max_null,AGGREGATE,[BLOB, HUGEINT],,BLOB,f
arg_max_null,AGGREGATE,[BLOB, DOUBLE],,BLOB,f
arg_max_null,AGGREGATE,[BLOB, VARCHAR],,BLOB,f
arg_max_null,AGGREGATE,[BLOB, DATE],,BLOB,f
arg_max_null,AGGREGATE,[BLOB, TIMESTAMP],,BLOB,f
arg_max_null,AGGREGATE,[BLOB, TIMESTAMP WITH TIME ZONE],,BLOB,f
arg_max_null,AGGREGATE,[BLOB, BLOB],,BLOB,f
arg_max_null,AGGREGATE,[DECIMAL, INTEGER],,DECIMAL,f
arg_max_null,AGGREGATE,[DECIMAL, BIGINT],,DECIMAL,f
arg_max_null,AGGREGATE,[DECIMAL, HUGEINT],,DECIMAL,f
arg_max_null,AGGREGATE,[DECIMAL, DOUBLE],,DECIMAL,f
arg_max_null,AGGREGATE,[DECIMAL, VARCHAR],,DECIMAL,f
arg_max_null,AGGREGATE,[DECIMAL, DATE],,DECIMAL,f
arg_max_null,AGGREGATE,[DECIMAL, TIMESTAMP],,DECIMAL,f
arg_max_null,AGGREGATE,[BIGINT, DOUBLE],,BIGINT,f
arg_max_null,AGGREGATE,[DECIMAL, BLOB],,DECIMAL,f
arg_max_null,AGGREGATE,[ANY, INTEGER],,ANY,f
arg_max_null,AGGREGATE,[ANY, BIGINT],,ANY,f
arg_max_null,AGGREGATE,[ANY, HUGEINT],,ANY,f
arg_max_null,AGGREGATE,[ANY, DOUBLE],,ANY,f
arg_max_null,AGGREGATE,[ANY, VARCHAR],,ANY,f
arg_max_null,AGGREGATE,[ANY, DATE],,ANY,f
arg_max_null,AGGREGATE,[ANY, TIMESTAMP],,ANY,f
arg_max_null,AGGREGATE,[ANY, TIMESTAMP WITH TIME ZONE],,ANY,f
arg_max_null,AGGREGATE,[ANY, BLOB],,ANY,f
arg_max_null,AGGREGATE,[ANY, ANY],,ANY,f
arg_max_null,AGGREGATE,[INTEGER, TIMESTAMP],,INTEGER,f
arg_max_null,AGGREGATE,[INTEGER, DATE],,INTEGER,f
arg_max_null,AGGREGATE,[INTEGER, VARCHAR],,INTEGER,f
arg_max_null,AGGREGATE,[INTEGER, DOUBLE],,INTEGER,f
arg_max_null,AGGREGATE,[INTEGER, HUGEINT],,INTEGER,f
arg_max_null,AGGREGATE,[INTEGER, BIGINT],,INTEGER,f
arg_max_null,AGGREGATE,[INTEGER, INTEGER],,INTEGER,f
arg_max_null,AGGREGATE,[BIGINT, VARCHAR],,BIGINT,f
arg_max_null,AGGREGATE,[BIGINT, HUGEINT],,BIGINT,f
arg_max_null,AGGREGATE,[VARCHAR, TIMESTAMP],,VARCHAR,f
arg_min,AGGREGATE,[TIMESTAMP WITH TIME ZONE, BIGINT],,TIMESTAMP WITH TIME ZONE,f
arg_min,AGGREGATE,[TIMESTAMP WITH TIME ZONE, HUGEINT],,TIMESTAMP WITH TIME ZONE,f
arg_min,AGGREGATE,[BIGINT, DOUBLE],,BIGINT,f
arg_min,AGGREGATE,[BIGINT, VARCHAR],,BIGINT,f
arg_min,AGGREGATE,[BIGINT, DATE],,BIGINT,f
arg_min,AGGREGATE,[BIGINT, TIMESTAMP],,BIGINT,f
arg_min,AGGREGATE,[BIGINT, TIMESTAMP WITH TIME ZONE],,BIGINT,f
arg_min,AGGREGATE,[BIGINT, BLOB],,BIGINT,f
arg_min,AGGREGATE,[DOUBLE, INTEGER],,DOUBLE,f
arg_min,AGGREGATE,[DOUBLE, BIGINT],,DOUBLE,f
arg_min,AGGREGATE,[DOUBLE, HUGEINT],,DOUBLE,f
arg_min,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
arg_min,AGGREGATE,[DOUBLE, VARCHAR],,DOUBLE,f
arg_min,AGGREGATE,[DOUBLE, DATE],,DOUBLE,f
arg_min,AGGREGATE,[DOUBLE, TIMESTAMP],,DOUBLE,f
arg_min,AGGREGATE,[DOUBLE, TIMESTAMP WITH TIME ZONE],,DOUBLE,f
arg_min,AGGREGATE,[DOUBLE, BLOB],,DOUBLE,f
arg_min,AGGREGATE,[VARCHAR, INTEGER],,VARCHAR,f
arg_min,AGGREGATE,[VARCHAR, BIGINT],,VARCHAR,f
arg_min,AGGREGATE,[VARCHAR, HUGEINT],,VARCHAR,f
arg_min,AGGREGATE,[VARCHAR, DOUBLE],,VARCHAR,f
arg_min,AGGREGATE,[VARCHAR, VARCHAR],,VARCHAR,f
arg_min,AGGREGATE,[VARCHAR, DATE],,VARCHAR,f
arg_min,AGGREGATE,[VARCHAR, TIMESTAMP],,VARCHAR,f
arg_min,AGGREGATE,[VARCHAR, TIMESTAMP WITH TIME ZONE],,VARCHAR,f
arg_min,AGGREGATE,[VARCHAR, BLOB],,VARCHAR,f
arg_min,AGGREGATE,[DATE, INTEGER],,DATE,f
arg_min,AGGREGATE,[DATE, BIGINT],,DATE,f
arg_min,AGGREGATE,[DATE, HUGEINT],,DATE,f
arg_min,AGGREGATE,[DATE, DOUBLE],,DATE,f
arg_min,AGGREGATE,[DATE, VARCHAR],,DATE,f
arg_min,AGGREGATE,[DATE, DATE],,DATE,f
arg_min,AGGREGATE,[DATE, TIMESTAMP],,DATE,f
arg_min,AGGREGATE,[DATE, TIMESTAMP WITH TIME ZONE],,DATE,f
arg_min,AGGREGATE,[DATE, BLOB],,DATE,f
arg_min,AGGREGATE,[TIMESTAMP, INTEGER],,TIMESTAMP,f
arg_min,AGGREGATE,[TIMESTAMP, BIGINT],,TIMESTAMP,f
arg_min,AGGREGATE,[TIMESTAMP, HUGEINT],,TIMESTAMP,f
arg_min,AGGREGATE,[TIMESTAMP, DOUBLE],,TIMESTAMP,f
arg_min,AGGREGATE,[TIMESTAMP, VARCHAR],,TIMESTAMP,f
arg_min,AGGREGATE,[TIMESTAMP, DATE],,TIMESTAMP,f
arg_min,AGGREGATE,[TIMESTAMP, TIMESTAMP],,TIMESTAMP,f
arg_min,AGGREGATE,[TIMESTAMP, TIMESTAMP WITH TIME ZONE],,TIMESTAMP,f
arg_min,AGGREGATE,[TIMESTAMP, BLOB],,TIMESTAMP,f
arg_min,AGGREGATE,[TIMESTAMP WITH TIME ZONE, INTEGER],,TIMESTAMP WITH TIME ZONE,f
arg_min,AGGREGATE,[BIGINT, INTEGER],,BIGINT,f
arg_min,AGGREGATE,[BIGINT, BIGINT],,BIGINT,f
arg_min,AGGREGATE,[TIMESTAMP WITH TIME ZONE, DOUBLE],,TIMESTAMP WITH TIME ZONE,f
arg_min,AGGREGATE,[TIMESTAMP WITH TIME ZONE, VARCHAR],,TIMESTAMP WITH TIME ZONE,f
arg_min,AGGREGATE,[TIMESTAMP WITH TIME ZONE, DATE],,TIMESTAMP WITH TIME ZONE,f
arg_min,AGGREGATE,[TIMESTAMP WITH TIME ZONE, TIMESTAMP],,TIMESTAMP WITH TIME ZONE,f
arg_min,AGGREGATE,[TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH TIME ZONE],,TIMESTAMP WITH TIME ZONE,f
arg_min,AGGREGATE,[TIMESTAMP WITH TIME ZONE, BLOB],,TIMESTAMP WITH TIME ZONE,f
arg_min,AGGREGATE,[BLOB, INTEGER],,BLOB,f
arg_min,AGGREGATE,[BLOB, BIGINT],,BLOB,f
arg_min,AGGREGATE,[BLOB, HUGEINT],,BLOB,f
arg_min,AGGREGATE,[BLOB, DOUBLE],,BLOB,f
arg_min,AGGREGATE,[BLOB, VARCHAR],,BLOB,f
arg_min,AGGREGATE,[BLOB, DATE],,BLOB,f
arg_min,AGGREGATE,[BLOB, TIMESTAMP],,BLOB,f
arg_min,AGGREGATE,[BLOB, TIMESTAMP WITH TIME ZONE],,BLOB,f
arg_min,AGGREGATE,[BLOB, BLOB],,BLOB,f
arg_min,AGGREGATE,[DECIMAL, INTEGER],,DECIMAL,f
arg_min,AGGREGATE,[DECIMAL, BIGINT],,DECIMAL,f
arg_min,AGGREGATE,[DECIMAL, HUGEINT],,DECIMAL,f
arg_min,AGGREGATE,[DECIMAL, DOUBLE],,DECIMAL,f
arg_min,AGGREGATE,[DECIMAL, VARCHAR],,DECIMAL,f
arg_min,AGGREGATE,[DECIMAL, DATE],,DECIMAL,f
arg_min,AGGREGATE,[DECIMAL, TIMESTAMP],,DECIMAL,f
arg_min,AGGREGATE,[DECIMAL, TIMESTAMP WITH TIME ZONE],,DECIMAL,f
arg_min,AGGREGATE,[DECIMAL, BLOB],,DECIMAL,f
arg_min,AGGREGATE,[ANY, INTEGER],,ANY,f
arg_min,AGGREGATE,[ANY, BIGINT],,ANY,f
arg_min,AGGREGATE,[ANY, HUGEINT],,ANY,f
arg_min,AGGREGATE,[ANY, DOUBLE],,ANY,f
arg_min,AGGREGATE,[ANY, VARCHAR],,ANY,f
arg_min,AGGREGATE,[ANY, DATE],,ANY,f
arg_min,AGGREGATE,[ANY, TIMESTAMP],,ANY,f
arg_min,AGGREGATE,[ANY, TIMESTAMP WITH TIME ZONE],,ANY,f
arg_min,AGGREGATE,[ANY, BLOB],,ANY,f
arg_min,AGGREGATE,[ANY, ANY],,ANY,f
arg_min,AGGREGATE,[ANY, ANY, BIGINT],,ANY[],f
arg_min,AGGREGATE,[INTEGER, BIGINT],,INTEGER,f
arg_min,AGGREGATE,[INTEGER, HUGEINT],,INTEGER,f
arg_min,AGGREGATE,[INTEGER, DOUBLE],,INTEGER,f
arg_min,AGGREGATE,[INTEGER, VARCHAR],,INTEGER,f
arg_min,AGGREGATE,[INTEGER, DATE],,INTEGER,f
arg_min,AGGREGATE,[INTEGER, TIMESTAMP],,INTEGER,f
arg_min,AGGREGATE,[INTEGER, TIMESTAMP WITH TIME ZONE],,INTEGER,f
arg_min,AGGREGATE,[INTEGER, BLOB],,INTEGER,f
arg_min,AGGREGATE,[INTEGER, INTEGER],,INTEGER,f
arg_min,AGGREGATE,[BIGINT, HUGEINT],,BIGINT,f
arg_min_null,AGGREGATE,[TIMESTAMP WITH TIME ZONE, BIGINT],,TIMESTAMP WITH TIME ZONE,f
arg_min_null,AGGREGATE,[BIGINT, INTEGER],,BIGINT,f
arg_min_null,AGGREGATE,[BIGINT, BIGINT],,BIGINT,f
arg_min_null,AGGREGATE,[BIGINT, HUGEINT],,BIGINT,f
arg_min_null,AGGREGATE,[BIGINT, DOUBLE],,BIGINT,f
arg_min_null,AGGREGATE,[BIGINT, VARCHAR],,BIGINT,f
arg_min_null,AGGREGATE,[BIGINT, DATE],,BIGINT,f
arg_min_null,AGGREGATE,[BIGINT, TIMESTAMP],,BIGINT,f
arg_min_null,AGGREGATE,[BIGINT, TIMESTAMP WITH TIME ZONE],,BIGINT,f
arg_min_null,AGGREGATE,[BIGINT, BLOB],,BIGINT,f
arg_min_null,AGGREGATE,[DOUBLE, INTEGER],,DOUBLE,f
arg_min_null,AGGREGATE,[DOUBLE, BIGINT],,DOUBLE,f
arg_min_null,AGGREGATE,[DOUBLE, HUGEINT],,DOUBLE,f
arg_min_null,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
arg_min_null,AGGREGATE,[DOUBLE, VARCHAR],,DOUBLE,f
arg_min_null,AGGREGATE,[DOUBLE, DATE],,DOUBLE,f
arg_min_null,AGGREGATE,[DOUBLE, TIMESTAMP],,DOUBLE,f
arg_min_null,AGGREGATE,[DOUBLE, TIMESTAMP WITH TIME ZONE],,DOUBLE,f
arg_min_null,AGGREGATE,[DOUBLE, BLOB],,DOUBLE,f
arg_min_null,AGGREGATE,[VARCHAR, INTEGER],,VARCHAR,f
arg_min_null,AGGREGATE,[VARCHAR, BIGINT],,VARCHAR,f
arg_min_null,AGGREGATE,[VARCHAR, HUGEINT],,VARCHAR,f
arg_min_null,AGGREGATE,[VARCHAR, DOUBLE],,VARCHAR,f
arg_min_null,AGGREGATE,[VARCHAR, VARCHAR],,VARCHAR,f
arg_min_null,AGGREGATE,[VARCHAR, DATE],,VARCHAR,f
arg_min_null,AGGREGATE,[VARCHAR, TIMESTAMP],,VARCHAR,f
arg_min_null,AGGREGATE,[VARCHAR, TIMESTAMP WITH TIME ZONE],,VARCHAR,f
arg_min_null,AGGREGATE,[VARCHAR, BLOB],,VARCHAR,f
arg_min_null,AGGREGATE,[DATE, INTEGER],,DATE,f
arg_min_null,AGGREGATE,[DATE, BIGINT],,DATE,f
arg_min_null,AGGREGATE,[DATE, HUGEINT],,DATE,f
arg_min_null,AGGREGATE,[DATE, DOUBLE],,DATE,f
arg_min_null,AGGREGATE,[DATE, VARCHAR],,DATE,f
arg_min_null,AGGREGATE,[DATE, DATE],,DATE,f
arg_min_null,AGGREGATE,[DATE, TIMESTAMP],,DATE,f
arg_min_null,AGGREGATE,[DATE, TIMESTAMP WITH TIME ZONE],,DATE,f
arg_min_null,AGGREGATE,[DATE, BLOB],,DATE,f
arg_min_null,AGGREGATE,[TIMESTAMP, INTEGER],,TIMESTAMP,f
arg_min_null,AGGREGATE,[TIMESTAMP, BIGINT],,TIMESTAMP,f
arg_min_null,AGGREGATE,[TIMESTAMP, HUGEINT],,TIMESTAMP,f
arg_min_null,AGGREGATE,[TIMESTAMP, DOUBLE],,TIMESTAMP,f
arg_min_null,AGGREGATE,[TIMESTAMP, VARCHAR],,TIMESTAMP,f
arg_min_null,AGGREGATE,[TIMESTAMP, DATE],,TIMESTAMP,f
arg_min_null,AGGREGATE,[TIMESTAMP, TIMESTAMP],,TIMESTAMP,f
arg_min_null,AGGREGATE,[TIMESTAMP, TIMESTAMP WITH TIME ZONE],,TIMESTAMP,f
arg_min_null,AGGREGATE,[TIMESTAMP, BLOB],,TIMESTAMP,f
arg_min_null,AGGREGATE,[TIMESTAMP WITH TIME ZONE, INTEGER],,TIMESTAMP WITH TIME ZONE,f
arg_min_null,AGGREGATE,[TIMESTAMP WITH TIME ZONE, DOUBLE],,TIMESTAMP WITH TIME ZONE,f
arg_min_null,AGGREGATE,[TIMESTAMP WITH TIME ZONE, VARCHAR],,TIMESTAMP WITH TIME ZONE,f
arg_min_null,AGGREGATE,[TIMESTAMP WITH TIME ZONE, DATE],,TIMESTAMP WITH TIME ZONE,f
arg_min_null,AGGREGATE,[TIMESTAMP WITH TIME ZONE, TIMESTAMP],,TIMESTAMP WITH TIME ZONE,f
arg_min_null,AGGREGATE,[TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH TIME ZONE],,TIMESTAMP WITH TIME ZONE,f
arg_min_null,AGGREGATE,[TIMESTAMP WITH TIME ZONE, BLOB],,TIMESTAMP WITH TIME ZONE,f
arg_min_null,AGGREGATE,[BLOB, INTEGER],,BLOB,f
arg_min_null,AGGREGATE,[BLOB, BIGINT],,BLOB,f
arg_min_null,AGGREGATE,[BLOB, HUGEINT],,BLOB,f
arg_min_null,AGGREGATE,[BLOB, DOUBLE],,BLOB,f
arg_min_null,AGGREGATE,[BLOB, VARCHAR],,BLOB,f
arg_min_null,AGGREGATE,[BLOB, DATE],,BLOB,f
arg_min_null,AGGREGATE,[BLOB, TIMESTAMP],,BLOB,f
arg_min_null,AGGREGATE,[BLOB, TIMESTAMP WITH TIME ZONE],,BLOB,f
arg_min_null,AGGREGATE,[BLOB, BLOB],,BLOB,f
arg_min_null,AGGREGATE,[DECIMAL, INTEGER],,DECIMAL,f
arg_min_null,AGGREGATE,[DECIMAL, BIGINT],,DECIMAL,f
arg_min_null,AGGREGATE,[DECIMAL, HUGEINT],,DECIMAL,f
arg_min_null,AGGREGATE,[DECIMAL, DOUBLE],,DECIMAL,f
arg_min_null,AGGREGATE,[DECIMAL, VARCHAR],,DECIMAL,f
arg_min_null,AGGREGATE,[DECIMAL, DATE],,DECIMAL,f
arg_min_null,AGGREGATE,[DECIMAL, TIMESTAMP],,DECIMAL,f
arg_min_null,AGGREGATE,[DECIMAL, TIMESTAMP WITH TIME ZONE],,DECIMAL,f
arg_min_null,AGGREGATE,[DECIMAL, BLOB],,DECIMAL,f
arg_min_null,AGGREGATE,[ANY, INTEGER],,ANY,f
arg_min_null,AGGREGATE,[ANY, BIGINT],,ANY,f
arg_min_null,AGGREGATE,[ANY, HUGEINT],,ANY,f
arg_min_null,AGGREGATE,[ANY, DOUBLE],,ANY,f
arg_min_null,AGGREGATE,[ANY, VARCHAR],,ANY,f
arg_min_null,AGGREGATE,[ANY, DATE],,ANY,f
arg_min_null,AGGREGATE,[ANY, TIMESTAMP],,ANY,f
arg_min_null,AGGREGATE,[ANY, TIMESTAMP WITH TIME ZONE],,ANY,f
arg_min_null,AGGREGATE,[ANY, BLOB],,ANY,f
arg_min_null,AGGREGATE,[ANY, ANY],,ANY,f
arg_min_null,AGGREGATE,[INTEGER, INTEGER],,INTEGER,f
arg_min_null,AGGREGATE,[INTEGER, HUGEINT],,INTEGER,f
arg_min_null,AGGREGATE,[INTEGER, DOUBLE],,INTEGER,f
arg_min_null,AGGREGATE,[INTEGER, VARCHAR],,INTEGER,f
arg_min_null,AGGREGATE,[INTEGER, DATE],,INTEGER,f
arg_min_null,AGGREGATE,[INTEGER, TIMESTAMP],,INTEGER,f
arg_min_null,AGGREGATE,[INTEGER, TIMESTAMP WITH TIME ZONE],,INTEGER,f
arg_min_null,AGGREGATE,[INTEGER, BLOB],,INTEGER,f
arg_min_null,AGGREGATE,[INTEGER, BIGINT],,INTEGER,f
arg_min_null,AGGREGATE,[TIMESTAMP WITH TIME ZONE, HUGEINT],,TIMESTAMP WITH TIME ZONE,f
argmax,AGGREGATE,[DATE, TIMESTAMP WITH TIME ZONE],,DATE,f
argmax,AGGREGATE,[DATE, BLOB],,DATE,f
argmax,AGGREGATE,[TIMESTAMP, INTEGER],,TIMESTAMP,f
argmax,AGGREGATE,[TIMESTAMP, BIGINT],,TIMESTAMP,f
argmax,AGGREGATE,[TIMESTAMP, HUGEINT],,TIMESTAMP,f
argmax,AGGREGATE,[TIMESTAMP, DOUBLE],,TIMESTAMP,f
argmax,AGGREGATE,[TIMESTAMP, VARCHAR],,TIMESTAMP,f
argmax,AGGREGATE,[TIMESTAMP, DATE],,TIMESTAMP,f
argmax,AGGREGATE,[TIMESTAMP, TIMESTAMP],,TIMESTAMP,f
argmax,AGGREGATE,[TIMESTAMP, TIMESTAMP WITH TIME ZONE],,TIMESTAMP,f
argmax,AGGREGATE,[TIMESTAMP, BLOB],,TIMESTAMP,f
argmax,AGGREGATE,[TIMESTAMP WITH TIME ZONE, INTEGER],,TIMESTAMP WITH TIME ZONE,f
argmax,AGGREGATE,[TIMESTAMP WITH TIME ZONE, BIGINT],,TIMESTAMP WITH TIME ZONE,f
argmax,AGGREGATE,[TIMESTAMP WITH TIME ZONE, HUGEINT],,TIMESTAMP WITH TIME ZONE,f
argmax,AGGREGATE,[TIMESTAMP WITH TIME ZONE, DOUBLE],,TIMESTAMP WITH TIME ZONE,f
argmax,AGGREGATE,[TIMESTAMP WITH TIME ZONE, VARCHAR],,TIMESTAMP WITH TIME ZONE,f
argmax,AGGREGATE,[TIMESTAMP WITH TIME ZONE, DATE],,TIMESTAMP WITH TIME ZONE,f
argmax,AGGREGATE,[TIMESTAMP WITH TIME ZONE, TIMESTAMP],,TIMESTAMP WITH TIME ZONE,f
argmax,AGGREGATE,[TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH TIME ZONE],,TIMESTAMP WITH TIME ZONE,f
argmax,AGGREGATE,[TIMESTAMP WITH TIME ZONE, BLOB],,TIMESTAMP WITH TIME ZONE,f
argmax,AGGREGATE,[BLOB, INTEGER],,BLOB,f
argmax,AGGREGATE,[BLOB, BIGINT],,BLOB,f
argmax,AGGREGATE,[BLOB, HUGEINT],,BLOB,f
argmax,AGGREGATE,[BLOB, DOUBLE],,BLOB,f
argmax,AGGREGATE,[BLOB, VARCHAR],,BLOB,f
argmax,AGGREGATE,[BLOB, DATE],,BLOB,f
argmax,AGGREGATE,[BLOB, TIMESTAMP],,BLOB,f
argmax,AGGREGATE,[BLOB, TIMESTAMP WITH TIME ZONE],,BLOB,f
argmax,AGGREGATE,[BLOB, BLOB],,BLOB,f
argmax,AGGREGATE,[DECIMAL, INTEGER],,DECIMAL,f
argmax,AGGREGATE,[DECIMAL, BIGINT],,DECIMAL,f
argmax,AGGREGATE,[DECIMAL, HUGEINT],,DECIMAL,f
argmax,AGGREGATE,[DECIMAL, DOUBLE],,DECIMAL,f
argmax,AGGREGATE,[DECIMAL, VARCHAR],,DECIMAL,f
argmax,AGGREGATE,[DECIMAL, DATE],,DECIMAL,f
argmax,AGGREGATE,[DECIMAL, TIMESTAMP],,DECIMAL,f
argmax,AGGREGATE,[DECIMAL, TIMESTAMP WITH TIME ZONE],,DECIMAL,f
argmax,AGGREGATE,[DECIMAL, BLOB],,DECIMAL,f
argmax,AGGREGATE,[ANY, INTEGER],,ANY,f
argmax,AGGREGATE,[ANY, BIGINT],,ANY,f
argmax,AGGREGATE,[ANY, HUGEINT],,ANY,f
argmax,AGGREGATE,[ANY, DOUBLE],,ANY,f
argmax,AGGREGATE,[ANY, VARCHAR],,ANY,f
argmax,AGGREGATE,[ANY, DATE],,ANY,f
argmax,AGGREGATE,[ANY, TIMESTAMP],,ANY,f
argmax,AGGREGATE,[ANY, TIMESTAMP WITH TIME ZONE],,ANY,f
argmax,AGGREGATE,[ANY, BLOB],,ANY,f
argmax,AGGREGATE,[ANY, ANY],,ANY,f
argmax,AGGREGATE,[ANY, ANY, BIGINT],,ANY[],f
argmax,AGGREGATE,[VARCHAR, HUGEINT],,VARCHAR,f
argmax,AGGREGATE,[VARCHAR, BIGINT],,VARCHAR,f
argmax,AGGREGATE,[VARCHAR, TIMESTAMP WITH TIME ZONE],,VARCHAR,f
argmax,AGGREGATE,[DATE, DATE],,DATE,f
argmax,AGGREGATE,[DATE, VARCHAR],,DATE,f
argmax,AGGREGATE,[DATE, DOUBLE],,DATE,f
argmax,AGGREGATE,[DATE, HUGEINT],,DATE,f
argmax,AGGREGATE,[DATE, BIGINT],,DATE,f
argmax,AGGREGATE,[DATE, INTEGER],,DATE,f
argmax,AGGREGATE,[VARCHAR, BLOB],,VARCHAR,f
argmax,AGGREGATE,[VARCHAR, TIMESTAMP],,VARCHAR,f
argmax,AGGREGATE,[DOUBLE, TIMESTAMP],,DOUBLE,f
argmax,AGGREGATE,[VARCHAR, DATE],,VARCHAR,f
argmax,AGGREGATE,[VARCHAR, DOUBLE],,VARCHAR,f
argmax,AGGREGATE,[VARCHAR, VARCHAR],,VARCHAR,f
argmax,AGGREGATE,[INTEGER, INTEGER],,INTEGER,f
argmax,AGGREGATE,[INTEGER, BIGINT],,INTEGER,f
argmax,AGGREGATE,[INTEGER, HUGEINT],,INTEGER,f
argmax,AGGREGATE,[INTEGER, DOUBLE],,INTEGER,f
argmax,AGGREGATE,[INTEGER, VARCHAR],,INTEGER,f
argmax,AGGREGATE,[INTEGER, DATE],,INTEGER,f
argmax,AGGREGATE,[INTEGER, TIMESTAMP],,INTEGER,f
argmax,AGGREGATE,[INTEGER, TIMESTAMP WITH TIME ZONE],,INTEGER,f
argmax,AGGREGATE,[INTEGER, BLOB],,INTEGER,f
argmax,AGGREGATE,[BIGINT, INTEGER],,BIGINT,f
argmax,AGGREGATE,[BIGINT, BIGINT],,BIGINT,f
argmax,AGGREGATE,[BIGINT, HUGEINT],,BIGINT,f
argmax,AGGREGATE,[BIGINT, DOUBLE],,BIGINT,f
argmax,AGGREGATE,[BIGINT, VARCHAR],,BIGINT,f
argmax,AGGREGATE,[BIGINT, DATE],,BIGINT,f
argmax,AGGREGATE,[BIGINT, TIMESTAMP],,BIGINT,f
argmax,AGGREGATE,[BIGINT, TIMESTAMP WITH TIME ZONE],,BIGINT,f
argmax,AGGREGATE,[BIGINT, BLOB],,BIGINT,f
argmax,AGGREGATE,[DOUBLE, INTEGER],,DOUBLE,f
argmax,AGGREGATE,[DOUBLE, BIGINT],,DOUBLE,f
argmax,AGGREGATE,[DOUBLE, HUGEINT],,DOUBLE,f
argmax,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
argmax,AGGREGATE,[DOUBLE, VARCHAR],,DOUBLE,f
argmax,AGGREGATE,[DOUBLE, DATE],,DOUBLE,f
argmax,AGGREGATE,[DOUBLE, TIMESTAMP WITH TIME ZONE],,DOUBLE,f
argmax,AGGREGATE,[DOUBLE, BLOB],,DOUBLE,f
argmax,AGGREGATE,[VARCHAR, INTEGER],,VARCHAR,f
argmax,AGGREGATE,[DATE, TIMESTAMP],,DATE,f
argmin,AGGREGATE,[BLOB, DOUBLE],,BLOB,f
argmin,AGGREGATE,[TIMESTAMP, INTEGER],,TIMESTAMP,f
argmin,AGGREGATE,[VARCHAR, DOUBLE],,VARCHAR,f
argmin,AGGREGATE,[VARCHAR, BIGINT],,VARCHAR,f
argmin,AGGREGATE,[INTEGER, INTEGER],,INTEGER,f
argmin,AGGREGATE,[INTEGER, BIGINT],,INTEGER,f
argmin,AGGREGATE,[INTEGER, HUGEINT],,INTEGER,f
argmin,AGGREGATE,[INTEGER, DOUBLE],,INTEGER,f
argmin,AGGREGATE,[INTEGER, VARCHAR],,INTEGER,f
argmin,AGGREGATE,[INTEGER, DATE],,INTEGER,f
argmin,AGGREGATE,[INTEGER, TIMESTAMP],,INTEGER,f
argmin,AGGREGATE,[INTEGER, TIMESTAMP WITH TIME ZONE],,INTEGER,f
argmin,AGGREGATE,[INTEGER, BLOB],,INTEGER,f
argmin,AGGREGATE,[BIGINT, INTEGER],,BIGINT,f
argmin,AGGREGATE,[BIGINT, BIGINT],,BIGINT,f
argmin,AGGREGATE,[BIGINT, HUGEINT],,BIGINT,f
argmin,AGGREGATE,[BIGINT, DOUBLE],,BIGINT,f
argmin,AGGREGATE,[BIGINT, VARCHAR],,BIGINT,f
argmin,AGGREGATE,[BIGINT, DATE],,BIGINT,f
argmin,AGGREGATE,[BIGINT, TIMESTAMP],,BIGINT,f
argmin,AGGREGATE,[BIGINT, TIMESTAMP WITH TIME ZONE],,BIGINT,f
argmin,AGGREGATE,[BIGINT, BLOB],,BIGINT,f
argmin,AGGREGATE,[DOUBLE, INTEGER],,DOUBLE,f
argmin,AGGREGATE,[DOUBLE, BIGINT],,DOUBLE,f
argmin,AGGREGATE,[DOUBLE, HUGEINT],,DOUBLE,f
argmin,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
argmin,AGGREGATE,[DOUBLE, VARCHAR],,DOUBLE,f
argmin,AGGREGATE,[DOUBLE, DATE],,DOUBLE,f
argmin,AGGREGATE,[DOUBLE, TIMESTAMP],,DOUBLE,f
argmin,AGGREGATE,[DOUBLE, TIMESTAMP WITH TIME ZONE],,DOUBLE,f
argmin,AGGREGATE,[DOUBLE, BLOB],,DOUBLE,f
argmin,AGGREGATE,[VARCHAR, INTEGER],,VARCHAR,f
argmin,AGGREGATE,[BLOB, HUGEINT],,BLOB,f
argmin,AGGREGATE,[VARCHAR, HUGEINT],,VARCHAR,f
argmin,AGGREGATE,[VARCHAR, VARCHAR],,VARCHAR,f
argmin,AGGREGATE,[VARCHAR, DATE],,VARCHAR,f
argmin,AGGREGATE,[VARCHAR, TIMESTAMP],,VARCHAR,f
argmin,AGGREGATE,[VARCHAR, TIMESTAMP WITH TIME ZONE],,VARCHAR,f
argmin,AGGREGATE,[VARCHAR, BLOB],,VARCHAR,f
argmin,AGGREGATE,[DATE, INTEGER],,DATE,f
argmin,AGGREGATE,[DATE, BIGINT],,DATE,f
argmin,AGGREGATE,[DATE, HUGEINT],,DATE,f
argmin,AGGREGATE,[DATE, DOUBLE],,DATE,f
argmin,AGGREGATE,[DATE, VARCHAR],,DATE,f
argmin,AGGREGATE,[DATE, DATE],,DATE,f
argmin,AGGREGATE,[ANY, ANY, BIGINT],,ANY[],f
argmin,AGGREGATE,[ANY, ANY],,ANY,f
argmin,AGGREGATE,[ANY, BLOB],,ANY,f
argmin,AGGREGATE,[ANY, TIMESTAMP WITH TIME ZONE],,ANY,f
argmin,AGGREGATE,[ANY, TIMESTAMP],,ANY,f
argmin,AGGREGATE,[ANY, DATE],,ANY,f
argmin,AGGREGATE,[ANY, VARCHAR],,ANY,f
argmin,AGGREGATE,[ANY, DOUBLE],,ANY,f
argmin,AGGREGATE,[ANY, HUGEINT],,ANY,f
argmin,AGGREGATE,[ANY, BIGINT],,ANY,f
argmin,AGGREGATE,[ANY, INTEGER],,ANY,f
argmin,AGGREGATE,[DECIMAL, BLOB],,DECIMAL,f
argmin,AGGREGATE,[DECIMAL, TIMESTAMP WITH TIME ZONE],,DECIMAL,f
argmin,AGGREGATE,[DECIMAL, TIMESTAMP],,DECIMAL,f
argmin,AGGREGATE,[DECIMAL, DATE],,DECIMAL,f
argmin,AGGREGATE,[DECIMAL, VARCHAR],,DECIMAL,f
argmin,AGGREGATE,[DECIMAL, DOUBLE],,DECIMAL,f
argmin,AGGREGATE,[DECIMAL, HUGEINT],,DECIMAL,f
argmin,AGGREGATE,[DECIMAL, BIGINT],,DECIMAL,f
argmin,AGGREGATE,[DECIMAL, INTEGER],,DECIMAL,f
argmin,AGGREGATE,[BLOB, BLOB],,BLOB,f
argmin,AGGREGATE,[BLOB, TIMESTAMP WITH TIME ZONE],,BLOB,f
argmin,AGGREGATE,[BLOB, TIMESTAMP],,BLOB,f
argmin,AGGREGATE,[BLOB, DATE],,BLOB,f
argmin,AGGREGATE,[BLOB, VARCHAR],,BLOB,f
argmin,AGGREGATE,[DATE, TIMESTAMP],,DATE,f
argmin,AGGREGATE,[DATE, TIMESTAMP WITH TIME ZONE],,DATE,f
argmin,AGGREGATE,[BLOB, BIGINT],,BLOB,f
argmin,AGGREGATE,[BLOB, INTEGER],,BLOB,f
argmin,AGGREGATE,[TIMESTAMP WITH TIME ZONE, BLOB],,TIMESTAMP WITH TIME ZONE,f
argmin,AGGREGATE,[TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH TIME ZONE],,TIMESTAMP WITH TIME ZONE,f
argmin,AGGREGATE,[TIMESTAMP WITH TIME ZONE, TIMESTAMP],,TIMESTAMP WITH TIME ZONE,f
argmin,AGGREGATE,[TIMESTAMP WITH TIME ZONE, DATE],,TIMESTAMP WITH TIME ZONE,f
argmin,AGGREGATE,[TIMESTAMP WITH TIME ZONE, VARCHAR],,TIMESTAMP WITH TIME ZONE,f
argmin,AGGREGATE,[TIMESTAMP WITH TIME ZONE, DOUBLE],,TIMESTAMP WITH TIME ZONE,f
argmin,AGGREGATE,[TIMESTAMP WITH TIME ZONE, HUGEINT],,TIMESTAMP WITH TIME ZONE,f
argmin,AGGREGATE,[TIMESTAMP WITH TIME ZONE, BIGINT],,TIMESTAMP WITH TIME ZONE,f
argmin,AGGREGATE,[TIMESTAMP WITH TIME ZONE, INTEGER],,TIMESTAMP WITH TIME ZONE,f
argmin,AGGREGATE,[TIMESTAMP, BLOB],,TIMESTAMP,f
argmin,AGGREGATE,[TIMESTAMP, TIMESTAMP WITH TIME ZONE],,TIMESTAMP,f
argmin,AGGREGATE,[TIMESTAMP, TIMESTAMP],,TIMESTAMP,f
argmin,AGGREGATE,[TIMESTAMP, DATE],,TIMESTAMP,f
argmin,AGGREGATE,[TIMESTAMP, VARCHAR],,TIMESTAMP,f
argmin,AGGREGATE,[TIMESTAMP, DOUBLE],,TIMESTAMP,f
argmin,AGGREGATE,[TIMESTAMP, HUGEINT],,TIMESTAMP,f
argmin,AGGREGATE,[TIMESTAMP, BIGINT],,TIMESTAMP,f
argmin,AGGREGATE,[DATE, BLOB],,DATE,f
array_agg,AGGREGATE,[ANY],,LIST,f
array_aggr,SCALAR,[ANY[], VARCHAR],ANY,ANY,f
array_aggregate,SCALAR,[ANY[], VARCHAR],ANY,ANY,f
array_apply,SCALAR,[ANY[], LAMBDA],,ANY[],f
array_cat,SCALAR,[ANY[], ANY[]],,ANY[],f
array_concat,SCALAR,[ANY[], ANY[]],,ANY[],f
array_contains,SCALAR,[ANY[], ANY],,BOOLEAN,f
array_cosine_distance,SCALAR,[DOUBLE[ANY], DOUBLE[ANY]],,DOUBLE,f
array_cosine_distance,SCALAR,[FLOAT[ANY], FLOAT[ANY]],,FLOAT,f
array_cosine_similarity,SCALAR,[DOUBLE[ANY], DOUBLE[ANY]],,DOUBLE,f
array_cosine_similarity,SCALAR,[FLOAT[ANY], FLOAT[ANY]],,FLOAT,f
array_cross_product,SCALAR,[DOUBLE[3], DOUBLE[3]],,DOUBLE[3],f
array_cross_product,SCALAR,[FLOAT[3], FLOAT[3]],,FLOAT[3],f
array_distance,SCALAR,[DOUBLE[ANY], DOUBLE[ANY]],,DOUBLE,f
array_distance,SCALAR,[FLOAT[ANY], FLOAT[ANY]],,FLOAT,f
array_distinct,SCALAR,[ANY[]],,ANY[],f
array_dot_product,SCALAR,[DOUBLE[ANY], DOUBLE[ANY]],,DOUBLE,f
array_dot_product,SCALAR,[FLOAT[ANY], FLOAT[ANY]],,FLOAT,f
array_extract,SCALAR,[ANY[], BIGINT],,ANY,f
array_extract,SCALAR,[VARCHAR, BIGINT],,VARCHAR,f
array_extract,SCALAR,[STRUCT, VARCHAR],,ANY,f
array_extract,SCALAR,[STRUCT, BIGINT],,ANY,f
array_filter,SCALAR,[ANY[], LAMBDA],,ANY[],f
array_grade_up,SCALAR,[ANY[], VARCHAR, VARCHAR],,ANY[],f
array_grade_up,SCALAR,[ANY[], VARCHAR],,ANY[],f
array_grade_up,SCALAR,[ANY[]],,ANY[],f
array_has,SCALAR,[ANY[], ANY],,BOOLEAN,f
array_has_all,SCALAR,[ANY[], ANY[]],,BOOLEAN,f
array_has_any,SCALAR,[ANY[], ANY[]],,BOOLEAN,f
array_indexof,SCALAR,[ANY[], ANY],,INTEGER,f
array_inner_product,SCALAR,[FLOAT[ANY], FLOAT[ANY]],,FLOAT,f
array_inner_product,SCALAR,[DOUBLE[ANY], DOUBLE[ANY]],,DOUBLE,f
array_length,SCALAR,[ANY[]],,BIGINT,f
array_length,SCALAR,[ANY[], BIGINT],,BIGINT,f
array_negative_dot_product,SCALAR,[FLOAT[ANY], FLOAT[ANY]],,FLOAT,f
array_negative_dot_product,SCALAR,[DOUBLE[ANY], DOUBLE[ANY]],,DOUBLE,f
array_negative_inner_product,SCALAR,[FLOAT[ANY], FLOAT[ANY]],,FLOAT,f
array_negative_inner_product,SCALAR,[DOUBLE[ANY], DOUBLE[ANY]],,DOUBLE,f
array_position,SCALAR,[ANY[], ANY],,INTEGER,f
array_reduce,SCALAR,[ANY[], LAMBDA],,ANY,f
array_resize,SCALAR,[ANY[], ANY],,ANY[],f
array_resize,SCALAR,[ANY[], ANY, ANY],,ANY[],f
array_reverse_sort,SCALAR,[ANY[], VARCHAR],,ANY[],f
array_reverse_sort,SCALAR,[ANY[]],,ANY[],f
array_select,SCALAR,[ANY[], BIGINT[]],,ANY[],f
array_slice,SCALAR,[ANY, ANY, ANY, BIGINT],,ANY,f
array_slice,SCALAR,[ANY, ANY, ANY],,ANY,f
array_sort,SCALAR,[ANY[], VARCHAR],,ANY[],f
array_sort,SCALAR,[ANY[]],,ANY[],f
array_sort,SCALAR,[ANY[], VARCHAR, VARCHAR],,ANY[],f
array_to_json,SCALAR,[],ANY,JSON,f
array_transform,SCALAR,[ANY[], LAMBDA],,ANY[],f
array_unique,SCALAR,[ANY[]],,UBIGINT,f
array_value,SCALAR,[],ANY,ARRAY,f
array_where,SCALAR,[ANY[], BOOLEAN[]],,ANY[],f
array_zip,SCALAR,[],ANY,STRUCT[],f
ascii,SCALAR,[VARCHAR],,INTEGER,f
asin,SCALAR,[DOUBLE],,DOUBLE,f
asinh,SCALAR,[DOUBLE],,DOUBLE,f
atan,SCALAR,[DOUBLE],,DOUBLE,f
atan2,SCALAR,[DOUBLE, DOUBLE],,DOUBLE,f
atanh,SCALAR,[DOUBLE],,DOUBLE,f
avg,AGGREGATE,[DOUBLE],,DOUBLE,f
avg,AGGREGATE,[HUGEINT],,DOUBLE,f
avg,AGGREGATE,[BIGINT],,DOUBLE,f
avg,AGGREGATE,[INTEGER],,DOUBLE,f
avg,AGGREGATE,[SMALLINT],,DOUBLE,f
avg,AGGREGATE,[DECIMAL],,DECIMAL,f
bar,SCALAR,[DOUBLE, DOUBLE, DOUBLE],,VARCHAR,f
bar,SCALAR,[DOUBLE, DOUBLE, DOUBLE, DOUBLE],,VARCHAR,f
base64,SCALAR,[BLOB],,VARCHAR,f
bin,SCALAR,[BIGINT],,VARCHAR,f
bin,SCALAR,[VARCHAR],,VARCHAR,f
bin,SCALAR,[VARINT],,VARCHAR,f
bin,SCALAR,[UBIGINT],,VARCHAR,f
bin,SCALAR,[UHUGEINT],,VARCHAR,f
bin,SCALAR,[HUGEINT],,VARCHAR,f
bit_and,AGGREGATE,[BIGINT],,BIGINT,f
bit_and,AGGREGATE,[TINYINT],,TINYINT,f
bit_and,AGGREGATE,[INTEGER],,INTEGER,f
bit_and,AGGREGATE,[SMALLINT],,SMALLINT,f
bit_and,AGGREGATE,[BIT],,BIT,f
bit_and,AGGREGATE,[UHUGEINT],,UHUGEINT,f
bit_and,AGGREGATE,[UBIGINT],,UBIGINT,f
bit_and,AGGREGATE,[UINTEGER],,UINTEGER,f
bit_and,AGGREGATE,[USMALLINT],,USMALLINT,f
bit_and,AGGREGATE,[UTINYINT],,UTINYINT,f
bit_and,AGGREGATE,[HUGEINT],,HUGEINT,f
bit_count,SCALAR,[TINYINT],,TINYINT,f
bit_count,SCALAR,[INTEGER],,TINYINT,f
bit_count,SCALAR,[BIT],,BIGINT,f
bit_count,SCALAR,[BIGINT],,TINYINT,f
bit_count,SCALAR,[SMALLINT],,TINYINT,f
bit_count,SCALAR,[HUGEINT],,TINYINT,f
bit_length,SCALAR,[BIT],,BIGINT,f
bit_length,SCALAR,[VARCHAR],,BIGINT,f
bit_or,AGGREGATE,[BIT],,BIT,f
bit_or,AGGREGATE,[BIGINT],,BIGINT,f
bit_or,AGGREGATE,[TINYINT],,TINYINT,f
bit_or,AGGREGATE,[HUGEINT],,HUGEINT,f
bit_or,AGGREGATE,[INTEGER],,INTEGER,f
bit_or,AGGREGATE,[UTINYINT],,UTINYINT,f
bit_or,AGGREGATE,[USMALLINT],,USMALLINT,f
bit_or,AGGREGATE,[UINTEGER],,UINTEGER,f
bit_or,AGGREGATE,[SMALLINT],,SMALLINT,f
bit_or,AGGREGATE,[UBIGINT],,UBIGINT,f
bit_or,AGGREGATE,[UHUGEINT],,UHUGEINT,f
bit_position,SCALAR,[BIT, BIT],,INTEGER,f
bit_xor,AGGREGATE,[USMALLINT],,USMALLINT,f
bit_xor,AGGREGATE,[TINYINT],,TINYINT,f
bit_xor,AGGREGATE,[UBIGINT],,UBIGINT,f
bit_xor,AGGREGATE,[UINTEGER],,UINTEGER,f
bit_xor,AGGREGATE,[BIT],,BIT,f
bit_xor,AGGREGATE,[SMALLINT],,SMALLINT,f
bit_xor,AGGREGATE,[UHUGEINT],,UHUGEINT,f
bit_xor,AGGREGATE,[UTINYINT],,UTINYINT,f
bit_xor,AGGREGATE,[HUGEINT],,HUGEINT,f
bit_xor,AGGREGATE,[BIGINT],,BIGINT,f
bit_xor,AGGREGATE,[INTEGER],,INTEGER,f
bitstring,SCALAR,[BIT, INTEGER],,BIT,f
bitstring,SCALAR,[VARCHAR, INTEGER],,BIT,f
bitstring_agg,AGGREGATE,[UINTEGER],,BIT,f
bitstring_agg,AGGREGATE,[INTEGER],,BIT,f
bitstring_agg,AGGREGATE,[BIGINT],,BIT,f
bitstring_agg,AGGREGATE,[BIGINT, BIGINT, BIGINT],,BIT,f
bitstring_agg,AGGREGATE,[HUGEINT],,BIT,f
bitstring_agg,AGGREGATE,[HUGEINT, HUGEINT, HUGEINT],,BIT,f
bitstring_agg,AGGREGATE,[UTINYINT],,BIT,f
bitstring_agg,AGGREGATE,[UTINYINT, UTINYINT, UTINYINT],,BIT,f
bitstring_agg,AGGREGATE,[USMALLINT],,BIT,f
bitstring_agg,AGGREGATE,[USMALLINT, USMALLINT, USMALLINT],,BIT,f
bitstring_agg,AGGREGATE,[TINYINT],,BIT,f
bitstring_agg,AGGREGATE,[UINTEGER, UINTEGER, UINTEGER],,BIT,f
bitstring_agg,AGGREGATE,[UBIGINT],,BIT,f
bitstring_agg,AGGREGATE,[UBIGINT, UBIGINT, UBIGINT],,BIT,f
bitstring_agg,AGGREGATE,[SMALLINT, SMALLINT, SMALLINT],,BIT,f
bitstring_agg,AGGREGATE,[UHUGEINT],,BIT,f
bitstring_agg,AGGREGATE,[TINYINT, TINYINT, TINYINT],,BIT,f
bitstring_agg,AGGREGATE,[UHUGEINT, UHUGEINT, UHUGEINT],,BIT,f
bitstring_agg,AGGREGATE,[SMALLINT],,BIT,f
bitstring_agg,AGGREGATE,[INTEGER, INTEGER, INTEGER],,BIT,f
bool_and,AGGREGATE,[BOOLEAN],,BOOLEAN,f
bool_or,AGGREGATE,[BOOLEAN],,BOOLEAN,f
can_cast_implicitly,SCALAR,[ANY, ANY],,BOOLEAN,f
cardinality,SCALAR,[ANY],ANY,UBIGINT,f
cbrt,SCALAR,[DOUBLE],,DOUBLE,f
ceil,SCALAR,[DECIMAL],,DECIMAL,f
ceil,SCALAR,[DOUBLE],,DOUBLE,f
ceil,SCALAR,[FLOAT],,FLOAT,f
ceiling,SCALAR,[FLOAT],,FLOAT,f
ceiling,SCALAR,[DECIMAL],,DECIMAL,f
ceiling,SCALAR,[DOUBLE],,DOUBLE,f
century,SCALAR,[DATE],,BIGINT,f
century,SCALAR,[INTERVAL],,BIGINT,f
century,SCALAR,[TIMESTAMP],,BIGINT,f
century,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
chr,SCALAR,[INTEGER],,VARCHAR,f
combine,SCALAR,[AGGREGATE_STATE<?>, ANY],,AGGREGATE_STATE<?>,f
concat,SCALAR,[ANY],ANY,ANY,f
concat_ws,SCALAR,[VARCHAR, ANY],ANY,VARCHAR,f
constant_or_null,SCALAR,[ANY, ANY],ANY,ANY,f
contains,SCALAR,[ANY[], ANY],,BOOLEAN,f
contains,SCALAR,[MAP(ANY, ANY), ANY],,BOOLEAN,f
contains,SCALAR,[VARCHAR, VARCHAR],,BOOLEAN,f
corr,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
cos,SCALAR,[DOUBLE],,DOUBLE,f
cosh,SCALAR,[DOUBLE],,DOUBLE,f
cot,SCALAR,[DOUBLE],,DOUBLE,f
count,AGGREGATE,[ANY],,BIGINT,f
count,AGGREGATE,[],,BIGINT,f
count_star,AGGREGATE,[],,BIGINT,f
covar_pop,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
covar_samp,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
create_sort_key,SCALAR,[ANY],ANY,BLOB,f
current_database,SCALAR,[],,VARCHAR,f
current_date,SCALAR,[],,DATE,f
current_localtime,SCALAR,[],,TIME,f
current_localtimestamp,SCALAR,[],,TIMESTAMP,f
current_query,SCALAR,[],,VARCHAR,t
current_schema,SCALAR,[],,VARCHAR,f
current_schemas,SCALAR,[BOOLEAN],,VARCHAR[],f
current_setting,SCALAR,[VARCHAR],,ANY,f
currval,SCALAR,[VARCHAR],,BIGINT,t
damerau_levenshtein,SCALAR,[VARCHAR, VARCHAR],,BIGINT,f
date_diff,SCALAR,[VARCHAR, TIMESTAMP, TIMESTAMP],,BIGINT,f
date_diff,SCALAR,[VARCHAR, TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH TIME ZONE],,BIGINT,f
date_diff,SCALAR,[VARCHAR, TIME, TIME],,BIGINT,f
date_diff,SCALAR,[VARCHAR, DATE, DATE],,BIGINT,f
date_part,SCALAR,[VARCHAR[], TIME WITH TIME ZONE],,STRUCT(),f
date_part,SCALAR,[VARCHAR, DATE],,BIGINT,f
date_part,SCALAR,[VARCHAR[], TIME],,STRUCT(),f
date_part,SCALAR,[VARCHAR[], TIMESTAMP WITH TIME ZONE],,STRUCT(),f
date_part,SCALAR,[VARCHAR, TIMESTAMP WITH TIME ZONE],,BIGINT,f
date_part,SCALAR,[VARCHAR[], TIMESTAMP],,STRUCT(),f
date_part,SCALAR,[VARCHAR[], INTERVAL],,STRUCT(),f
date_part,SCALAR,[VARCHAR[], DATE],,STRUCT(),f
date_part,SCALAR,[VARCHAR, TIME WITH TIME ZONE],,BIGINT,f
date_part,SCALAR,[VARCHAR, TIMESTAMP],,BIGINT,f
date_part,SCALAR,[VARCHAR, TIME],,BIGINT,f
date_part,SCALAR,[VARCHAR, INTERVAL],,BIGINT,f
date_sub,SCALAR,[VARCHAR, TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH TIME ZONE],,BIGINT,f
date_sub,SCALAR,[VARCHAR, TIMESTAMP, TIMESTAMP],,BIGINT,f
date_sub,SCALAR,[VARCHAR, TIME, TIME],,BIGINT,f
date_sub,SCALAR,[VARCHAR, DATE, DATE],,BIGINT,f
date_trunc,SCALAR,[VARCHAR, INTERVAL],,INTERVAL,f
date_trunc,SCALAR,[VARCHAR, DATE],,TIMESTAMP,f
date_trunc,SCALAR,[VARCHAR, TIMESTAMP WITH TIME ZONE],,TIMESTAMP WITH TIME ZONE,f
date_trunc,SCALAR,[VARCHAR, TIMESTAMP],,TIMESTAMP,f
datediff,SCALAR,[VARCHAR, DATE, DATE],,BIGINT,f
datediff,SCALAR,[VARCHAR, TIME, TIME],,BIGINT,f
datediff,SCALAR,[VARCHAR, TIMESTAMP, TIMESTAMP],,BIGINT,f
datediff,SCALAR,[VARCHAR, TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH TIME ZONE],,BIGINT,f
datepart,SCALAR,[VARCHAR[], TIME WITH TIME ZONE],,STRUCT(),f
datepart,SCALAR,[VARCHAR[], TIMESTAMP],,STRUCT(),f
datepart,SCALAR,[VARCHAR[], INTERVAL],,STRUCT(),f
datepart,SCALAR,[VARCHAR[], DATE],,STRUCT(),f
datepart,SCALAR,[VARCHAR, TIME WITH TIME ZONE],,BIGINT,f
datepart,SCALAR,[VARCHAR, TIMESTAMP],,BIGINT,f
datepart,SCALAR,[VARCHAR, TIME],,BIGINT,f
datepart,SCALAR,[VARCHAR, INTERVAL],,BIGINT,f
datepart,SCALAR,[VARCHAR, DATE],,BIGINT,f
datepart,SCALAR,[VARCHAR[], TIME],,STRUCT(),f
datepart,SCALAR,[VARCHAR[], TIMESTAMP WITH TIME ZONE],,STRUCT(),f
datepart,SCALAR,[VARCHAR, TIMESTAMP WITH TIME ZONE],,BIGINT,f
datesub,SCALAR,[VARCHAR, TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH TIME ZONE],,BIGINT,f
datesub,SCALAR,[VARCHAR, TIME, TIME],,BIGINT,f
datesub,SCALAR,[VARCHAR, DATE, DATE],,BIGINT,f
datesub,SCALAR,[VARCHAR, TIMESTAMP, TIMESTAMP],,BIGINT,f
datetrunc,SCALAR,[VARCHAR, DATE],,TIMESTAMP,f
datetrunc,SCALAR,[VARCHAR, INTERVAL],,INTERVAL,f
datetrunc,SCALAR,[VARCHAR, TIMESTAMP],,TIMESTAMP,f
datetrunc,SCALAR,[VARCHAR, TIMESTAMP WITH TIME ZONE],,TIMESTAMP WITH TIME ZONE,f
day,SCALAR,[TIMESTAMP],,BIGINT,f
day,SCALAR,[DATE],,BIGINT,f
day,SCALAR,[INTERVAL],,BIGINT,f
day,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
dayname,SCALAR,[DATE],,VARCHAR,f
dayname,SCALAR,[TIMESTAMP],,VARCHAR,f
dayname,SCALAR,[TIMESTAMP WITH TIME ZONE],,VARCHAR,f
dayofmonth,SCALAR,[DATE],,BIGINT,f
dayofmonth,SCALAR,[INTERVAL],,BIGINT,f
dayofmonth,SCALAR,[TIMESTAMP],,BIGINT,f
dayofmonth,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
dayofweek,SCALAR,[DATE],,BIGINT,f
dayofweek,SCALAR,[INTERVAL],,BIGINT,f
dayofweek,SCALAR,[TIMESTAMP],,BIGINT,f
dayofweek,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
dayofyear,SCALAR,[TIMESTAMP],,BIGINT,f
dayofyear,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
dayofyear,SCALAR,[INTERVAL],,BIGINT,f
dayofyear,SCALAR,[DATE],,BIGINT,f
decade,SCALAR,[INTERVAL],,BIGINT,f
decade,SCALAR,[DATE],,BIGINT,f
decade,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
decade,SCALAR,[TIMESTAMP],,BIGINT,f
decode,SCALAR,[BLOB],,VARCHAR,f
degrees,SCALAR,[DOUBLE],,DOUBLE,f
divide,SCALAR,[SMALLINT, SMALLINT],,SMALLINT,f
divide,SCALAR,[TINYINT, TINYINT],,TINYINT,f
divide,SCALAR,[UHUGEINT, UHUGEINT],,UHUGEINT,f
divide,SCALAR,[UBIGINT, UBIGINT],,UBIGINT,f
divide,SCALAR,[UINTEGER, UINTEGER],,UINTEGER,f
divide,SCALAR,[USMALLINT, USMALLINT],,USMALLINT,f
divide,SCALAR,[UTINYINT, UTINYINT],,UTINYINT,f
divide,SCALAR,[DOUBLE, DOUBLE],,DOUBLE,f
divide,SCALAR,[FLOAT, FLOAT],,FLOAT,f
divide,SCALAR,[HUGEINT, HUGEINT],,HUGEINT,f
divide,SCALAR,[BIGINT, BIGINT],,BIGINT,f
divide,SCALAR,[INTEGER, INTEGER],,INTEGER,f
editdist3,SCALAR,[VARCHAR, VARCHAR],,BIGINT,f
element_at,SCALAR,[ANY, ANY],ANY,ANY,f
encode,SCALAR,[VARCHAR],,BLOB,f
entropy,AGGREGATE,[ANY],,DOUBLE,f
enum_code,SCALAR,[ANY],,ANY,f
enum_first,SCALAR,[ANY],,VARCHAR,f
enum_last,SCALAR,[ANY],,VARCHAR,f
enum_range,SCALAR,[ANY],,VARCHAR[],f
enum_range_boundary,SCALAR,[ANY, ANY],,VARCHAR[],f
epoch,SCALAR,[TIMESTAMP],,DOUBLE,f
epoch,SCALAR,[DATE],,DOUBLE,f
epoch,SCALAR,[INTERVAL],,DOUBLE,f
epoch,SCALAR,[TIME],,DOUBLE,f
epoch,SCALAR,[TIME WITH TIME ZONE],,DOUBLE,f
epoch,SCALAR,[TIMESTAMP WITH TIME ZONE],,DOUBLE,f
epoch_ms,SCALAR,[TIME],,BIGINT,f
epoch_ms,SCALAR,[TIMESTAMP],,BIGINT,f
epoch_ms,SCALAR,[INTERVAL],,BIGINT,f
epoch_ms,SCALAR,[DATE],,BIGINT,f
epoch_ms,SCALAR,[TIME WITH TIME ZONE],,BIGINT,f
epoch_ms,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
epoch_ms,SCALAR,[BIGINT],,TIMESTAMP,f
epoch_ns,SCALAR,[INTERVAL],,BIGINT,f
epoch_ns,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
epoch_ns,SCALAR,[TIME WITH TIME ZONE],,BIGINT,f
epoch_ns,SCALAR,[TIME],,BIGINT,f
epoch_ns,SCALAR,[DATE],,BIGINT,f
epoch_ns,SCALAR,[TIMESTAMP],,BIGINT,f
epoch_us,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
epoch_us,SCALAR,[INTERVAL],,BIGINT,f
epoch_us,SCALAR,[DATE],,BIGINT,f
epoch_us,SCALAR,[TIMESTAMP],,BIGINT,f
epoch_us,SCALAR,[TIME],,BIGINT,f
epoch_us,SCALAR,[TIME WITH TIME ZONE],,BIGINT,f
equi_width_bins,SCALAR,[ANY, ANY, BIGINT, BOOLEAN],,ANY[],f
equi_width_bins,SCALAR,[TIMESTAMP, TIMESTAMP, BIGINT, BOOLEAN],,ANY[],f
equi_width_bins,SCALAR,[DOUBLE, DOUBLE, BIGINT, BOOLEAN],,ANY[],f
equi_width_bins,SCALAR,[BIGINT, BIGINT, BIGINT, BOOLEAN],,ANY[],f
era,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
era,SCALAR,[TIMESTAMP],,BIGINT,f
era,SCALAR,[INTERVAL],,BIGINT,f
era,SCALAR,[DATE],,BIGINT,f
error,SCALAR,[VARCHAR],,"NULL",t
even,SCALAR,[DOUBLE],,DOUBLE,f
exp,SCALAR,[DOUBLE],,DOUBLE,f
factorial,SCALAR,[INTEGER],,HUGEINT,f
favg,AGGREGATE,[DOUBLE],,DOUBLE,f
filter,SCALAR,[ANY[], LAMBDA],,ANY[],f
finalize,SCALAR,[AGGREGATE_STATE<?>],,INVALID,f
first,AGGREGATE,[ANY],,ANY,f
first,AGGREGATE,[DECIMAL],,DECIMAL,f
flatten,SCALAR,[ANY[][]],,ANY[],f
floor,SCALAR,[DECIMAL],,DECIMAL,f
floor,SCALAR,[DOUBLE],,DOUBLE,f
floor,SCALAR,[FLOAT],,FLOAT,f
format,SCALAR,[VARCHAR],ANY,VARCHAR,f
formatReadableDecimalSize,SCALAR,[BIGINT],,VARCHAR,f
formatReadableSize,SCALAR,[BIGINT],,VARCHAR,f
format_bytes,SCALAR,[BIGINT],,VARCHAR,f
from_base64,SCALAR,[VARCHAR],,BLOB,f
from_binary,SCALAR,[VARCHAR],,BLOB,f
from_hex,SCALAR,[VARCHAR],,BLOB,f
from_json,SCALAR,[VARCHAR, VARCHAR],,ANY,f
from_json,SCALAR,[JSON, VARCHAR],,ANY,f
from_json_strict,SCALAR,[JSON, VARCHAR],,ANY,f
from_json_strict,SCALAR,[VARCHAR, VARCHAR],,ANY,f
fsum,AGGREGATE,[DOUBLE],,DOUBLE,f
gamma,SCALAR,[DOUBLE],,DOUBLE,f
gcd,SCALAR,[BIGINT, BIGINT],,BIGINT,f
gcd,SCALAR,[HUGEINT, HUGEINT],,HUGEINT,f
gen_random_uuid,SCALAR,[],,UUID,t
generate_series,SCALAR,[TIMESTAMP, TIMESTAMP, INTERVAL],,TIMESTAMP[],f
generate_series,SCALAR,[TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH TIME ZONE, INTERVAL],,TIMESTAMP WITH TIME ZONE[],f
generate_series,SCALAR,[BIGINT, BIGINT],,BIGINT[],f
generate_series,SCALAR,[BIGINT],,BIGINT[],f
generate_series,SCALAR,[BIGINT, BIGINT, BIGINT],,BIGINT[],f
get_bit,SCALAR,[BIT, INTEGER],,INTEGER,f
get_current_time,SCALAR,[],,TIME,f
get_current_timestamp,SCALAR,[],,TIMESTAMP WITH TIME ZONE,f
getvariable,SCALAR,[VARCHAR],,ANY,f
grade_up,SCALAR,[ANY[]],,ANY[],f
grade_up,SCALAR,[ANY[], VARCHAR],,ANY[],f
grade_up,SCALAR,[ANY[], VARCHAR, VARCHAR],,ANY[],f
greatest,SCALAR,[ANY],ANY,ANY,f
greatest_common_divisor,SCALAR,[BIGINT, BIGINT],,BIGINT,f
greatest_common_divisor,SCALAR,[HUGEINT, HUGEINT],,HUGEINT,f
group_concat,AGGREGATE,[ANY, VARCHAR],,VARCHAR,f
group_concat,AGGREGATE,[ANY],,VARCHAR,f
hamming,SCALAR,[VARCHAR, VARCHAR],,BIGINT,f
hash,SCALAR,[ANY],ANY,UBIGINT,f
hex,SCALAR,[BLOB],,VARCHAR,f
hex,SCALAR,[VARINT],,VARCHAR,f
hex,SCALAR,[VARCHAR],,VARCHAR,f
hex,SCALAR,[BIGINT],,VARCHAR,f
hex,SCALAR,[UHUGEINT],,VARCHAR,f
hex,SCALAR,[HUGEINT],,VARCHAR,f
hex,SCALAR,[UBIGINT],,VARCHAR,f
histogram,AGGREGATE,[ANY, ANY[]],,MAP,f
histogram,AGGREGATE,[ANY],,MAP,f
histogram_exact,AGGREGATE,[ANY, ANY[]],,MAP,f
hour,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
hour,SCALAR,[DATE],,BIGINT,f
hour,SCALAR,[TIMESTAMP],,BIGINT,f
hour,SCALAR,[TIME],,BIGINT,f
hour,SCALAR,[TIME WITH TIME ZONE],,BIGINT,f
hour,SCALAR,[INTERVAL],,BIGINT,f
icu_collate_af,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_am,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ar,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ar_sa,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_as,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_az,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_be,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_bg,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_bn,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_bo,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_br,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_bs,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ca,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ceb,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_chr,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_cs,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_cy,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_da,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_de,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_de_at,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_dsb,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_dz,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ee,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_el,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_en,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_en_us,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_eo,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_es,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_et,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_fa,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_fa_af,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ff,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_fi,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_fil,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_fo,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_fr,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_fr_ca,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_fy,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ga,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_gl,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_gu,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ha,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_haw,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_he,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_he_il,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_hi,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_hr,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_hsb,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_hu,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_hy,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_id,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_id_id,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ig,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_is,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_it,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ja,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ka,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_kk,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_kl,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_km,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_kn,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ko,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_kok,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ku,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ky,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_lb,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_lkt,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ln,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_lo,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_lt,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_lv,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_mk,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ml,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_mn,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_mr,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ms,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_mt,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_my,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_nb,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_nb_no,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ne,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_nl,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_nn,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_noaccent,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_om,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_or,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_pa,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_pa_in,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_pl,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ps,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_pt,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ro,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ru,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_sa,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_se,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_si,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_sk,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_sl,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_smn,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_sq,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_sr,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_sr_ba,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_sr_me,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_sr_rs,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_sv,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_sw,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ta,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_te,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_th,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_tk,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_to,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_tr,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ug,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_uk,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_ur,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_uz,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_vi,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_wae,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_wo,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_xh,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_yi,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_yo,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_yue,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_yue_cn,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_zh,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_zh_cn,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_zh_hk,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_zh_mo,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_zh_sg,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_zh_tw,SCALAR,[VARCHAR],,VARCHAR,f
icu_collate_zu,SCALAR,[VARCHAR],,VARCHAR,f
icu_sort_key,SCALAR,[VARCHAR, VARCHAR],,VARCHAR,f
ilike_escape,SCALAR,[VARCHAR, VARCHAR, VARCHAR],,BOOLEAN,f
in_search_path,SCALAR,[VARCHAR, VARCHAR],,BOOLEAN,f
instr,SCALAR,[VARCHAR, VARCHAR],,BIGINT,f
is_histogram_other_bin,SCALAR,[ANY],,BOOLEAN,f
isfinite,SCALAR,[TIMESTAMP WITH TIME ZONE],,BOOLEAN,f
isfinite,SCALAR,[DOUBLE],,BOOLEAN,f
isfinite,SCALAR,[DATE],,BOOLEAN,f
isfinite,SCALAR,[TIMESTAMP],,BOOLEAN,f
isfinite,SCALAR,[FLOAT],,BOOLEAN,f
isinf,SCALAR,[FLOAT],,BOOLEAN,f
isinf,SCALAR,[DOUBLE],,BOOLEAN,f
isinf,SCALAR,[DATE],,BOOLEAN,f
isinf,SCALAR,[TIMESTAMP],,BOOLEAN,f
isinf,SCALAR,[TIMESTAMP WITH TIME ZONE],,BOOLEAN,f
isnan,SCALAR,[FLOAT],,BOOLEAN,f
isnan,SCALAR,[DOUBLE],,BOOLEAN,f
isodow,SCALAR,[DATE],,BIGINT,f
isodow,SCALAR,[INTERVAL],,BIGINT,f
isodow,SCALAR,[TIMESTAMP],,BIGINT,f
isodow,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
isoyear,SCALAR,[DATE],,BIGINT,f
isoyear,SCALAR,[TIMESTAMP],,BIGINT,f
isoyear,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
isoyear,SCALAR,[INTERVAL],,BIGINT,f
jaccard,SCALAR,[VARCHAR, VARCHAR],,DOUBLE,f
jaro_similarity,SCALAR,[VARCHAR, VARCHAR],,DOUBLE,f
jaro_similarity,SCALAR,[VARCHAR, VARCHAR, DOUBLE],,DOUBLE,f
jaro_winkler_similarity,SCALAR,[VARCHAR, VARCHAR, DOUBLE],,DOUBLE,f
jaro_winkler_similarity,SCALAR,[VARCHAR, VARCHAR],,DOUBLE,f
json_array,SCALAR,[],ANY,JSON,f
json_array_length,SCALAR,[JSON],,UBIGINT,f
json_array_length,SCALAR,[VARCHAR],,UBIGINT,f
json_array_length,SCALAR,[VARCHAR, VARCHAR],,UBIGINT,f
json_array_length,SCALAR,[VARCHAR, VARCHAR[]],,UBIGINT[],f
json_array_length,SCALAR,[JSON, VARCHAR],,UBIGINT,f
json_array_length,SCALAR,[JSON, VARCHAR[]],,UBIGINT[],f
json_contains,SCALAR,[VARCHAR, VARCHAR],,BOOLEAN,f
json_contains,SCALAR,[VARCHAR, JSON],,BOOLEAN,f
json_contains,SCALAR,[JSON, VARCHAR],,BOOLEAN,f
json_contains,SCALAR,[JSON, JSON],,BOOLEAN,f
json_deserialize_sql,SCALAR,[JSON],,VARCHAR,f
json_exists,SCALAR,[JSON, VARCHAR],,BOOLEAN,f
json_exists,SCALAR,[JSON, VARCHAR[]],,BOOLEAN[],f
json_exists,SCALAR,[VARCHAR, VARCHAR],,BOOLEAN,f
json_exists,SCALAR,[VARCHAR, VARCHAR[]],,BOOLEAN[],f
json_extract,SCALAR,[JSON, BIGINT],,JSON,f
json_extract,SCALAR,[VARCHAR, BIGINT],,JSON,f
json_extract,SCALAR,[VARCHAR, VARCHAR],,JSON,f
json_extract,SCALAR,[VARCHAR, VARCHAR[]],,JSON[],f
json_extract,SCALAR,[JSON, VARCHAR],,JSON,f
json_extract,SCALAR,[JSON, VARCHAR[]],,JSON[],f
json_extract_path,SCALAR,[VARCHAR, BIGINT],,JSON,f
json_extract_path,SCALAR,[VARCHAR, VARCHAR],,JSON,f
json_extract_path,SCALAR,[VARCHAR, VARCHAR[]],,JSON[],f
json_extract_path,SCALAR,[JSON, BIGINT],,JSON,f
json_extract_path,SCALAR,[JSON, VARCHAR],,JSON,f
json_extract_path,SCALAR,[JSON, VARCHAR[]],,JSON[],f
json_extract_path_text,SCALAR,[VARCHAR, BIGINT],,VARCHAR,f
json_extract_path_text,SCALAR,[VARCHAR, VARCHAR],,VARCHAR,f
json_extract_path_text,SCALAR,[VARCHAR, VARCHAR[]],,VARCHAR[],f
json_extract_path_text,SCALAR,[JSON, BIGINT],,VARCHAR,f
json_extract_path_text,SCALAR,[JSON, VARCHAR],,VARCHAR,f
json_extract_path_text,SCALAR,[JSON, VARCHAR[]],,VARCHAR[],f
json_extract_string,SCALAR,[JSON, BIGINT],,VARCHAR,f
json_extract_string,SCALAR,[JSON, VARCHAR[]],,VARCHAR[],f
json_extract_string,SCALAR,[VARCHAR, BIGINT],,VARCHAR,f
json_extract_string,SCALAR,[VARCHAR, VARCHAR],,VARCHAR,f
json_extract_string,SCALAR,[VARCHAR, VARCHAR[]],,VARCHAR[],f
json_extract_string,SCALAR,[JSON, VARCHAR],,VARCHAR,f
json_keys,SCALAR,[VARCHAR, VARCHAR],,VARCHAR[],f
json_keys,SCALAR,[VARCHAR],,VARCHAR[],f
json_keys,SCALAR,[JSON, VARCHAR[]],,VARCHAR[][],f
json_keys,SCALAR,[JSON, VARCHAR],,VARCHAR[],f
json_keys,SCALAR,[JSON],,VARCHAR[],f
json_keys,SCALAR,[VARCHAR, VARCHAR[]],,VARCHAR[][],f
json_merge_patch,SCALAR,[],ANY,JSON,f
json_object,SCALAR,[],ANY,JSON,f
json_pretty,SCALAR,[JSON],,VARCHAR,f
json_quote,SCALAR,[],ANY,JSON,f
json_serialize_plan,SCALAR,[VARCHAR, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN],,JSON,f
json_serialize_plan,SCALAR,[VARCHAR, BOOLEAN, BOOLEAN, BOOLEAN],,JSON,f
json_serialize_plan,SCALAR,[VARCHAR, BOOLEAN, BOOLEAN],,JSON,f
json_serialize_plan,SCALAR,[VARCHAR, BOOLEAN],,JSON,f
json_serialize_plan,SCALAR,[VARCHAR],,JSON,f
json_serialize_sql,SCALAR,[VARCHAR, BOOLEAN, BOOLEAN],,JSON,f
json_serialize_sql,SCALAR,[VARCHAR, BOOLEAN],,JSON,f
json_serialize_sql,SCALAR,[VARCHAR],,JSON,f
json_serialize_sql,SCALAR,[VARCHAR, BOOLEAN, BOOLEAN, BOOLEAN],,JSON,f
json_structure,SCALAR,[VARCHAR],,JSON,f
json_structure,SCALAR,[JSON],,JSON,f
json_transform,SCALAR,[VARCHAR, VARCHAR],,ANY,f
json_transform,SCALAR,[JSON, VARCHAR],,ANY,f
json_transform_strict,SCALAR,[JSON, VARCHAR],,ANY,f
json_transform_strict,SCALAR,[VARCHAR, VARCHAR],,ANY,f
json_type,SCALAR,[JSON, VARCHAR],,VARCHAR,f
json_type,SCALAR,[JSON, VARCHAR[]],,VARCHAR[],f
json_type,SCALAR,[JSON],,VARCHAR,f
json_type,SCALAR,[VARCHAR, VARCHAR[]],,VARCHAR[],f
json_type,SCALAR,[VARCHAR, VARCHAR],,VARCHAR,f
json_type,SCALAR,[VARCHAR],,VARCHAR,f
json_valid,SCALAR,[JSON],,BOOLEAN,f
json_valid,SCALAR,[VARCHAR],,BOOLEAN,f
json_value,SCALAR,[JSON, VARCHAR[]],,VARCHAR[],f
json_value,SCALAR,[JSON, VARCHAR],,VARCHAR,f
json_value,SCALAR,[JSON, BIGINT],,VARCHAR,f
json_value,SCALAR,[VARCHAR, VARCHAR[]],,VARCHAR[],f
json_value,SCALAR,[VARCHAR, VARCHAR],,VARCHAR,f
json_value,SCALAR,[VARCHAR, BIGINT],,VARCHAR,f
julian,SCALAR,[TIMESTAMP WITH TIME ZONE],,DOUBLE,f
julian,SCALAR,[DATE],,DOUBLE,f
julian,SCALAR,[TIMESTAMP],,DOUBLE,f
kahan_sum,AGGREGATE,[DOUBLE],,DOUBLE,f
kurtosis,AGGREGATE,[DOUBLE],,DOUBLE,f
kurtosis_pop,AGGREGATE,[DOUBLE],,DOUBLE,f
last,AGGREGATE,[DECIMAL],,DECIMAL,f
last,AGGREGATE,[ANY],,ANY,f
last_day,SCALAR,[TIMESTAMP WITH TIME ZONE],,DATE,f
last_day,SCALAR,[TIMESTAMP],,DATE,f
last_day,SCALAR,[DATE],,DATE,f
lcase,SCALAR,[VARCHAR],,VARCHAR,f
lcm,SCALAR,[HUGEINT, HUGEINT],,HUGEINT,f
lcm,SCALAR,[BIGINT, BIGINT],,BIGINT,f
least,SCALAR,[ANY],ANY,ANY,f
least_common_multiple,SCALAR,[HUGEINT, HUGEINT],,HUGEINT,f
least_common_multiple,SCALAR,[BIGINT, BIGINT],,BIGINT,f
left,SCALAR,[VARCHAR, BIGINT],,VARCHAR,f
left_grapheme,SCALAR,[VARCHAR, BIGINT],,VARCHAR,f
len,SCALAR,[ANY[]],,BIGINT,f
len,SCALAR,[BIT],,BIGINT,f
len,SCALAR,[VARCHAR],,BIGINT,f
length,SCALAR,[BIT],,BIGINT,f
length,SCALAR,[VARCHAR],,BIGINT,f
length,SCALAR,[ANY[]],,BIGINT,f
length_grapheme,SCALAR,[VARCHAR],,BIGINT,f
levenshtein,SCALAR,[VARCHAR, VARCHAR],,BIGINT,f
lgamma,SCALAR,[DOUBLE],,DOUBLE,f
like_escape,SCALAR,[VARCHAR, VARCHAR, VARCHAR],,BOOLEAN,f
list,AGGREGATE,[ANY],,LIST,f
list_aggr,SCALAR,[ANY[], VARCHAR],ANY,ANY,f
list_aggregate,SCALAR,[ANY[], VARCHAR],ANY,ANY,f
list_apply,SCALAR,[ANY[], LAMBDA],,ANY[],f
list_cat,SCALAR,[ANY[], ANY[]],,ANY[],f
list_concat,SCALAR,[ANY[], ANY[]],,ANY[],f
list_contains,SCALAR,[ANY[], ANY],,BOOLEAN,f
list_cosine_distance,SCALAR,[FLOAT[], FLOAT[]],,FLOAT,f
list_cosine_distance,SCALAR,[DOUBLE[], DOUBLE[]],,DOUBLE,f
list_cosine_similarity,SCALAR,[FLOAT[], FLOAT[]],,FLOAT,f
list_cosine_similarity,SCALAR,[DOUBLE[], DOUBLE[]],,DOUBLE,f
list_distance,SCALAR,[FLOAT[], FLOAT[]],,FLOAT,f
list_distance,SCALAR,[DOUBLE[], DOUBLE[]],,DOUBLE,f
list_distinct,SCALAR,[ANY[]],,ANY[],f
list_dot_product,SCALAR,[FLOAT[], FLOAT[]],,FLOAT,f
list_dot_product,SCALAR,[DOUBLE[], DOUBLE[]],,DOUBLE,f
list_element,SCALAR,[ANY[], BIGINT],,ANY,f
list_element,SCALAR,[VARCHAR, BIGINT],,VARCHAR,f
list_extract,SCALAR,[ANY[], BIGINT],,ANY,f
list_extract,SCALAR,[VARCHAR, BIGINT],,VARCHAR,f
list_filter,SCALAR,[ANY[], LAMBDA],,ANY[],f
list_grade_up,SCALAR,[ANY[]],,ANY[],f
list_grade_up,SCALAR,[ANY[], VARCHAR, VARCHAR],,ANY[],f
list_grade_up,SCALAR,[ANY[], VARCHAR],,ANY[],f
list_has,SCALAR,[ANY[], ANY],,BOOLEAN,f
list_has_all,SCALAR,[ANY[], ANY[]],,BOOLEAN,f
list_has_any,SCALAR,[ANY[], ANY[]],,BOOLEAN,f
list_indexof,SCALAR,[ANY[], ANY],,INTEGER,f
list_inner_product,SCALAR,[FLOAT[], FLOAT[]],,FLOAT,f
list_inner_product,SCALAR,[DOUBLE[], DOUBLE[]],,DOUBLE,f
list_negative_dot_product,SCALAR,[FLOAT[], FLOAT[]],,FLOAT,f
list_negative_dot_product,SCALAR,[DOUBLE[], DOUBLE[]],,DOUBLE,f
list_negative_inner_product,SCALAR,[FLOAT[], FLOAT[]],,FLOAT,f
list_negative_inner_product,SCALAR,[DOUBLE[], DOUBLE[]],,DOUBLE,f
list_pack,SCALAR,[],ANY,LIST,f
list_position,SCALAR,[ANY[], ANY],,INTEGER,f
list_reduce,SCALAR,[ANY[], LAMBDA],,ANY,f
list_resize,SCALAR,[ANY[], ANY],,ANY[],f
list_resize,SCALAR,[ANY[], ANY, ANY],,ANY[],f
list_reverse_sort,SCALAR,[ANY[], VARCHAR],,ANY[],f
list_reverse_sort,SCALAR,[ANY[]],,ANY[],f
list_select,SCALAR,[ANY[], BIGINT[]],,ANY[],f
list_slice,SCALAR,[ANY, ANY, ANY, BIGINT],,ANY,f
list_slice,SCALAR,[ANY, ANY, ANY],,ANY,f
list_sort,SCALAR,[ANY[], VARCHAR, VARCHAR],,ANY[],f
list_sort,SCALAR,[ANY[], VARCHAR],,ANY[],f
list_sort,SCALAR,[ANY[]],,ANY[],f
list_transform,SCALAR,[ANY[], LAMBDA],,ANY[],f
list_unique,SCALAR,[ANY[]],,UBIGINT,f
list_value,SCALAR,[],ANY,LIST,f
list_where,SCALAR,[ANY[], BOOLEAN[]],,ANY[],f
list_zip,SCALAR,[],ANY,STRUCT[],f
listagg,AGGREGATE,[ANY, VARCHAR],,VARCHAR,f
listagg,AGGREGATE,[ANY],,VARCHAR,f
ln,SCALAR,[DOUBLE],,DOUBLE,f
log,SCALAR,[DOUBLE],,DOUBLE,f
log,SCALAR,[DOUBLE, DOUBLE],,DOUBLE,f
log10,SCALAR,[DOUBLE],,DOUBLE,f
log2,SCALAR,[DOUBLE],,DOUBLE,f
lower,SCALAR,[VARCHAR],,VARCHAR,f
lpad,SCALAR,[VARCHAR, INTEGER, VARCHAR],,VARCHAR,f
ltrim,SCALAR,[VARCHAR],,VARCHAR,f
ltrim,SCALAR,[VARCHAR, VARCHAR],,VARCHAR,f
mad,AGGREGATE,[TIME WITH TIME ZONE],,INTERVAL,f
mad,AGGREGATE,[FLOAT],,FLOAT,f
mad,AGGREGATE,[TIMESTAMP WITH TIME ZONE],,INTERVAL,f
mad,AGGREGATE,[DECIMAL],,DECIMAL,f
mad,AGGREGATE,[TIMESTAMP],,INTERVAL,f
mad,AGGREGATE,[DATE],,INTERVAL,f
mad,AGGREGATE,[DOUBLE],,DOUBLE,f
mad,AGGREGATE,[TIME],,INTERVAL,f
make_date,SCALAR,[STRUCT("year" BIGINT, "month" BIGINT, "day" BIGINT)],,DATE,f
make_date,SCALAR,[BIGINT, BIGINT, BIGINT],,DATE,f
make_time,SCALAR,[BIGINT, BIGINT, DOUBLE],,TIME,f
make_timestamp,SCALAR,[BIGINT, BIGINT, BIGINT, BIGINT, BIGINT, DOUBLE],,TIMESTAMP,f
make_timestamp,SCALAR,[BIGINT],,TIMESTAMP,f
make_timestamptz,SCALAR,[BIGINT, BIGINT, BIGINT, BIGINT, BIGINT, DOUBLE, VARCHAR],,TIMESTAMP WITH TIME ZONE,f
make_timestamptz,SCALAR,[BIGINT],,TIMESTAMP WITH TIME ZONE,f
make_timestamptz,SCALAR,[BIGINT, BIGINT, BIGINT, BIGINT, BIGINT, DOUBLE],,TIMESTAMP WITH TIME ZONE,f
map,SCALAR,[],ANY,MAP,f
map_concat,SCALAR,[],ANY,LIST,f
map_contains,SCALAR,[MAP(ANY, ANY), ANY],,BOOLEAN,f
map_entries,SCALAR,[],ANY,LIST,f
map_extract,SCALAR,[ANY, ANY],ANY,ANY,f
map_from_entries,SCALAR,[],ANY,MAP,f
map_keys,SCALAR,[],ANY,LIST,f
map_values,SCALAR,[],ANY,LIST,f
max,AGGREGATE,[ANY, BIGINT],,ANY[],f
max,AGGREGATE,[ANY],,ANY,f
max_by,AGGREGATE,[INTEGER, DATE],,INTEGER,f
max_by,AGGREGATE,[DECIMAL, TIMESTAMP],,DECIMAL,f
max_by,AGGREGATE,[DECIMAL, VARCHAR],,DECIMAL,f
max_by,AGGREGATE,[DECIMAL, DOUBLE],,DECIMAL,f
max_by,AGGREGATE,[DECIMAL, HUGEINT],,DECIMAL,f
max_by,AGGREGATE,[DECIMAL, BIGINT],,DECIMAL,f
max_by,AGGREGATE,[DECIMAL, INTEGER],,DECIMAL,f
max_by,AGGREGATE,[BLOB, BLOB],,BLOB,f
max_by,AGGREGATE,[BLOB, TIMESTAMP WITH TIME ZONE],,BLOB,f
max_by,AGGREGATE,[BLOB, TIMESTAMP],,BLOB,f
max_by,AGGREGATE,[BLOB, DATE],,BLOB,f
max_by,AGGREGATE,[BLOB, VARCHAR],,BLOB,f
max_by,AGGREGATE,[BLOB, DOUBLE],,BLOB,f
max_by,AGGREGATE,[BLOB, HUGEINT],,BLOB,f
max_by,AGGREGATE,[BLOB, BIGINT],,BLOB,f
max_by,AGGREGATE,[BLOB, INTEGER],,BLOB,f
max_by,AGGREGATE,[TIMESTAMP WITH TIME ZONE, BLOB],,TIMESTAMP WITH TIME ZONE,f
max_by,AGGREGATE,[TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH TIME ZONE],,TIMESTAMP WITH TIME ZONE,f
max_by,AGGREGATE,[TIMESTAMP WITH TIME ZONE, TIMESTAMP],,TIMESTAMP WITH TIME ZONE,f
max_by,AGGREGATE,[TIMESTAMP WITH TIME ZONE, DATE],,TIMESTAMP WITH TIME ZONE,f
max_by,AGGREGATE,[TIMESTAMP WITH TIME ZONE, VARCHAR],,TIMESTAMP WITH TIME ZONE,f
max_by,AGGREGATE,[TIMESTAMP WITH TIME ZONE, DOUBLE],,TIMESTAMP WITH TIME ZONE,f
max_by,AGGREGATE,[TIMESTAMP WITH TIME ZONE, HUGEINT],,TIMESTAMP WITH TIME ZONE,f
max_by,AGGREGATE,[TIMESTAMP WITH TIME ZONE, BIGINT],,TIMESTAMP WITH TIME ZONE,f
max_by,AGGREGATE,[TIMESTAMP WITH TIME ZONE, INTEGER],,TIMESTAMP WITH TIME ZONE,f
max_by,AGGREGATE,[TIMESTAMP, BLOB],,TIMESTAMP,f
max_by,AGGREGATE,[TIMESTAMP, TIMESTAMP WITH TIME ZONE],,TIMESTAMP,f
max_by,AGGREGATE,[TIMESTAMP, TIMESTAMP],,TIMESTAMP,f
max_by,AGGREGATE,[TIMESTAMP, DATE],,TIMESTAMP,f
max_by,AGGREGATE,[TIMESTAMP, VARCHAR],,TIMESTAMP,f
max_by,AGGREGATE,[TIMESTAMP, DOUBLE],,TIMESTAMP,f
max_by,AGGREGATE,[TIMESTAMP, HUGEINT],,TIMESTAMP,f
max_by,AGGREGATE,[TIMESTAMP, BIGINT],,TIMESTAMP,f
max_by,AGGREGATE,[TIMESTAMP, INTEGER],,TIMESTAMP,f
max_by,AGGREGATE,[DATE, BLOB],,DATE,f
max_by,AGGREGATE,[DATE, TIMESTAMP WITH TIME ZONE],,DATE,f
max_by,AGGREGATE,[DATE, TIMESTAMP],,DATE,f
max_by,AGGREGATE,[DATE, DATE],,DATE,f
max_by,AGGREGATE,[DATE, VARCHAR],,DATE,f
max_by,AGGREGATE,[DATE, DOUBLE],,DATE,f
max_by,AGGREGATE,[DATE, HUGEINT],,DATE,f
max_by,AGGREGATE,[DATE, BIGINT],,DATE,f
max_by,AGGREGATE,[DATE, INTEGER],,DATE,f
max_by,AGGREGATE,[VARCHAR, BLOB],,VARCHAR,f
max_by,AGGREGATE,[VARCHAR, TIMESTAMP WITH TIME ZONE],,VARCHAR,f
max_by,AGGREGATE,[VARCHAR, TIMESTAMP],,VARCHAR,f
max_by,AGGREGATE,[VARCHAR, DATE],,VARCHAR,f
max_by,AGGREGATE,[VARCHAR, VARCHAR],,VARCHAR,f
max_by,AGGREGATE,[VARCHAR, DOUBLE],,VARCHAR,f
max_by,AGGREGATE,[INTEGER, VARCHAR],,INTEGER,f
max_by,AGGREGATE,[DOUBLE, BLOB],,DOUBLE,f
max_by,AGGREGATE,[DOUBLE, TIMESTAMP WITH TIME ZONE],,DOUBLE,f
max_by,AGGREGATE,[DOUBLE, TIMESTAMP],,DOUBLE,f
max_by,AGGREGATE,[DOUBLE, DATE],,DOUBLE,f
max_by,AGGREGATE,[DOUBLE, VARCHAR],,DOUBLE,f
max_by,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
max_by,AGGREGATE,[DOUBLE, HUGEINT],,DOUBLE,f
max_by,AGGREGATE,[DOUBLE, BIGINT],,DOUBLE,f
max_by,AGGREGATE,[DOUBLE, INTEGER],,DOUBLE,f
max_by,AGGREGATE,[BIGINT, BLOB],,BIGINT,f
max_by,AGGREGATE,[BIGINT, TIMESTAMP WITH TIME ZONE],,BIGINT,f
max_by,AGGREGATE,[BIGINT, TIMESTAMP],,BIGINT,f
max_by,AGGREGATE,[BIGINT, DATE],,BIGINT,f
max_by,AGGREGATE,[BIGINT, VARCHAR],,BIGINT,f
max_by,AGGREGATE,[BIGINT, DOUBLE],,BIGINT,f
max_by,AGGREGATE,[BIGINT, HUGEINT],,BIGINT,f
max_by,AGGREGATE,[BIGINT, BIGINT],,BIGINT,f
max_by,AGGREGATE,[BIGINT, INTEGER],,BIGINT,f
max_by,AGGREGATE,[INTEGER, BLOB],,INTEGER,f
max_by,AGGREGATE,[INTEGER, TIMESTAMP WITH TIME ZONE],,INTEGER,f
max_by,AGGREGATE,[VARCHAR, BIGINT],,VARCHAR,f
max_by,AGGREGATE,[VARCHAR, HUGEINT],,VARCHAR,f
max_by,AGGREGATE,[VARCHAR, INTEGER],,VARCHAR,f
max_by,AGGREGATE,[INTEGER, DOUBLE],,INTEGER,f
max_by,AGGREGATE,[INTEGER, HUGEINT],,INTEGER,f
max_by,AGGREGATE,[INTEGER, BIGINT],,INTEGER,f
max_by,AGGREGATE,[INTEGER, INTEGER],,INTEGER,f
max_by,AGGREGATE,[ANY, ANY, BIGINT],,ANY[],f
max_by,AGGREGATE,[ANY, BLOB],,ANY,f
max_by,AGGREGATE,[INTEGER, TIMESTAMP],,INTEGER,f
max_by,AGGREGATE,[ANY, TIMESTAMP WITH TIME ZONE],,ANY,f
max_by,AGGREGATE,[ANY, TIMESTAMP],,ANY,f
max_by,AGGREGATE,[ANY, DATE],,ANY,f
max_by,AGGREGATE,[ANY, VARCHAR],,ANY,f
max_by,AGGREGATE,[ANY, DOUBLE],,ANY,f
max_by,AGGREGATE,[ANY, HUGEINT],,ANY,f
max_by,AGGREGATE,[ANY, ANY],,ANY,f
max_by,AGGREGATE,[ANY, BIGINT],,ANY,f
max_by,AGGREGATE,[ANY, INTEGER],,ANY,f
max_by,AGGREGATE,[DECIMAL, BLOB],,DECIMAL,f
max_by,AGGREGATE,[DECIMAL, TIMESTAMP WITH TIME ZONE],,DECIMAL,f
max_by,AGGREGATE,[DECIMAL, DATE],,DECIMAL,f
md5,SCALAR,[BLOB],,VARCHAR,f
md5,SCALAR,[VARCHAR],,VARCHAR,f
md5_number,SCALAR,[BLOB],,HUGEINT,f
md5_number,SCALAR,[VARCHAR],,HUGEINT,f
mean,AGGREGATE,[SMALLINT],,DOUBLE,f
mean,AGGREGATE,[DOUBLE],,DOUBLE,f
mean,AGGREGATE,[HUGEINT],,DOUBLE,f
mean,AGGREGATE,[BIGINT],,DOUBLE,f
mean,AGGREGATE,[INTEGER],,DOUBLE,f
mean,AGGREGATE,[DECIMAL],,DECIMAL,f
median,AGGREGATE,[ANY],,ANY,f
microsecond,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
microsecond,SCALAR,[TIME WITH TIME ZONE],,BIGINT,f
microsecond,SCALAR,[TIMESTAMP],,BIGINT,f
microsecond,SCALAR,[TIME],,BIGINT,f
microsecond,SCALAR,[INTERVAL],,BIGINT,f
microsecond,SCALAR,[DATE],,BIGINT,f
millennium,SCALAR,[DATE],,BIGINT,f
millennium,SCALAR,[INTERVAL],,BIGINT,f
millennium,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
millennium,SCALAR,[TIMESTAMP],,BIGINT,f
millisecond,SCALAR,[DATE],,BIGINT,f
millisecond,SCALAR,[INTERVAL],,BIGINT,f
millisecond,SCALAR,[TIME],,BIGINT,f
millisecond,SCALAR,[TIMESTAMP],,BIGINT,f
millisecond,SCALAR,[TIME WITH TIME ZONE],,BIGINT,f
millisecond,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
min,AGGREGATE,[ANY, BIGINT],,ANY[],f
min,AGGREGATE,[ANY],,ANY,f
min_by,AGGREGATE,[DECIMAL, BLOB],,DECIMAL,f
min_by,AGGREGATE,[BIGINT, DOUBLE],,BIGINT,f
min_by,AGGREGATE,[TIMESTAMP WITH TIME ZONE, BIGINT],,TIMESTAMP WITH TIME ZONE,f
min_by,AGGREGATE,[TIMESTAMP WITH TIME ZONE, INTEGER],,TIMESTAMP WITH TIME ZONE,f
min_by,AGGREGATE,[TIMESTAMP, BLOB],,TIMESTAMP,f
min_by,AGGREGATE,[TIMESTAMP, TIMESTAMP WITH TIME ZONE],,TIMESTAMP,f
min_by,AGGREGATE,[TIMESTAMP, TIMESTAMP],,TIMESTAMP,f
min_by,AGGREGATE,[TIMESTAMP, DATE],,TIMESTAMP,f
min_by,AGGREGATE,[TIMESTAMP, VARCHAR],,TIMESTAMP,f
min_by,AGGREGATE,[TIMESTAMP, DOUBLE],,TIMESTAMP,f
min_by,AGGREGATE,[TIMESTAMP, HUGEINT],,TIMESTAMP,f
min_by,AGGREGATE,[TIMESTAMP, BIGINT],,TIMESTAMP,f
min_by,AGGREGATE,[TIMESTAMP, INTEGER],,TIMESTAMP,f
min_by,AGGREGATE,[DATE, BLOB],,DATE,f
min_by,AGGREGATE,[DATE, TIMESTAMP WITH TIME ZONE],,DATE,f
min_by,AGGREGATE,[DATE, TIMESTAMP],,DATE,f
min_by,AGGREGATE,[DATE, DATE],,DATE,f
min_by,AGGREGATE,[DATE, VARCHAR],,DATE,f
min_by,AGGREGATE,[DATE, DOUBLE],,DATE,f
min_by,AGGREGATE,[DATE, HUGEINT],,DATE,f
min_by,AGGREGATE,[DATE, BIGINT],,DATE,f
min_by,AGGREGATE,[DATE, INTEGER],,DATE,f
min_by,AGGREGATE,[VARCHAR, BLOB],,VARCHAR,f
min_by,AGGREGATE,[VARCHAR, TIMESTAMP WITH TIME ZONE],,VARCHAR,f
min_by,AGGREGATE,[VARCHAR, TIMESTAMP],,VARCHAR,f
min_by,AGGREGATE,[VARCHAR, DATE],,VARCHAR,f
min_by,AGGREGATE,[VARCHAR, VARCHAR],,VARCHAR,f
min_by,AGGREGATE,[VARCHAR, DOUBLE],,VARCHAR,f
min_by,AGGREGATE,[VARCHAR, HUGEINT],,VARCHAR,f
min_by,AGGREGATE,[VARCHAR, BIGINT],,VARCHAR,f
min_by,AGGREGATE,[VARCHAR, INTEGER],,VARCHAR,f
min_by,AGGREGATE,[DOUBLE, BLOB],,DOUBLE,f
min_by,AGGREGATE,[DOUBLE, TIMESTAMP WITH TIME ZONE],,DOUBLE,f
min_by,AGGREGATE,[DOUBLE, TIMESTAMP],,DOUBLE,f
min_by,AGGREGATE,[DOUBLE, DATE],,DOUBLE,f
min_by,AGGREGATE,[DOUBLE, VARCHAR],,DOUBLE,f
min_by,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
min_by,AGGREGATE,[BIGINT, TIMESTAMP],,BIGINT,f
min_by,AGGREGATE,[BIGINT, BLOB],,BIGINT,f
min_by,AGGREGATE,[DOUBLE, INTEGER],,DOUBLE,f
min_by,AGGREGATE,[DOUBLE, BIGINT],,DOUBLE,f
min_by,AGGREGATE,[TIMESTAMP WITH TIME ZONE, DOUBLE],,TIMESTAMP WITH TIME ZONE,f
min_by,AGGREGATE,[TIMESTAMP WITH TIME ZONE, VARCHAR],,TIMESTAMP WITH TIME ZONE,f
min_by,AGGREGATE,[TIMESTAMP WITH TIME ZONE, DATE],,TIMESTAMP WITH TIME ZONE,f
min_by,AGGREGATE,[TIMESTAMP WITH TIME ZONE, TIMESTAMP],,TIMESTAMP WITH TIME ZONE,f
min_by,AGGREGATE,[TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH TIME ZONE],,TIMESTAMP WITH TIME ZONE,f
min_by,AGGREGATE,[TIMESTAMP WITH TIME ZONE, BLOB],,TIMESTAMP WITH TIME ZONE,f
min_by,AGGREGATE,[BLOB, INTEGER],,BLOB,f
min_by,AGGREGATE,[BLOB, BIGINT],,BLOB,f
min_by,AGGREGATE,[BLOB, HUGEINT],,BLOB,f
min_by,AGGREGATE,[BLOB, DOUBLE],,BLOB,f
min_by,AGGREGATE,[BLOB, VARCHAR],,BLOB,f
min_by,AGGREGATE,[BLOB, DATE],,BLOB,f
min_by,AGGREGATE,[BLOB, TIMESTAMP],,BLOB,f
min_by,AGGREGATE,[BLOB, TIMESTAMP WITH TIME ZONE],,BLOB,f
min_by,AGGREGATE,[BIGINT, BIGINT],,BIGINT,f
min_by,AGGREGATE,[BIGINT, INTEGER],,BIGINT,f
min_by,AGGREGATE,[INTEGER, BLOB],,INTEGER,f
min_by,AGGREGATE,[DOUBLE, HUGEINT],,DOUBLE,f
min_by,AGGREGATE,[INTEGER, TIMESTAMP WITH TIME ZONE],,INTEGER,f
min_by,AGGREGATE,[INTEGER, TIMESTAMP],,INTEGER,f
min_by,AGGREGATE,[INTEGER, DATE],,INTEGER,f
min_by,AGGREGATE,[INTEGER, VARCHAR],,INTEGER,f
min_by,AGGREGATE,[INTEGER, DOUBLE],,INTEGER,f
min_by,AGGREGATE,[INTEGER, HUGEINT],,INTEGER,f
min_by,AGGREGATE,[INTEGER, BIGINT],,INTEGER,f
min_by,AGGREGATE,[INTEGER, INTEGER],,INTEGER,f
min_by,AGGREGATE,[BLOB, BLOB],,BLOB,f
min_by,AGGREGATE,[DECIMAL, INTEGER],,DECIMAL,f
min_by,AGGREGATE,[DECIMAL, BIGINT],,DECIMAL,f
min_by,AGGREGATE,[DECIMAL, HUGEINT],,DECIMAL,f
min_by,AGGREGATE,[DECIMAL, DOUBLE],,DECIMAL,f
min_by,AGGREGATE,[DECIMAL, VARCHAR],,DECIMAL,f
min_by,AGGREGATE,[DECIMAL, DATE],,DECIMAL,f
min_by,AGGREGATE,[DECIMAL, TIMESTAMP],,DECIMAL,f
min_by,AGGREGATE,[DECIMAL, TIMESTAMP WITH TIME ZONE],,DECIMAL,f
min_by,AGGREGATE,[ANY, INTEGER],,ANY,f
min_by,AGGREGATE,[ANY, BIGINT],,ANY,f
min_by,AGGREGATE,[ANY, HUGEINT],,ANY,f
min_by,AGGREGATE,[ANY, DOUBLE],,ANY,f
min_by,AGGREGATE,[ANY, VARCHAR],,ANY,f
min_by,AGGREGATE,[ANY, DATE],,ANY,f
min_by,AGGREGATE,[ANY, TIMESTAMP],,ANY,f
min_by,AGGREGATE,[ANY, TIMESTAMP WITH TIME ZONE],,ANY,f
min_by,AGGREGATE,[ANY, BLOB],,ANY,f
min_by,AGGREGATE,[ANY, ANY],,ANY,f
min_by,AGGREGATE,[ANY, ANY, BIGINT],,ANY[],f
min_by,AGGREGATE,[BIGINT, TIMESTAMP WITH TIME ZONE],,BIGINT,f
min_by,AGGREGATE,[BIGINT, HUGEINT],,BIGINT,f
min_by,AGGREGATE,[BIGINT, DATE],,BIGINT,f
min_by,AGGREGATE,[BIGINT, VARCHAR],,BIGINT,f
min_by,AGGREGATE,[TIMESTAMP WITH TIME ZONE, HUGEINT],,TIMESTAMP WITH TIME ZONE,f
minute,SCALAR,[TIMESTAMP],,BIGINT,f
minute,SCALAR,[TIME WITH TIME ZONE],,BIGINT,f
minute,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
minute,SCALAR,[TIME],,BIGINT,f
minute,SCALAR,[INTERVAL],,BIGINT,f
minute,SCALAR,[DATE],,BIGINT,f
mismatches,SCALAR,[VARCHAR, VARCHAR],,BIGINT,f
mod,SCALAR,[DOUBLE, DOUBLE],,DOUBLE,f
mod,SCALAR,[UTINYINT, UTINYINT],,UTINYINT,f
mod,SCALAR,[UBIGINT, UBIGINT],,UBIGINT,f
mod,SCALAR,[TINYINT, TINYINT],,TINYINT,f
mod,SCALAR,[SMALLINT, SMALLINT],,SMALLINT,f
mod,SCALAR,[INTEGER, INTEGER],,INTEGER,f
mod,SCALAR,[BIGINT, BIGINT],,BIGINT,f
mod,SCALAR,[HUGEINT, HUGEINT],,HUGEINT,f
mod,SCALAR,[FLOAT, FLOAT],,FLOAT,f
mod,SCALAR,[USMALLINT, USMALLINT],,USMALLINT,f
mod,SCALAR,[UINTEGER, UINTEGER],,UINTEGER,f
mod,SCALAR,[DECIMAL, DECIMAL],,DECIMAL,f
mod,SCALAR,[UHUGEINT, UHUGEINT],,UHUGEINT,f
mode,AGGREGATE,[ANY],,ANY,f
month,SCALAR,[DATE],,BIGINT,f
month,SCALAR,[INTERVAL],,BIGINT,f
month,SCALAR,[TIMESTAMP],,BIGINT,f
month,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
monthname,SCALAR,[TIMESTAMP WITH TIME ZONE],,VARCHAR,f
monthname,SCALAR,[DATE],,VARCHAR,f
monthname,SCALAR,[TIMESTAMP],,VARCHAR,f
multiply,SCALAR,[BIGINT, INTERVAL],,INTERVAL,f
multiply,SCALAR,[INTERVAL, BIGINT],,INTERVAL,f
multiply,SCALAR,[FLOAT, FLOAT],,FLOAT,f
multiply,SCALAR,[HUGEINT, HUGEINT],,HUGEINT,f
multiply,SCALAR,[BIGINT, BIGINT],,BIGINT,f
multiply,SCALAR,[INTEGER, INTEGER],,INTEGER,f
multiply,SCALAR,[DOUBLE, DOUBLE],,DOUBLE,f
multiply,SCALAR,[TINYINT, TINYINT],,TINYINT,f
multiply,SCALAR,[UHUGEINT, UHUGEINT],,UHUGEINT,f
multiply,SCALAR,[DECIMAL, DECIMAL],,DECIMAL,f
multiply,SCALAR,[UTINYINT, UTINYINT],,UTINYINT,f
multiply,SCALAR,[USMALLINT, USMALLINT],,USMALLINT,f
multiply,SCALAR,[UINTEGER, UINTEGER],,UINTEGER,f
multiply,SCALAR,[UBIGINT, UBIGINT],,UBIGINT,f
multiply,SCALAR,[SMALLINT, SMALLINT],,SMALLINT,f
nanosecond,SCALAR,[DATE],,BIGINT,f
nanosecond,SCALAR,[INTERVAL],,BIGINT,f
nanosecond,SCALAR,[TIME],,BIGINT,f
nanosecond,SCALAR,[TIME WITH TIME ZONE],,BIGINT,f
nanosecond,SCALAR,[TIMESTAMP_NS],,BIGINT,f
nanosecond,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
nanosecond,SCALAR,[TIMESTAMP],,BIGINT,f
nextafter,SCALAR,[DOUBLE, DOUBLE],,DOUBLE,f
nextafter,SCALAR,[FLOAT, FLOAT],,FLOAT,f
nextval,SCALAR,[VARCHAR],,BIGINT,t
nfc_normalize,SCALAR,[VARCHAR],,VARCHAR,f
not_ilike_escape,SCALAR,[VARCHAR, VARCHAR, VARCHAR],,BOOLEAN,f
not_like_escape,SCALAR,[VARCHAR, VARCHAR, VARCHAR],,BOOLEAN,f
now,SCALAR,[],,TIMESTAMP WITH TIME ZONE,f
octet_length,SCALAR,[BLOB],,BIGINT,f
octet_length,SCALAR,[BIT],,BIGINT,f
ord,SCALAR,[VARCHAR],,INTEGER,f
parse_dirname,SCALAR,[VARCHAR, VARCHAR],,VARCHAR,f
parse_dirname,SCALAR,[VARCHAR],,VARCHAR,f
parse_dirpath,SCALAR,[VARCHAR],,VARCHAR,f
parse_dirpath,SCALAR,[VARCHAR, VARCHAR],,VARCHAR,f
parse_filename,SCALAR,[VARCHAR],,VARCHAR,f
parse_filename,SCALAR,[VARCHAR, VARCHAR],,VARCHAR,f
parse_filename,SCALAR,[VARCHAR, BOOLEAN],,VARCHAR,f
parse_filename,SCALAR,[VARCHAR, BOOLEAN, VARCHAR],,VARCHAR,f
parse_path,SCALAR,[VARCHAR],,VARCHAR[],f
parse_path,SCALAR,[VARCHAR, VARCHAR],,VARCHAR[],f
pi,SCALAR,[],,DOUBLE,f
position,SCALAR,[VARCHAR, VARCHAR],,BIGINT,f
pow,SCALAR,[DOUBLE, DOUBLE],,DOUBLE,f
power,SCALAR,[DOUBLE, DOUBLE],,DOUBLE,f
prefix,SCALAR,[VARCHAR, VARCHAR],,BOOLEAN,f
printf,SCALAR,[VARCHAR],ANY,VARCHAR,f
product,AGGREGATE,[DOUBLE],,DOUBLE,f
quantile,AGGREGATE,[ANY],,ANY,f
quantile,AGGREGATE,[ANY, DOUBLE[]],,ANY,f
quantile,AGGREGATE,[ANY, DOUBLE],,ANY,f
quantile_cont,AGGREGATE,[TINYINT, DOUBLE[]],,TINYINT,f
quantile_cont,AGGREGATE,[SMALLINT, DOUBLE],,SMALLINT,f
quantile_cont,AGGREGATE,[HUGEINT, DOUBLE],,HUGEINT,f
quantile_cont,AGGREGATE,[BIGINT, DOUBLE],,BIGINT,f
quantile_cont,AGGREGATE,[BIGINT, DOUBLE[]],,BIGINT,f
quantile_cont,AGGREGATE,[INTEGER, DOUBLE],,INTEGER,f
quantile_cont,AGGREGATE,[SMALLINT, DOUBLE[]],,SMALLINT,f
quantile_cont,AGGREGATE,[HUGEINT, DOUBLE[]],,HUGEINT,f
quantile_cont,AGGREGATE,[FLOAT, DOUBLE],,FLOAT,f
quantile_cont,AGGREGATE,[FLOAT, DOUBLE[]],,FLOAT,f
quantile_cont,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
quantile_cont,AGGREGATE,[DOUBLE, DOUBLE[]],,DOUBLE,f
quantile_cont,AGGREGATE,[DATE, DOUBLE],,DATE,f
quantile_cont,AGGREGATE,[DATE, DOUBLE[]],,DATE,f
quantile_cont,AGGREGATE,[TIMESTAMP, DOUBLE],,TIMESTAMP,f
quantile_cont,AGGREGATE,[TIMESTAMP, DOUBLE[]],,TIMESTAMP,f
quantile_cont,AGGREGATE,[TIME, DOUBLE],,TIME,f
quantile_cont,AGGREGATE,[TIME, DOUBLE[]],,TIME,f
quantile_cont,AGGREGATE,[TIMESTAMP WITH TIME ZONE, DOUBLE],,TIMESTAMP WITH TIME ZONE,f
quantile_cont,AGGREGATE,[TIMESTAMP WITH TIME ZONE, DOUBLE[]],,TIMESTAMP WITH TIME ZONE,f
quantile_cont,AGGREGATE,[TIME WITH TIME ZONE, DOUBLE],,TIME WITH TIME ZONE,f
quantile_cont,AGGREGATE,[TIME WITH TIME ZONE, DOUBLE[]],,TIME WITH TIME ZONE,f
quantile_cont,AGGREGATE,[DECIMAL, DOUBLE[]],,DECIMAL,f
quantile_cont,AGGREGATE,[DECIMAL, DOUBLE],,DECIMAL,f
quantile_cont,AGGREGATE,[TINYINT, DOUBLE],,TINYINT,f
quantile_cont,AGGREGATE,[INTEGER, DOUBLE[]],,INTEGER,f
quantile_disc,AGGREGATE,[ANY],,ANY,f
quantile_disc,AGGREGATE,[ANY, DOUBLE[]],,ANY,f
quantile_disc,AGGREGATE,[ANY, DOUBLE],,ANY,f
quarter,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
quarter,SCALAR,[DATE],,BIGINT,f
quarter,SCALAR,[INTERVAL],,BIGINT,f
quarter,SCALAR,[TIMESTAMP],,BIGINT,f
radians,SCALAR,[DOUBLE],,DOUBLE,f
random,SCALAR,[],,DOUBLE,t
range,SCALAR,[BIGINT, BIGINT],,BIGINT[],f
range,SCALAR,[BIGINT, BIGINT, BIGINT],,BIGINT[],f
range,SCALAR,[TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH TIME ZONE, INTERVAL],,TIMESTAMP WITH TIME ZONE[],f
range,SCALAR,[TIMESTAMP, TIMESTAMP, INTERVAL],,TIMESTAMP[],f
range,SCALAR,[BIGINT],,BIGINT[],f
reduce,SCALAR,[ANY[], LAMBDA],,ANY,f
regexp_escape,SCALAR,[VARCHAR],,VARCHAR,f
regexp_extract,SCALAR,[VARCHAR, VARCHAR, VARCHAR[], VARCHAR],,VARCHAR,f
regexp_extract,SCALAR,[VARCHAR, VARCHAR, VARCHAR[]],,VARCHAR,f
regexp_extract,SCALAR,[VARCHAR, VARCHAR, INTEGER, VARCHAR],,VARCHAR,f
regexp_extract,SCALAR,[VARCHAR, VARCHAR, INTEGER],,VARCHAR,f
regexp_extract,SCALAR,[VARCHAR, VARCHAR],,VARCHAR,f
regexp_extract_all,SCALAR,[VARCHAR, VARCHAR],,VARCHAR[],f
regexp_extract_all,SCALAR,[VARCHAR, VARCHAR, INTEGER],,VARCHAR[],f
regexp_extract_all,SCALAR,[VARCHAR, VARCHAR, INTEGER, VARCHAR],,VARCHAR[],f
regexp_full_match,SCALAR,[VARCHAR, VARCHAR],,BOOLEAN,f
regexp_full_match,SCALAR,[VARCHAR, VARCHAR, VARCHAR],,BOOLEAN,f
regexp_matches,SCALAR,[VARCHAR, VARCHAR, VARCHAR],,BOOLEAN,f
regexp_matches,SCALAR,[VARCHAR, VARCHAR],,BOOLEAN,f
regexp_replace,SCALAR,[VARCHAR, VARCHAR, VARCHAR, VARCHAR],,VARCHAR,f
regexp_replace,SCALAR,[VARCHAR, VARCHAR, VARCHAR],,VARCHAR,f
regexp_split_to_array,SCALAR,[VARCHAR, VARCHAR],,VARCHAR[],f
regexp_split_to_array,SCALAR,[VARCHAR, VARCHAR, VARCHAR],,VARCHAR[],f
regr_avgx,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
regr_avgy,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
regr_count,AGGREGATE,[DOUBLE, DOUBLE],,UINTEGER,f
regr_intercept,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
regr_r2,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
regr_slope,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
regr_sxx,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
regr_sxy,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
regr_syy,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
repeat,SCALAR,[ANY[], BIGINT],,ANY[],f
repeat,SCALAR,[BLOB, BIGINT],,BLOB,f
repeat,SCALAR,[VARCHAR, BIGINT],,VARCHAR,f
replace,SCALAR,[VARCHAR, VARCHAR, VARCHAR],,VARCHAR,f
reservoir_quantile,AGGREGATE,[TINYINT, DOUBLE[], INTEGER],,TINYINT[],f
reservoir_quantile,AGGREGATE,[DOUBLE, DOUBLE],,DOUBLE,f
reservoir_quantile,AGGREGATE,[HUGEINT, DOUBLE[], INTEGER],,HUGEINT[],f
reservoir_quantile,AGGREGATE,[HUGEINT, DOUBLE[]],,HUGEINT[],f
reservoir_quantile,AGGREGATE,[HUGEINT, DOUBLE, INTEGER],,HUGEINT,f
reservoir_quantile,AGGREGATE,[HUGEINT, DOUBLE],,HUGEINT,f
reservoir_quantile,AGGREGATE,[DECIMAL, DOUBLE],,DECIMAL,f
reservoir_quantile,AGGREGATE,[BIGINT, DOUBLE[]],,BIGINT[],f
reservoir_quantile,AGGREGATE,[BIGINT, DOUBLE, INTEGER],,BIGINT,f
reservoir_quantile,AGGREGATE,[BIGINT, DOUBLE],,BIGINT,f
reservoir_quantile,AGGREGATE,[INTEGER, DOUBLE[], INTEGER],,INTEGER[],f
reservoir_quantile,AGGREGATE,[INTEGER, DOUBLE[]],,INTEGER[],f
reservoir_quantile,AGGREGATE,[INTEGER, DOUBLE, INTEGER],,INTEGER,f
reservoir_quantile,AGGREGATE,[INTEGER, DOUBLE],,INTEGER,f
reservoir_quantile,AGGREGATE,[SMALLINT, DOUBLE[], INTEGER],,SMALLINT[],f
reservoir_quantile,AGGREGATE,[SMALLINT, DOUBLE[]],,SMALLINT[],f
reservoir_quantile,AGGREGATE,[SMALLINT, DOUBLE, INTEGER],,SMALLINT,f
reservoir_quantile,AGGREGATE,[SMALLINT, DOUBLE],,SMALLINT,f
reservoir_quantile,AGGREGATE,[DOUBLE, DOUBLE[]],,DOUBLE[],f
reservoir_quantile,AGGREGATE,[TINYINT, DOUBLE[]],,TINYINT[],f
reservoir_quantile,AGGREGATE,[TINYINT, DOUBLE, INTEGER],,TINYINT,f
reservoir_quantile,AGGREGATE,[TINYINT, DOUBLE],,TINYINT,f
reservoir_quantile,AGGREGATE,[DECIMAL, DOUBLE[], INTEGER],,DECIMAL[],f
reservoir_quantile,AGGREGATE,[DECIMAL, DOUBLE[]],,DECIMAL[],f
reservoir_quantile,AGGREGATE,[DECIMAL, DOUBLE, INTEGER],,DECIMAL,f
reservoir_quantile,AGGREGATE,[BIGINT, DOUBLE[], INTEGER],,BIGINT[],f
reservoir_quantile,AGGREGATE,[FLOAT, DOUBLE, INTEGER],,FLOAT,f
reservoir_quantile,AGGREGATE,[FLOAT, DOUBLE[]],,FLOAT[],f
reservoir_quantile,AGGREGATE,[FLOAT, DOUBLE[], INTEGER],,FLOAT[],f
reservoir_quantile,AGGREGATE,[DOUBLE, DOUBLE, INTEGER],,DOUBLE,f
reservoir_quantile,AGGREGATE,[DOUBLE, DOUBLE[], INTEGER],,DOUBLE[],f
reservoir_quantile,AGGREGATE,[FLOAT, DOUBLE],,FLOAT,f
reverse,SCALAR,[VARCHAR],,VARCHAR,f
right,SCALAR,[VARCHAR, BIGINT],,VARCHAR,f
right_grapheme,SCALAR,[VARCHAR, BIGINT],,VARCHAR,f
round,SCALAR,[FLOAT],,FLOAT,f
round,SCALAR,[FLOAT, INTEGER],,FLOAT,f
round,SCALAR,[DOUBLE],,DOUBLE,f
round,SCALAR,[DOUBLE, INTEGER],,DOUBLE,f
round,SCALAR,[DECIMAL, INTEGER],,DECIMAL,f
round,SCALAR,[DECIMAL],,DECIMAL,f
row,SCALAR,[],ANY,STRUCT,f
row_to_json,SCALAR,[],ANY,JSON,f
rpad,SCALAR,[VARCHAR, INTEGER, VARCHAR],,VARCHAR,f
rtrim,SCALAR,[VARCHAR],,VARCHAR,f
rtrim,SCALAR,[VARCHAR, VARCHAR],,VARCHAR,f
second,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
second,SCALAR,[DATE],,BIGINT,f
second,SCALAR,[INTERVAL],,BIGINT,f
second,SCALAR,[TIME],,BIGINT,f
second,SCALAR,[TIMESTAMP],,BIGINT,f
second,SCALAR,[TIME WITH TIME ZONE],,BIGINT,f
sem,AGGREGATE,[DOUBLE],,DOUBLE,f
set_bit,SCALAR,[BIT, INTEGER, INTEGER],,BIT,f
setseed,SCALAR,[DOUBLE],,"NULL",t
sha1,SCALAR,[VARCHAR],,VARCHAR,f
sha1,SCALAR,[BLOB],,VARCHAR,f
sha256,SCALAR,[VARCHAR],,VARCHAR,f
sha256,SCALAR,[BLOB],,VARCHAR,f
sign,SCALAR,[SMALLINT],,TINYINT,f
sign,SCALAR,[INTEGER],,TINYINT,f
sign,SCALAR,[BIGINT],,TINYINT,f
sign,SCALAR,[HUGEINT],,TINYINT,f
sign,SCALAR,[FLOAT],,TINYINT,f
sign,SCALAR,[DOUBLE],,TINYINT,f
sign,SCALAR,[UTINYINT],,TINYINT,f
sign,SCALAR,[USMALLINT],,TINYINT,f
sign,SCALAR,[UINTEGER],,TINYINT,f
sign,SCALAR,[UBIGINT],,TINYINT,f
sign,SCALAR,[UHUGEINT],,TINYINT,f
sign,SCALAR,[TINYINT],,TINYINT,f
signbit,SCALAR,[FLOAT],,BOOLEAN,f
signbit,SCALAR,[DOUBLE],,BOOLEAN,f
sin,SCALAR,[DOUBLE],,DOUBLE,f
sinh,SCALAR,[DOUBLE],,DOUBLE,f
skewness,AGGREGATE,[DOUBLE],,DOUBLE,f
split,SCALAR,[VARCHAR, VARCHAR],,VARCHAR[],f
sqrt,SCALAR,[DOUBLE],,DOUBLE,f
starts_with,SCALAR,[VARCHAR, VARCHAR],,BOOLEAN,f
stats,SCALAR,[ANY],,VARCHAR,t
stddev,AGGREGATE,[DOUBLE],,DOUBLE,f
stddev_pop,AGGREGATE,[DOUBLE],,DOUBLE,f
stddev_samp,AGGREGATE,[DOUBLE],,DOUBLE,f
str_split,SCALAR,[VARCHAR, VARCHAR],,VARCHAR[],f
str_split_regex,SCALAR,[VARCHAR, VARCHAR, VARCHAR],,VARCHAR[],f
str_split_regex,SCALAR,[VARCHAR, VARCHAR],,VARCHAR[],f
strftime,SCALAR,[VARCHAR, TIMESTAMP_NS],,VARCHAR,f
strftime,SCALAR,[VARCHAR, TIMESTAMP],,VARCHAR,f
strftime,SCALAR,[TIMESTAMP, VARCHAR],,VARCHAR,f
strftime,SCALAR,[VARCHAR, DATE],,VARCHAR,f
strftime,SCALAR,[TIMESTAMP_NS, VARCHAR],,VARCHAR,f
strftime,SCALAR,[DATE, VARCHAR],,VARCHAR,f
strftime,SCALAR,[TIMESTAMP WITH TIME ZONE, VARCHAR],,VARCHAR,f
string_agg,AGGREGATE,[ANY, VARCHAR],,VARCHAR,f
string_agg,AGGREGATE,[ANY],,VARCHAR,f
string_split,SCALAR,[VARCHAR, VARCHAR],,VARCHAR[],f
string_split_regex,SCALAR,[VARCHAR, VARCHAR],,VARCHAR[],f
string_split_regex,SCALAR,[VARCHAR, VARCHAR, VARCHAR],,VARCHAR[],f
string_to_array,SCALAR,[VARCHAR, VARCHAR],,VARCHAR[],f
strip_accents,SCALAR,[VARCHAR],,VARCHAR,f
strlen,SCALAR,[VARCHAR],,BIGINT,f
strpos,SCALAR,[VARCHAR, VARCHAR],,BIGINT,f
strptime,SCALAR,[VARCHAR, VARCHAR[]],,TIMESTAMP,f
strptime,SCALAR,[VARCHAR, VARCHAR],,TIMESTAMP,f
struct_extract,SCALAR,[STRUCT, BIGINT],,ANY,f
struct_extract,SCALAR,[STRUCT, VARCHAR],,ANY,f
struct_insert,SCALAR,[],ANY,STRUCT,f
struct_pack,SCALAR,[],ANY,STRUCT,f
substr,SCALAR,[VARCHAR, BIGINT, BIGINT],,VARCHAR,f
substr,SCALAR,[VARCHAR, BIGINT],,VARCHAR,f
substring,SCALAR,[VARCHAR, BIGINT, BIGINT],,VARCHAR,f
substring,SCALAR,[VARCHAR, BIGINT],,VARCHAR,f
substring_grapheme,SCALAR,[VARCHAR, BIGINT],,VARCHAR,f
substring_grapheme,SCALAR,[VARCHAR, BIGINT, BIGINT],,VARCHAR,f
subtract,SCALAR,[DECIMAL],,DECIMAL,f
subtract,SCALAR,[INTEGER, INTEGER],,INTEGER,f
subtract,SCALAR,[INTERVAL],,INTERVAL,f
subtract,SCALAR,[TIME WITH TIME ZONE, INTERVAL],,TIME WITH TIME ZONE,f
subtract,SCALAR,[INTERVAL, INTERVAL],,INTERVAL,f
subtract,SCALAR,[TIMESTAMP, INTERVAL],,TIMESTAMP,f
subtract,SCALAR,[TIME, INTERVAL],,TIME,f
subtract,SCALAR,[DATE, INTEGER],,DATE,f
subtract,SCALAR,[UTINYINT],,UTINYINT,f
subtract,SCALAR,[DATE, INTERVAL],,TIMESTAMP,f
subtract,SCALAR,[TINYINT],,TINYINT,f
subtract,SCALAR,[TINYINT, TINYINT],,TINYINT,f
subtract,SCALAR,[SMALLINT],,SMALLINT,f
subtract,SCALAR,[DATE, DATE],,BIGINT,f
subtract,SCALAR,[UHUGEINT, UHUGEINT],,UHUGEINT,f
subtract,SCALAR,[UHUGEINT],,UHUGEINT,f
subtract,SCALAR,[UBIGINT, UBIGINT],,UBIGINT,f
subtract,SCALAR,[UBIGINT],,UBIGINT,f
subtract,SCALAR,[UINTEGER, UINTEGER],,UINTEGER,f
subtract,SCALAR,[UINTEGER],,UINTEGER,f
subtract,SCALAR,[USMALLINT, USMALLINT],,USMALLINT,f
subtract,SCALAR,[USMALLINT],,USMALLINT,f
subtract,SCALAR,[UTINYINT, UTINYINT],,UTINYINT,f
subtract,SCALAR,[SMALLINT, SMALLINT],,SMALLINT,f
subtract,SCALAR,[DECIMAL, DECIMAL],,DECIMAL,f
subtract,SCALAR,[INTEGER],,INTEGER,f
subtract,SCALAR,[DOUBLE, DOUBLE],,DOUBLE,f
subtract,SCALAR,[DOUBLE],,DOUBLE,f
subtract,SCALAR,[FLOAT, FLOAT],,FLOAT,f
subtract,SCALAR,[FLOAT],,FLOAT,f
subtract,SCALAR,[HUGEINT, HUGEINT],,HUGEINT,f
subtract,SCALAR,[HUGEINT],,HUGEINT,f
subtract,SCALAR,[BIGINT, BIGINT],,BIGINT,f
subtract,SCALAR,[BIGINT],,BIGINT,f
subtract,SCALAR,[TIMESTAMP, TIMESTAMP],,INTERVAL,f
suffix,SCALAR,[VARCHAR, VARCHAR],,BOOLEAN,f
sum,AGGREGATE,[SMALLINT],,HUGEINT,f
sum,AGGREGATE,[DECIMAL],,DECIMAL,f
sum,AGGREGATE,[INTEGER],,HUGEINT,f
sum,AGGREGATE,[BIGINT],,HUGEINT,f
sum,AGGREGATE,[HUGEINT],,HUGEINT,f
sum,AGGREGATE,[DOUBLE],,DOUBLE,f
sum_no_overflow,AGGREGATE,[INTEGER],,HUGEINT,f
sum_no_overflow,AGGREGATE,[DECIMAL],,DECIMAL,f
sum_no_overflow,AGGREGATE,[BIGINT],,HUGEINT,f
sumkahan,AGGREGATE,[DOUBLE],,DOUBLE,f
tan,SCALAR,[DOUBLE],,DOUBLE,f
tanh,SCALAR,[DOUBLE],,DOUBLE,f
time_bucket,SCALAR,[INTERVAL, TIMESTAMP, TIMESTAMP],,TIMESTAMP,f
time_bucket,SCALAR,[INTERVAL, TIMESTAMP WITH TIME ZONE],,TIMESTAMP WITH TIME ZONE,f
time_bucket,SCALAR,[INTERVAL, TIMESTAMP WITH TIME ZONE, TIMESTAMP WITH TIME ZONE],,TIMESTAMP WITH TIME ZONE,f
time_bucket,SCALAR,[INTERVAL, TIMESTAMP WITH TIME ZONE, VARCHAR],,TIMESTAMP WITH TIME ZONE,f
time_bucket,SCALAR,[INTERVAL, TIMESTAMP, INTERVAL],,TIMESTAMP,f
time_bucket,SCALAR,[INTERVAL, DATE, INTERVAL],,DATE,f
time_bucket,SCALAR,[INTERVAL, DATE, DATE],,DATE,f
time_bucket,SCALAR,[INTERVAL, DATE],,DATE,f
time_bucket,SCALAR,[INTERVAL, TIMESTAMP WITH TIME ZONE, INTERVAL],,TIMESTAMP WITH TIME ZONE,f
time_bucket,SCALAR,[INTERVAL, TIMESTAMP],,TIMESTAMP,f
timetz_byte_comparable,SCALAR,[TIME WITH TIME ZONE],,UBIGINT,f
timezone,SCALAR,[VARCHAR, TIMESTAMP],,TIMESTAMP WITH TIME ZONE,f
timezone,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
timezone,SCALAR,[VARCHAR, TIMESTAMP WITH TIME ZONE],,TIMESTAMP,f
timezone,SCALAR,[INTERVAL, TIME WITH TIME ZONE],,TIME WITH TIME ZONE,f
timezone,SCALAR,[INTERVAL],,BIGINT,f
timezone,SCALAR,[DATE],,BIGINT,f
timezone,SCALAR,[TIMESTAMP],,BIGINT,f
timezone,SCALAR,[VARCHAR, TIME WITH TIME ZONE],,TIME WITH TIME ZONE,f
timezone_hour,SCALAR,[DATE],,BIGINT,f
timezone_hour,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
timezone_hour,SCALAR,[TIMESTAMP],,BIGINT,f
timezone_hour,SCALAR,[INTERVAL],,BIGINT,f
timezone_minute,SCALAR,[DATE],,BIGINT,f
timezone_minute,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
timezone_minute,SCALAR,[TIMESTAMP],,BIGINT,f
timezone_minute,SCALAR,[INTERVAL],,BIGINT,f
to_base,SCALAR,[BIGINT, INTEGER, INTEGER],,VARCHAR,f
to_base,SCALAR,[BIGINT, INTEGER],,VARCHAR,f
to_base64,SCALAR,[BLOB],,VARCHAR,f
to_binary,SCALAR,[HUGEINT],,VARCHAR,f
to_binary,SCALAR,[UHUGEINT],,VARCHAR,f
to_binary,SCALAR,[BIGINT],,VARCHAR,f
to_binary,SCALAR,[VARINT],,VARCHAR,f
to_binary,SCALAR,[VARCHAR],,VARCHAR,f
to_binary,SCALAR,[UBIGINT],,VARCHAR,f
to_centuries,SCALAR,[INTEGER],,INTERVAL,f
to_days,SCALAR,[INTEGER],,INTERVAL,f
to_decades,SCALAR,[INTEGER],,INTERVAL,f
to_hex,SCALAR,[VARCHAR],,VARCHAR,f
to_hex,SCALAR,[UHUGEINT],,VARCHAR,f
to_hex,SCALAR,[HUGEINT],,VARCHAR,f
to_hex,SCALAR,[UBIGINT],,VARCHAR,f
to_hex,SCALAR,[BIGINT],,VARCHAR,f
to_hex,SCALAR,[BLOB],,VARCHAR,f
to_hex,SCALAR,[VARINT],,VARCHAR,f
to_hours,SCALAR,[BIGINT],,INTERVAL,f
to_json,SCALAR,[],ANY,JSON,f
to_microseconds,SCALAR,[BIGINT],,INTERVAL,f
to_millennia,SCALAR,[INTEGER],,INTERVAL,f
to_milliseconds,SCALAR,[DOUBLE],,INTERVAL,f
to_minutes,SCALAR,[BIGINT],,INTERVAL,f
to_months,SCALAR,[INTEGER],,INTERVAL,f
to_quarters,SCALAR,[INTEGER],,INTERVAL,f
to_seconds,SCALAR,[DOUBLE],,INTERVAL,f
to_timestamp,SCALAR,[DOUBLE],,TIMESTAMP WITH TIME ZONE,f
to_weeks,SCALAR,[INTEGER],,INTERVAL,f
to_years,SCALAR,[INTEGER],,INTERVAL,f
today,SCALAR,[],,DATE,f
transaction_timestamp,SCALAR,[],,TIMESTAMP WITH TIME ZONE,f
translate,SCALAR,[VARCHAR, VARCHAR, VARCHAR],,VARCHAR,f
trim,SCALAR,[VARCHAR],,VARCHAR,f
trim,SCALAR,[VARCHAR, VARCHAR],,VARCHAR,f
trunc,SCALAR,[TINYINT],,TINYINT,f
trunc,SCALAR,[SMALLINT],,SMALLINT,f
trunc,SCALAR,[INTEGER],,INTEGER,f
trunc,SCALAR,[UHUGEINT],,UHUGEINT,f
trunc,SCALAR,[UBIGINT],,UBIGINT,f
trunc,SCALAR,[BIGINT],,BIGINT,f
trunc,SCALAR,[FLOAT],,FLOAT,f
trunc,SCALAR,[UINTEGER],,UINTEGER,f
trunc,SCALAR,[UTINYINT],,UTINYINT,f
trunc,SCALAR,[USMALLINT],,USMALLINT,f
trunc,SCALAR,[HUGEINT],,HUGEINT,f
trunc,SCALAR,[DECIMAL],,DECIMAL,f
trunc,SCALAR,[DOUBLE],,DOUBLE,f
try_strptime,SCALAR,[VARCHAR, VARCHAR[]],,TIMESTAMP,f
try_strptime,SCALAR,[VARCHAR, VARCHAR],,TIMESTAMP,f
txid_current,SCALAR,[],,UBIGINT,f
typeof,SCALAR,[ANY],,VARCHAR,f
ucase,SCALAR,[VARCHAR],,VARCHAR,f
unbin,SCALAR,[VARCHAR],,BLOB,f
unhex,SCALAR,[VARCHAR],,BLOB,f
unicode,SCALAR,[VARCHAR],,INTEGER,f
union_extract,SCALAR,[UNION, VARCHAR],,ANY,f
union_tag,SCALAR,[UNION],,ANY,f
union_value,SCALAR,[],ANY,UNION,f
unpivot_list,SCALAR,[],ANY,LIST,f
upper,SCALAR,[VARCHAR],,VARCHAR,f
url_decode,SCALAR,[VARCHAR],,VARCHAR,f
url_encode,SCALAR,[VARCHAR],,VARCHAR,f
uuid,SCALAR,[],,UUID,t
var_pop,AGGREGATE,[DOUBLE],,DOUBLE,f
var_samp,AGGREGATE,[DOUBLE],,DOUBLE,f
variance,AGGREGATE,[DOUBLE],,DOUBLE,f
vector_type,SCALAR,[ANY],,VARCHAR,f
version,SCALAR,[],,VARCHAR,f
week,SCALAR,[DATE],,BIGINT,f
week,SCALAR,[INTERVAL],,BIGINT,f
week,SCALAR,[TIMESTAMP],,BIGINT,f
week,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
weekday,SCALAR,[DATE],,BIGINT,f
weekday,SCALAR,[INTERVAL],,BIGINT,f
weekday,SCALAR,[TIMESTAMP],,BIGINT,f
weekday,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
weekofyear,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
weekofyear,SCALAR,[DATE],,BIGINT,f
weekofyear,SCALAR,[INTERVAL],,BIGINT,f
weekofyear,SCALAR,[TIMESTAMP],,BIGINT,f
xor,SCALAR,[TINYINT, TINYINT],,TINYINT,f
xor,SCALAR,[UHUGEINT, UHUGEINT],,UHUGEINT,f
xor,SCALAR,[SMALLINT, SMALLINT],,SMALLINT,f
xor,SCALAR,[UBIGINT, UBIGINT],,UBIGINT,f
xor,SCALAR,[UINTEGER, UINTEGER],,UINTEGER,f
xor,SCALAR,[USMALLINT, USMALLINT],,USMALLINT,f
xor,SCALAR,[UTINYINT, UTINYINT],,UTINYINT,f
xor,SCALAR,[HUGEINT, HUGEINT],,HUGEINT,f
xor,SCALAR,[BIGINT, BIGINT],,BIGINT,f
xor,SCALAR,[INTEGER, INTEGER],,INTEGER,f
xor,SCALAR,[BIT, BIT],,BIT,f
year,SCALAR,[TIMESTAMP],,BIGINT,f
year,SCALAR,[INTERVAL],,BIGINT,f
year,SCALAR,[DATE],,BIGINT,f
year,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
yearweek,SCALAR,[TIMESTAMP],,BIGINT,f
yearweek,SCALAR,[INTERVAL],,BIGINT,f
yearweek,SCALAR,[DATE],,BIGINT,f
yearweek,SCALAR,[TIMESTAMP WITH TIME ZONE],,BIGINT,f
|,SCALAR,[TINYINT, TINYINT],,TINYINT,f
|,SCALAR,[UBIGINT, UBIGINT],,UBIGINT,f
|,SCALAR,[UTINYINT, UTINYINT],,UTINYINT,f
|,SCALAR,[SMALLINT, SMALLINT],,SMALLINT,f
|,SCALAR,[INTEGER, INTEGER],,INTEGER,f
|,SCALAR,[BIGINT, BIGINT],,BIGINT,f
|,SCALAR,[HUGEINT, HUGEINT],,HUGEINT,f
|,SCALAR,[USMALLINT, USMALLINT],,USMALLINT,f
|,SCALAR,[UINTEGER, UINTEGER],,UINTEGER,f
|,SCALAR,[BIT, BIT],,BIT,f
|,SCALAR,[UHUGEINT, UHUGEINT],,UHUGEINT,f
||,SCALAR,[ANY, ANY],,ANY,f
~,SCALAR,[HUGEINT],,HUGEINT,f
~,SCALAR,[BIGINT],,BIGINT,f
~,SCALAR,[SMALLINT],,SMALLINT,f
~,SCALAR,[UTINYINT],,UTINYINT,f
~,SCALAR,[USMALLINT],,USMALLINT,f
~,SCALAR,[UINTEGER],,UINTEGER,f
~,SCALAR,[UBIGINT],,UBIGINT,f
~,SCALAR,[UHUGEINT],,UHUGEINT,f
~,SCALAR,[BIT],,BIT,f
~,SCALAR,[TINYINT],,TINYINT,f
~,SCALAR,[INTEGER],,INTEGER,f
~~,SCALAR,[VARCHAR, VARCHAR],,BOOLEAN,f
~~*,SCALAR,[VARCHAR, VARCHAR],,BOOLEAN,f
~~~,SCALAR,[VARCHAR, VARCHAR],,BOOLEAN,f

QUERY  PRAGMA version;
Time   0.035 seconds
return 1 rows
library_version(adVarChar 200 ),source_id(adVarChar 200 )
v1.1.4-dev1904,fb7701fec0

QUERY  PRAGMA platform;
Time   0.035 seconds
return 1 rows
platform(adVarChar 200 )
windows_amd64

QUERY  PRAGMA metadata_info;
Time   0.004 seconds
return -1
ERROR  recordset contains no records|

QUERY  PRAGMA enable_profiling;
Time   0.015 seconds
return -1
ERROR  query did not return an open recordset|

QUERY  SET enable_profiling = 'query_tree';
Time   0.02 seconds
return -1
ERROR  query did not return an open recordset|

QUERY  select * from cities;
Time   0.02 seconds
return -1
ERROR  -2147217911:ODBC_DuckDB->PrepareStmt
Catalog Error: Table with name cities does not exist!
Did you mean "pg_views"?

LINE 1: select * from cities;
                      ^


QUERY  PRAGMA disable_profiling;
Time   0.016 seconds
return -1
ERROR  query did not return an open recordset|

QUERY  select * from cities;
Time   0.016 seconds
return -1
ERROR  -2147217911:ODBC_DuckDB->PrepareStmt
Catalog Error: Table with name cities does not exist!
Did you mean "pg_views"?

LINE 1: select * from cities;
                      ^


QUERY  PRAGMA enable_verification;
Time   0 seconds
return -1
ERROR  query did not return an open recordset|

QUERY  select * from cities;
Time   0 seconds
return -1
ERROR  -2147217911:ODBC_DuckDB->PrepareStmt
Catalog Error: Table with name cities does not exist!
Did you mean "pg_views"?

LINE 1: select * from cities;
                      ^


QUERY  PRAGMA disable_verification;
Time   0.016 seconds
return -1
ERROR  query did not return an open recordset|

QUERY  SET log_query_path = '';
Time   0.019 seconds
return -1
ERROR  query did not return an open recordset|

QUERY  DROP TABLE IF EXISTS weather;
Time   0.019 seconds
return -1
ERROR  query did not return an open recordset|

QUERY  CREATE TABLE weather (     city           VARCHAR,     temp_lo        INTEGER,    temp_hi        INTEGER,    prcp           REAL,     date           DATE ); 
Time   0.02 seconds
return -1
ERROR  query did not return an open recordset|

QUERY  DROP TABLE IF EXISTS cities;
Time   0.016 seconds
return -1
ERROR  query did not return an open recordset|

QUERY  CREATE TABLE cities (     name            VARCHAR,     lat             DECIMAL,     lon             DECIMAL ); 
Time   0.015 seconds
return -1
ERROR  query did not return an open recordset|

QUERY  INSERT INTO weather VALUES ('San Francisco', 46, 50, 0.25, '1994-11-27');
Time   0.031 seconds
return -1
ERROR  query did not return an open recordset|

QUERY  INSERT INTO weather VALUES ('New York', 45, 50, 0.25, '1994-11-27');
Time   0.015 seconds
return -1
ERROR  query did not return an open recordset|

QUERY  INSERT INTO weather (city, temp_lo, temp_hi, prcp, date) VALUES('San Francisco', 43, 57, 0.0, '1994-11-29');
Time   0.012 seconds
return -1
ERROR  query did not return an open recordset|

QUERY  INSERT INTO weather (date, city, temp_hi, temp_lo) VALUES ('1994-11-29', 'Hayward', 54, 37); 
Time   0.008 seconds
return -1
ERROR  query did not return an open recordset|

QUERY  INSERT INTO cities VALUES ('San Francisco', 1,1);
Time   0.015 seconds
return -1
ERROR  query did not return an open recordset|

QUERY  INSERT INTO cities VALUES ('New York',2,2);
Time   0.012 seconds
return -1
ERROR  query did not return an open recordset|

QUERY  PRAGMA table_info('weather');
Time   0.019 seconds
return 5 rows
cid(adInteger 3 ),name(adVarChar 200 ),type(adVarChar 200 ),notnull(adChar 129 ),dflt_value(adVarChar 200 ),pk(adChar 129 )
0,city,VARCHAR,f,,f
1,temp_lo,INTEGER,f,,f
2,temp_hi,INTEGER,f,,f
3,prcp,FLOAT,f,,f
4,date,DATE,f,,f

QUERY  select * from weather;
Time   0.023 seconds
return 4 rows
city(adVarChar 200 ),temp_lo(adInteger 3 ),temp_hi(adInteger 3 ),prcp(adDouble 5 ),date(adDBDate 133 )
San Francisco,46,50,0.25,date(adDBDate):11/27/1994 bin2str:1.1./.2.7./.1.9.9.4. hex:310031002F00320037002F003100390039003400
New York,45,50,0.25,date(adDBDate):11/27/1994 bin2str:1.1./.2.7./.1.9.9.4. hex:310031002F00320037002F003100390039003400
San Francisco,43,57,0,date(adDBDate):11/29/1994 bin2str:1.1./.2.9./.1.9.9.4. hex:310031002F00320039002F003100390039003400
Hayward,37,54,,date(adDBDate):11/29/1994 bin2str:1.1./.2.9./.1.9.9.4. hex:310031002F00320039002F003100390039003400

QUERY  select count(*) from weather;
Time   0.023 seconds
return 1 rows
count_star()(adBigInt 20 )
4

QUERY  SELECT city, (temp_hi+temp_lo)/2 AS temp_avg, date FROM weather;
Time   0.028 seconds
return 4 rows
city(adVarChar 200 ),temp_avg(adDouble 5 ),date(adDBDate 133 )
San Francisco,48,date(adDBDate):11/27/1994 bin2str:1.1./.2.7./.1.9.9.4. hex:310031002F00320037002F003100390039003400
New York,47.5,date(adDBDate):11/27/1994 bin2str:1.1./.2.7./.1.9.9.4. hex:310031002F00320037002F003100390039003400
San Francisco,50,date(adDBDate):11/29/1994 bin2str:1.1./.2.9./.1.9.9.4. hex:310031002F00320039002F003100390039003400
Hayward,45.5,date(adDBDate):11/29/1994 bin2str:1.1./.2.9./.1.9.9.4. hex:310031002F00320039002F003100390039003400

QUERY  SELECT * FROM weather WHERE city = 'San Francisco' AND prcp > 0.0;
Time   0.024 seconds
return 1 rows
city(adVarChar 200 ),temp_lo(adInteger 3 ),temp_hi(adInteger 3 ),prcp(adDouble 5 ),date(adDBDate 133 )
San Francisco,46,50,0.25,date(adDBDate):11/27/1994 bin2str:1.1./.2.7./.1.9.9.4. hex:310031002F00320037002F003100390039003400

QUERY  SELECT * FROM weather ORDER BY city;
Time   0.024 seconds
return 4 rows
city(adVarChar 200 ),temp_lo(adInteger 3 ),temp_hi(adInteger 3 ),prcp(adDouble 5 ),date(adDBDate 133 )
Hayward,37,54,,date(adDBDate):11/29/1994 bin2str:1.1./.2.9./.1.9.9.4. hex:310031002F00320039002F003100390039003400
New York,45,50,0.25,date(adDBDate):11/27/1994 bin2str:1.1./.2.7./.1.9.9.4. hex:310031002F00320037002F003100390039003400
San Francisco,46,50,0.25,date(adDBDate):11/27/1994 bin2str:1.1./.2.7./.1.9.9.4. hex:310031002F00320037002F003100390039003400
San Francisco,43,57,0,date(adDBDate):11/29/1994 bin2str:1.1./.2.9./.1.9.9.4. hex:310031002F00320039002F003100390039003400

QUERY  SELECT * FROM weather ORDER BY city, temp_lo;
Time   0.032 seconds
return 4 rows
city(adVarChar 200 ),temp_lo(adInteger 3 ),temp_hi(adInteger 3 ),prcp(adDouble 5 ),date(adDBDate 133 )
Hayward,37,54,,date(adDBDate):11/29/1994 bin2str:1.1./.2.9./.1.9.9.4. hex:310031002F00320039002F003100390039003400
New York,45,50,0.25,date(adDBDate):11/27/1994 bin2str:1.1./.2.7./.1.9.9.4. hex:310031002F00320037002F003100390039003400
San Francisco,43,57,0,date(adDBDate):11/29/1994 bin2str:1.1./.2.9./.1.9.9.4. hex:310031002F00320039002F003100390039003400
San Francisco,46,50,0.25,date(adDBDate):11/27/1994 bin2str:1.1./.2.7./.1.9.9.4. hex:310031002F00320037002F003100390039003400

QUERY  SELECT DISTINCT city FROM weather;
Time   0.02 seconds
return 3 rows
city(adVarChar 200 )
Hayward
New York
San Francisco

QUERY  SELECT DISTINCT city FROM weather ORDER BY city;
Time   0.031 seconds
return 3 rows
city(adVarChar 200 )
Hayward
New York
San Francisco

no location data for hayward
QUERY  SELECT * FROM weather, cities WHERE city = 'hayward';
Time   0.012 seconds
return -1
ERROR  recordset contains no records|

QUERY  SELECT city, temp_lo, temp_hi, prcp, date, lon, lat FROM weather, cities WHERE city = 'hayward';
Time   0.015 seconds
return -1
ERROR  recordset contains no records|

QUERY  SELECT weather.city, weather.temp_lo, weather.temp_hi, weather.prcp, weather.date, cities.lon, cities.lat FROM weather, cities WHERE cities.name = weather.city;
Time   0.023 seconds
return 3 rows
city(adVarChar 200 ),temp_lo(adInteger 3 ),temp_hi(adInteger 3 ),prcp(adDouble 5 ),date(adDBDate 133 ),lon(adDouble 5 ),lat(adDouble 5 )
San Francisco,46,50,0.25,date(adDBDate):11/27/1994 bin2str:1.1./.2.7./.1.9.9.4. hex:310031002F00320037002F003100390039003400,1,1
New York,45,50,0.25,date(adDBDate):11/27/1994 bin2str:1.1./.2.7./.1.9.9.4. hex:310031002F00320037002F003100390039003400,2,2
San Francisco,43,57,0,date(adDBDate):11/29/1994 bin2str:1.1./.2.9./.1.9.9.4. hex:310031002F00320039002F003100390039003400,1,1

QUERY  SELECT * FROM weather INNER JOIN cities ON (weather.city = cities.name);
Time   0.024 seconds
return 3 rows
city(adVarChar 200 ),temp_lo(adInteger 3 ),temp_hi(adInteger 3 ),prcp(adDouble 5 ),date(adDBDate 133 ),name(adVarChar 200 ),lat(adDouble 5 ),lon(adDouble 5 )
San Francisco,46,50,0.25,date(adDBDate):11/27/1994 bin2str:1.1./.2.7./.1.9.9.4. hex:310031002F00320037002F003100390039003400,San Francisco,1,1
New York,45,50,0.25,date(adDBDate):11/27/1994 bin2str:1.1./.2.7./.1.9.9.4. hex:310031002F00320037002F003100390039003400,New York,2,2
San Francisco,43,57,0,date(adDBDate):11/29/1994 bin2str:1.1./.2.9./.1.9.9.4. hex:310031002F00320039002F003100390039003400,San Francisco,1,1

QUERY  SELECT * FROM weather LEFT OUTER JOIN cities ON (weather.city = cities.name);
Time   0.028 seconds
return 4 rows
city(adVarChar 200 ),temp_lo(adInteger 3 ),temp_hi(adInteger 3 ),prcp(adDouble 5 ),date(adDBDate 133 ),name(adVarChar 200 ),lat(adDouble 5 ),lon(adDouble 5 )
San Francisco,46,50,0.25,date(adDBDate):11/27/1994 bin2str:1.1./.2.7./.1.9.9.4. hex:310031002F00320037002F003100390039003400,San Francisco,1,1
New York,45,50,0.25,date(adDBDate):11/27/1994 bin2str:1.1./.2.7./.1.9.9.4. hex:310031002F00320037002F003100390039003400,New York,2,2
San Francisco,43,57,0,date(adDBDate):11/29/1994 bin2str:1.1./.2.9./.1.9.9.4. hex:310031002F00320039002F003100390039003400,San Francisco,1,1
Hayward,37,54,,date(adDBDate):11/29/1994 bin2str:1.1./.2.9./.1.9.9.4. hex:310031002F00320039002F003100390039003400,,,

QUERY  SELECT max(temp_lo) FROM weather;
Time   0.031 seconds
return 1 rows
max(temp_lo)(adInteger 3 )
46

QUERY  SELECT city FROM weather WHERE temp_lo = (SELECT max(temp_lo) FROM weather);
Time   0.027 seconds
return 1 rows
city(adVarChar 200 )
San Francisco

QUERY  SELECT city, max(temp_lo) FROM weather GROUP BY city;
Time   0.015 seconds
return 3 rows
city(adVarChar 200 ),max(temp_lo)(adInteger 3 )
Hayward,37
San Francisco,46
New York,45

QUERY  SELECT city, max(temp_lo) FROM weather GROUP BY city HAVING max(temp_lo) < 40;
Time   0.035 seconds
return 1 rows
city(adVarChar 200 ),max(temp_lo)(adInteger 3 )
Hayward,37

QUERY  SELECT city, max(temp_lo) FROM weather WHERE city LIKE 'S%' GROUP BY city HAVING max(temp_lo) < 40;
Time   0.008 seconds
return -1
ERROR  recordset contains no records|

QUERY  UPDATE weather SET temp_hi = temp_hi - 2,  temp_lo = temp_lo - 2 WHERE date > '1994-11-28';
Time   0.028 seconds
return -1
ERROR  query did not return an open recordset|

QUERY  SELECT * FROM weather;
Time   0.023 seconds
return 4 rows
city(adVarChar 200 ),temp_lo(adInteger 3 ),temp_hi(adInteger 3 ),prcp(adDouble 5 ),date(adDBDate 133 )
San Francisco,46,50,0.25,date(adDBDate):11/27/1994 bin2str:1.1./.2.7./.1.9.9.4. hex:310031002F00320037002F003100390039003400
New York,45,50,0.25,date(adDBDate):11/27/1994 bin2str:1.1./.2.7./.1.9.9.4. hex:310031002F00320037002F003100390039003400
San Francisco,41,55,0,date(adDBDate):11/29/1994 bin2str:1.1./.2.9./.1.9.9.4. hex:310031002F00320039002F003100390039003400
Hayward,35,52,,date(adDBDate):11/29/1994 bin2str:1.1./.2.9./.1.9.9.4. hex:310031002F00320039002F003100390039003400

QUERY  DELETE FROM weather WHERE city = 'Hayward';
Time   0.012 seconds
return -1
ERROR  query did not return an open recordset|

QUERY  SELECT * FROM weather;
Time   0.023 seconds
return 3 rows
city(adVarChar 200 ),temp_lo(adInteger 3 ),temp_hi(adInteger 3 ),prcp(adDouble 5 ),date(adDBDate 133 )
San Francisco,46,50,0.25,date(adDBDate):11/27/1994 bin2str:1.1./.2.7./.1.9.9.4. hex:310031002F00320037002F003100390039003400
New York,45,50,0.25,date(adDBDate):11/27/1994 bin2str:1.1./.2.7./.1.9.9.4. hex:310031002F00320037002F003100390039003400
San Francisco,41,55,0,date(adDBDate):11/29/1994 bin2str:1.1./.2.9./.1.9.9.4. hex:310031002F00320039002F003100390039003400

duckdbGetSchema same table reqeusted by GetSchema() .NET method
QUERY  SELECT          table_catalog::VARCHAR "TABLE_CAT"        , table_schema "TABLE_SCHEM"        , table_name "TABLE_NAME"        , CASE                   WHEN table_type='BASE TABLE'                            THEN 'TABLE'                            ELSE table_type          END "TABLE_TYPE"        , '' "REMARKS" FROM          information_schema.tables WHERE          COALESCE("TABLE_SCHEM",'') LIKE  '%' ESCAPE '\'          AND COALESCE("TABLE_NAME",'') LIKE  '%' ESCAPE '\'          AND table_type IN ('BASE TABLE') ORDER BY          TABLE_TYPE        , TABLE_CATALOG        , TABLE_SCHEMA        , TABLE_NAME;
Time   0.027 seconds
return 2 rows
TABLE_CAT(adVarChar 200 ),TABLE_SCHEM(adVarChar 200 ),TABLE_NAME(adVarChar 200 ),TABLE_TYPE(adVarChar 200 ),REMARKS(adVarChar 200 )
test,main,cities,TABLE,
test,main,weather,TABLE,

sqlite_master table
QUERY  SELECT * from sqlite_master;
Time   0.039 seconds
return 2 rows
type(adVarChar 200 ),name(adVarChar 200 ),tbl_name(adVarChar 200 ),rootpage(adInteger 3 ),sql(adVarChar 200 )
table,cities,cities,0,CREATE TABLE cities("name" VARCHAR, lat DECIMAL(18,3), lon DECIMAL(18,3));
table,weather,weather,0,CREATE TABLE weather(city VARCHAR, temp_lo INTEGER, temp_hi INTEGER, prcp FLOAT, date DATE);

class_terminate
